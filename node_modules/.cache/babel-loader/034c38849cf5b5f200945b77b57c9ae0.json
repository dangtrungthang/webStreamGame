{"ast":null,"code":"\"use strict\";\n/**\r\n * PopupContainerViewBase.tsx\r\n *\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT license.\r\n *\r\n * Common parent of all components rendered into a popup. Calls onShow and onHide\r\n * callbacks when the popup is hidden (i.e. \"closed\" but still rendered as hidden)\r\n * and re-shown. Abstract class to be overriden per platform.\r\n */\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PopupContainerViewBase = exports.recalcPositionFromLayoutData = void 0;\n\nvar PropTypes = require(\"prop-types\");\n\nvar React = require(\"react\"); // Width of the \"alley\" around popups so they don't get too close to the boundary of the screen boundary.\n\n\nvar ALLEY_WIDTH = 2; // How close to the edge of the popup should we allow the anchor offset to get before\n// attempting a different position?\n\nvar MIN_ANCHOR_OFFSET = 16; // Undefined response means to dismiss the popup\n\nfunction recalcPositionFromLayoutData(windowDims, anchorRect, popupRect, positionPriorities, useInnerPositioning) {\n  // If the anchor has disappeared, dismiss the popup.\n  if (!(anchorRect.width > 0 && anchorRect.height > 0)) {\n    return undefined;\n  } // If the anchor is no longer in the window's bounds, cancel the popup.\n\n\n  if (anchorRect.left >= windowDims.width || anchorRect.right <= 0 || anchorRect.bottom <= 0 || anchorRect.top >= windowDims.height) {\n    return undefined;\n  }\n\n  var positionsToTry = positionPriorities;\n\n  if (!positionsToTry || positionsToTry.length === 0) {\n    positionsToTry = ['bottom', 'right', 'top', 'left'];\n  }\n\n  if (positionsToTry.length === 1 && positionsToTry[0] === 'context') {\n    // Context only works with exact matches, so fall back to walking around the compass if it doesn't fit exactly.\n    positionsToTry.push('bottom', 'right', 'top', 'left');\n  }\n\n  if (useInnerPositioning) {\n    // If the popup is meant to be shown inside the anchor we need to recalculate\n    // the position differently.\n    return recalcInnerPosition(anchorRect, positionsToTry[0], popupRect.width, popupRect.height);\n  } // Start by assuming that we'll be unconstrained.\n\n\n  var result = {\n    popupX: 0,\n    popupY: 0,\n    anchorOffset: 0,\n    anchorPosition: 'top',\n    constrainedPopupWidth: popupRect.width,\n    constrainedPopupHeight: popupRect.height\n  };\n  var foundPerfectFit = false;\n  var foundPartialFit = false;\n  positionsToTry.forEach(function (pos) {\n    if (!foundPerfectFit) {\n      var absX = 0;\n      var absY = 0;\n      var anchorOffset = 0;\n      var constrainedWidth = 0;\n      var constrainedHeight = 0;\n\n      switch (pos) {\n        case 'bottom':\n          absY = anchorRect.bottom;\n          absX = anchorRect.left + (anchorRect.width - popupRect.width) / 2;\n          anchorOffset = popupRect.width / 2;\n\n          if (popupRect.height <= windowDims.height - ALLEY_WIDTH - anchorRect.bottom) {\n            foundPerfectFit = true;\n          } else if (!foundPartialFit) {\n            constrainedHeight = windowDims.height - ALLEY_WIDTH - anchorRect.bottom;\n          }\n\n          break;\n\n        case 'top':\n          absY = anchorRect.top - popupRect.height;\n          absX = anchorRect.left + (anchorRect.width - popupRect.width) / 2;\n          anchorOffset = popupRect.width / 2;\n\n          if (popupRect.height <= anchorRect.top - ALLEY_WIDTH) {\n            foundPerfectFit = true;\n          } else if (!foundPartialFit) {\n            constrainedHeight = anchorRect.top - ALLEY_WIDTH;\n          }\n\n          break;\n\n        case 'right':\n          absX = anchorRect.right;\n          absY = anchorRect.top + (anchorRect.height - popupRect.height) / 2;\n          anchorOffset = popupRect.height / 2;\n\n          if (popupRect.width <= windowDims.width - ALLEY_WIDTH - anchorRect.right) {\n            foundPerfectFit = true;\n          } else if (!foundPartialFit) {\n            constrainedWidth = windowDims.width - ALLEY_WIDTH - anchorRect.right;\n          }\n\n          break;\n\n        case 'left':\n          absX = anchorRect.left - popupRect.width;\n          absY = anchorRect.top + (anchorRect.height - popupRect.height) / 2;\n          anchorOffset = popupRect.height / 2;\n\n          if (popupRect.width <= anchorRect.left - ALLEY_WIDTH) {\n            foundPerfectFit = true;\n          } else if (!foundPartialFit) {\n            constrainedWidth = anchorRect.left - ALLEY_WIDTH;\n          }\n\n          break;\n\n        case 'context':\n          {\n            // Search for perfect fits on the LR, LL, TR, and TL corners.\n            var fitsAbove = anchorRect.top - popupRect.height >= ALLEY_WIDTH;\n            var fitsBelow = anchorRect.top + anchorRect.height + popupRect.height <= windowDims.height - ALLEY_WIDTH;\n            var fitsLeft = anchorRect.left - popupRect.width >= ALLEY_WIDTH;\n            var fitsRight = anchorRect.left + anchorRect.width + popupRect.width <= windowDims.width - ALLEY_WIDTH;\n\n            if (fitsBelow && fitsRight) {\n              foundPerfectFit = true;\n              absX = anchorRect.left + anchorRect.width;\n              absY = anchorRect.top + anchorRect.height;\n            } else if (fitsBelow && fitsLeft) {\n              foundPerfectFit = true;\n              absX = anchorRect.left - popupRect.width;\n              absY = anchorRect.top + anchorRect.height;\n            } else if (fitsAbove && fitsRight) {\n              foundPerfectFit = true;\n              absX = anchorRect.left + anchorRect.width;\n              absY = anchorRect.top - popupRect.height;\n            } else if (fitsAbove && fitsLeft) {\n              foundPerfectFit = true;\n              absX = anchorRect.left - popupRect.width;\n              absY = anchorRect.top - popupRect.height;\n            }\n\n            break;\n          }\n      }\n\n      var effectiveWidth = constrainedWidth || popupRect.width;\n      var effectiveHeight = constrainedHeight || popupRect.height; // Make sure we're not hanging off the bounds of the window.\n\n      if (absX < ALLEY_WIDTH) {\n        if (pos === 'top' || pos === 'bottom') {\n          anchorOffset -= ALLEY_WIDTH - absX;\n\n          if (anchorOffset < MIN_ANCHOR_OFFSET || anchorOffset > effectiveWidth - MIN_ANCHOR_OFFSET) {\n            foundPerfectFit = false;\n          }\n        }\n\n        absX = ALLEY_WIDTH;\n      } else if (absX > windowDims.width - ALLEY_WIDTH - effectiveWidth) {\n        if (pos === 'top' || pos === 'bottom') {\n          anchorOffset -= windowDims.width - ALLEY_WIDTH - effectiveWidth - absX;\n\n          if (anchorOffset < MIN_ANCHOR_OFFSET || anchorOffset > effectiveWidth - MIN_ANCHOR_OFFSET) {\n            foundPerfectFit = false;\n          }\n        }\n\n        absX = windowDims.width - ALLEY_WIDTH - effectiveWidth;\n      }\n\n      if (absY < ALLEY_WIDTH) {\n        if (pos === 'right' || pos === 'left') {\n          anchorOffset += absY - ALLEY_WIDTH;\n\n          if (anchorOffset < MIN_ANCHOR_OFFSET || anchorOffset > effectiveHeight - MIN_ANCHOR_OFFSET) {\n            foundPerfectFit = false;\n          }\n        }\n\n        absY = ALLEY_WIDTH;\n      } else if (absY > windowDims.height - ALLEY_WIDTH - effectiveHeight) {\n        if (pos === 'right' || pos === 'left') {\n          anchorOffset -= windowDims.height - ALLEY_WIDTH - effectiveHeight - absY;\n\n          if (anchorOffset < MIN_ANCHOR_OFFSET || anchorOffset > effectiveHeight - MIN_ANCHOR_OFFSET) {\n            foundPerfectFit = false;\n          }\n        }\n\n        absY = windowDims.height - ALLEY_WIDTH - effectiveHeight;\n      }\n\n      if (foundPerfectFit || effectiveHeight > 0 || effectiveWidth > 0) {\n        result.popupY = absY;\n        result.popupX = absX;\n        result.anchorOffset = anchorOffset;\n        result.anchorPosition = pos;\n        result.constrainedPopupWidth = effectiveWidth;\n        result.constrainedPopupHeight = effectiveHeight;\n        foundPartialFit = true;\n      }\n    }\n  });\n  return result;\n}\n\nexports.recalcPositionFromLayoutData = recalcPositionFromLayoutData;\n\nfunction recalcInnerPosition(anchorRect, positionToUse, popupWidth, popupHeight) {\n  // For inner popups we only accept the first position of the priorities since there\n  // should always be room for the bubble.\n  var popupX = 0;\n  var popupY = 0;\n  var anchorOffset = 0;\n\n  switch (positionToUse) {\n    case 'top':\n      popupY = anchorRect.top + anchorRect.height - popupHeight;\n      popupX = anchorRect.left + anchorRect.height / 2 - popupWidth / 2;\n      anchorOffset = popupWidth / 2;\n      break;\n\n    case 'bottom':\n      popupY = anchorRect.top + popupHeight;\n      popupX = anchorRect.left + anchorRect.height / 2 - popupWidth / 2;\n      anchorOffset = popupWidth / 2;\n      break;\n\n    case 'left':\n      popupY = anchorRect.top + anchorRect.height / 2 - popupHeight / 2;\n      popupX = anchorRect.left + anchorRect.width - popupWidth;\n      anchorOffset = popupHeight / 2;\n      break;\n\n    case 'right':\n      popupY = anchorRect.top + anchorRect.height / 2 - popupHeight / 2;\n      popupX = anchorRect.left;\n      anchorOffset = popupHeight / 2;\n      break;\n\n    case 'context':\n      throw new Error('Context popup mode not allowed with inner positioning');\n  }\n\n  var result = {\n    popupX: popupX,\n    popupY: popupY,\n    anchorOffset: anchorOffset,\n    anchorPosition: positionToUse,\n    constrainedPopupWidth: popupWidth,\n    constrainedPopupHeight: popupHeight\n  };\n  return result;\n}\n\nvar PopupContainerViewBase =\n/** @class */\nfunction (_super) {\n  __extends(PopupContainerViewBase, _super);\n\n  function PopupContainerViewBase(props, context) {\n    var _this = _super.call(this, props, context) || this;\n\n    _this._popupComponentStack = [];\n    return _this;\n  }\n\n  PopupContainerViewBase.prototype.getChildContext = function () {\n    return {\n      focusManager: this.context.focusManager,\n      popupContainer: this\n    };\n  };\n\n  PopupContainerViewBase.prototype.registerPopupComponent = function (onShow, onHide) {\n    var component = {\n      onShow: onShow,\n      onHide: onHide\n    };\n\n    this._popupComponentStack.push(component);\n\n    return component;\n  };\n\n  PopupContainerViewBase.prototype.unregisterPopupComponent = function (component) {\n    this._popupComponentStack = this._popupComponentStack.filter(function (c) {\n      return c !== component;\n    });\n  };\n\n  PopupContainerViewBase.prototype.isHidden = function () {\n    return !!this.props.hidden;\n  };\n\n  PopupContainerViewBase.prototype.componentDidUpdate = function (prevProps, prevState) {\n    if (prevProps.hidden && !this.props.hidden) {\n      // call onShow on all registered components (iterate front to back)\n      for (var i = 0; i < this._popupComponentStack.length; i++) {\n        this._popupComponentStack[i].onShow();\n      }\n    }\n\n    if (!prevProps.hidden && this.props.hidden) {\n      // call onHide on all registered components (iterate back to front)\n      for (var i = this._popupComponentStack.length - 1; i >= 0; i--) {\n        this._popupComponentStack[i].onHide();\n      }\n    }\n  };\n\n  PopupContainerViewBase.contextTypes = {\n    focusManager: PropTypes.object\n  };\n  PopupContainerViewBase.childContextTypes = {\n    focusManager: PropTypes.object,\n    popupContainer: PropTypes.object\n  };\n  return PopupContainerViewBase;\n}(React.Component);\n\nexports.PopupContainerViewBase = PopupContainerViewBase;\nexports.default = PopupContainerViewBase;","map":{"version":3,"sources":["/Users/dangthang/Desktop/webStreamGame/node_modules/react-ult/dist/common/PopupContainerViewBase.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__","constructor","create","defineProperty","exports","value","PopupContainerViewBase","recalcPositionFromLayoutData","PropTypes","require","React","ALLEY_WIDTH","MIN_ANCHOR_OFFSET","windowDims","anchorRect","popupRect","positionPriorities","useInnerPositioning","width","height","undefined","left","right","bottom","top","positionsToTry","length","push","recalcInnerPosition","result","popupX","popupY","anchorOffset","anchorPosition","constrainedPopupWidth","constrainedPopupHeight","foundPerfectFit","foundPartialFit","forEach","pos","absX","absY","constrainedWidth","constrainedHeight","fitsAbove","fitsBelow","fitsLeft","fitsRight","effectiveWidth","effectiveHeight","positionToUse","popupWidth","popupHeight","Error","_super","props","context","_this","_popupComponentStack","getChildContext","focusManager","popupContainer","registerPopupComponent","onShow","onHide","component","unregisterPopupComponent","filter","c","isHidden","hidden","componentDidUpdate","prevProps","prevState","i","contextTypes","object","childContextTypes","Component","default"],"mappings":"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","sourcesContent":["\"use strict\";\r\n/**\r\n * PopupContainerViewBase.tsx\r\n *\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT license.\r\n *\r\n * Common parent of all components rendered into a popup. Calls onShow and onHide\r\n * callbacks when the popup is hidden (i.e. \"closed\" but still rendered as hidden)\r\n * and re-shown. Abstract class to be overriden per platform.\r\n */\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PopupContainerViewBase = exports.recalcPositionFromLayoutData = void 0;\r\nvar PropTypes = require(\"prop-types\");\r\nvar React = require(\"react\");\r\n// Width of the \"alley\" around popups so they don't get too close to the boundary of the screen boundary.\r\nvar ALLEY_WIDTH = 2;\r\n// How close to the edge of the popup should we allow the anchor offset to get before\r\n// attempting a different position?\r\nvar MIN_ANCHOR_OFFSET = 16;\r\n// Undefined response means to dismiss the popup\r\nfunction recalcPositionFromLayoutData(windowDims, anchorRect, popupRect, positionPriorities, useInnerPositioning) {\r\n    // If the anchor has disappeared, dismiss the popup.\r\n    if (!(anchorRect.width > 0 && anchorRect.height > 0)) {\r\n        return undefined;\r\n    }\r\n    // If the anchor is no longer in the window's bounds, cancel the popup.\r\n    if (anchorRect.left >= windowDims.width || anchorRect.right <= 0 ||\r\n        anchorRect.bottom <= 0 || anchorRect.top >= windowDims.height) {\r\n        return undefined;\r\n    }\r\n    var positionsToTry = positionPriorities;\r\n    if (!positionsToTry || positionsToTry.length === 0) {\r\n        positionsToTry = ['bottom', 'right', 'top', 'left'];\r\n    }\r\n    if (positionsToTry.length === 1 && positionsToTry[0] === 'context') {\r\n        // Context only works with exact matches, so fall back to walking around the compass if it doesn't fit exactly.\r\n        positionsToTry.push('bottom', 'right', 'top', 'left');\r\n    }\r\n    if (useInnerPositioning) {\r\n        // If the popup is meant to be shown inside the anchor we need to recalculate\r\n        // the position differently.\r\n        return recalcInnerPosition(anchorRect, positionsToTry[0], popupRect.width, popupRect.height);\r\n    }\r\n    // Start by assuming that we'll be unconstrained.\r\n    var result = {\r\n        popupX: 0,\r\n        popupY: 0,\r\n        anchorOffset: 0,\r\n        anchorPosition: 'top',\r\n        constrainedPopupWidth: popupRect.width,\r\n        constrainedPopupHeight: popupRect.height,\r\n    };\r\n    var foundPerfectFit = false;\r\n    var foundPartialFit = false;\r\n    positionsToTry.forEach(function (pos) {\r\n        if (!foundPerfectFit) {\r\n            var absX = 0;\r\n            var absY = 0;\r\n            var anchorOffset = 0;\r\n            var constrainedWidth = 0;\r\n            var constrainedHeight = 0;\r\n            switch (pos) {\r\n                case 'bottom':\r\n                    absY = anchorRect.bottom;\r\n                    absX = anchorRect.left + (anchorRect.width - popupRect.width) / 2;\r\n                    anchorOffset = popupRect.width / 2;\r\n                    if (popupRect.height <= windowDims.height - ALLEY_WIDTH - anchorRect.bottom) {\r\n                        foundPerfectFit = true;\r\n                    }\r\n                    else if (!foundPartialFit) {\r\n                        constrainedHeight = windowDims.height - ALLEY_WIDTH - anchorRect.bottom;\r\n                    }\r\n                    break;\r\n                case 'top':\r\n                    absY = anchorRect.top - popupRect.height;\r\n                    absX = anchorRect.left + (anchorRect.width - popupRect.width) / 2;\r\n                    anchorOffset = popupRect.width / 2;\r\n                    if (popupRect.height <= anchorRect.top - ALLEY_WIDTH) {\r\n                        foundPerfectFit = true;\r\n                    }\r\n                    else if (!foundPartialFit) {\r\n                        constrainedHeight = anchorRect.top - ALLEY_WIDTH;\r\n                    }\r\n                    break;\r\n                case 'right':\r\n                    absX = anchorRect.right;\r\n                    absY = anchorRect.top + (anchorRect.height - popupRect.height) / 2;\r\n                    anchorOffset = popupRect.height / 2;\r\n                    if (popupRect.width <= windowDims.width - ALLEY_WIDTH - anchorRect.right) {\r\n                        foundPerfectFit = true;\r\n                    }\r\n                    else if (!foundPartialFit) {\r\n                        constrainedWidth = windowDims.width - ALLEY_WIDTH - anchorRect.right;\r\n                    }\r\n                    break;\r\n                case 'left':\r\n                    absX = anchorRect.left - popupRect.width;\r\n                    absY = anchorRect.top + (anchorRect.height - popupRect.height) / 2;\r\n                    anchorOffset = popupRect.height / 2;\r\n                    if (popupRect.width <= anchorRect.left - ALLEY_WIDTH) {\r\n                        foundPerfectFit = true;\r\n                    }\r\n                    else if (!foundPartialFit) {\r\n                        constrainedWidth = anchorRect.left - ALLEY_WIDTH;\r\n                    }\r\n                    break;\r\n                case 'context': {\r\n                    // Search for perfect fits on the LR, LL, TR, and TL corners.\r\n                    var fitsAbove = anchorRect.top - popupRect.height >= ALLEY_WIDTH;\r\n                    var fitsBelow = anchorRect.top + anchorRect.height + popupRect.height <= windowDims.height - ALLEY_WIDTH;\r\n                    var fitsLeft = anchorRect.left - popupRect.width >= ALLEY_WIDTH;\r\n                    var fitsRight = anchorRect.left + anchorRect.width + popupRect.width <= windowDims.width - ALLEY_WIDTH;\r\n                    if (fitsBelow && fitsRight) {\r\n                        foundPerfectFit = true;\r\n                        absX = anchorRect.left + anchorRect.width;\r\n                        absY = anchorRect.top + anchorRect.height;\r\n                    }\r\n                    else if (fitsBelow && fitsLeft) {\r\n                        foundPerfectFit = true;\r\n                        absX = anchorRect.left - popupRect.width;\r\n                        absY = anchorRect.top + anchorRect.height;\r\n                    }\r\n                    else if (fitsAbove && fitsRight) {\r\n                        foundPerfectFit = true;\r\n                        absX = anchorRect.left + anchorRect.width;\r\n                        absY = anchorRect.top - popupRect.height;\r\n                    }\r\n                    else if (fitsAbove && fitsLeft) {\r\n                        foundPerfectFit = true;\r\n                        absX = anchorRect.left - popupRect.width;\r\n                        absY = anchorRect.top - popupRect.height;\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n            var effectiveWidth = constrainedWidth || popupRect.width;\r\n            var effectiveHeight = constrainedHeight || popupRect.height;\r\n            // Make sure we're not hanging off the bounds of the window.\r\n            if (absX < ALLEY_WIDTH) {\r\n                if (pos === 'top' || pos === 'bottom') {\r\n                    anchorOffset -= ALLEY_WIDTH - absX;\r\n                    if (anchorOffset < MIN_ANCHOR_OFFSET || anchorOffset > effectiveWidth - MIN_ANCHOR_OFFSET) {\r\n                        foundPerfectFit = false;\r\n                    }\r\n                }\r\n                absX = ALLEY_WIDTH;\r\n            }\r\n            else if (absX > windowDims.width - ALLEY_WIDTH - effectiveWidth) {\r\n                if (pos === 'top' || pos === 'bottom') {\r\n                    anchorOffset -= (windowDims.width - ALLEY_WIDTH - effectiveWidth - absX);\r\n                    if (anchorOffset < MIN_ANCHOR_OFFSET || anchorOffset > effectiveWidth - MIN_ANCHOR_OFFSET) {\r\n                        foundPerfectFit = false;\r\n                    }\r\n                }\r\n                absX = windowDims.width - ALLEY_WIDTH - effectiveWidth;\r\n            }\r\n            if (absY < ALLEY_WIDTH) {\r\n                if (pos === 'right' || pos === 'left') {\r\n                    anchorOffset += absY - ALLEY_WIDTH;\r\n                    if (anchorOffset < MIN_ANCHOR_OFFSET || anchorOffset > effectiveHeight - MIN_ANCHOR_OFFSET) {\r\n                        foundPerfectFit = false;\r\n                    }\r\n                }\r\n                absY = ALLEY_WIDTH;\r\n            }\r\n            else if (absY > windowDims.height - ALLEY_WIDTH - effectiveHeight) {\r\n                if (pos === 'right' || pos === 'left') {\r\n                    anchorOffset -= (windowDims.height - ALLEY_WIDTH - effectiveHeight - absY);\r\n                    if (anchorOffset < MIN_ANCHOR_OFFSET || anchorOffset > effectiveHeight - MIN_ANCHOR_OFFSET) {\r\n                        foundPerfectFit = false;\r\n                    }\r\n                }\r\n                absY = windowDims.height - ALLEY_WIDTH - effectiveHeight;\r\n            }\r\n            if (foundPerfectFit || effectiveHeight > 0 || effectiveWidth > 0) {\r\n                result.popupY = absY;\r\n                result.popupX = absX;\r\n                result.anchorOffset = anchorOffset;\r\n                result.anchorPosition = pos;\r\n                result.constrainedPopupWidth = effectiveWidth;\r\n                result.constrainedPopupHeight = effectiveHeight;\r\n                foundPartialFit = true;\r\n            }\r\n        }\r\n    });\r\n    return result;\r\n}\r\nexports.recalcPositionFromLayoutData = recalcPositionFromLayoutData;\r\nfunction recalcInnerPosition(anchorRect, positionToUse, popupWidth, popupHeight) {\r\n    // For inner popups we only accept the first position of the priorities since there\r\n    // should always be room for the bubble.\r\n    var popupX = 0;\r\n    var popupY = 0;\r\n    var anchorOffset = 0;\r\n    switch (positionToUse) {\r\n        case 'top':\r\n            popupY = anchorRect.top + anchorRect.height - popupHeight;\r\n            popupX = anchorRect.left + anchorRect.height / 2 - popupWidth / 2;\r\n            anchorOffset = popupWidth / 2;\r\n            break;\r\n        case 'bottom':\r\n            popupY = anchorRect.top + popupHeight;\r\n            popupX = anchorRect.left + anchorRect.height / 2 - popupWidth / 2;\r\n            anchorOffset = popupWidth / 2;\r\n            break;\r\n        case 'left':\r\n            popupY = anchorRect.top + anchorRect.height / 2 - popupHeight / 2;\r\n            popupX = anchorRect.left + anchorRect.width - popupWidth;\r\n            anchorOffset = popupHeight / 2;\r\n            break;\r\n        case 'right':\r\n            popupY = anchorRect.top + anchorRect.height / 2 - popupHeight / 2;\r\n            popupX = anchorRect.left;\r\n            anchorOffset = popupHeight / 2;\r\n            break;\r\n        case 'context':\r\n            throw new Error('Context popup mode not allowed with inner positioning');\r\n    }\r\n    var result = {\r\n        popupX: popupX,\r\n        popupY: popupY,\r\n        anchorOffset: anchorOffset,\r\n        anchorPosition: positionToUse,\r\n        constrainedPopupWidth: popupWidth,\r\n        constrainedPopupHeight: popupHeight,\r\n    };\r\n    return result;\r\n}\r\nvar PopupContainerViewBase = /** @class */ (function (_super) {\r\n    __extends(PopupContainerViewBase, _super);\r\n    function PopupContainerViewBase(props, context) {\r\n        var _this = _super.call(this, props, context) || this;\r\n        _this._popupComponentStack = [];\r\n        return _this;\r\n    }\r\n    PopupContainerViewBase.prototype.getChildContext = function () {\r\n        return {\r\n            focusManager: this.context.focusManager,\r\n            popupContainer: this,\r\n        };\r\n    };\r\n    PopupContainerViewBase.prototype.registerPopupComponent = function (onShow, onHide) {\r\n        var component = {\r\n            onShow: onShow,\r\n            onHide: onHide,\r\n        };\r\n        this._popupComponentStack.push(component);\r\n        return component;\r\n    };\r\n    PopupContainerViewBase.prototype.unregisterPopupComponent = function (component) {\r\n        this._popupComponentStack = this._popupComponentStack.filter(function (c) { return c !== component; });\r\n    };\r\n    PopupContainerViewBase.prototype.isHidden = function () {\r\n        return !!this.props.hidden;\r\n    };\r\n    PopupContainerViewBase.prototype.componentDidUpdate = function (prevProps, prevState) {\r\n        if (prevProps.hidden && !this.props.hidden) {\r\n            // call onShow on all registered components (iterate front to back)\r\n            for (var i = 0; i < this._popupComponentStack.length; i++) {\r\n                this._popupComponentStack[i].onShow();\r\n            }\r\n        }\r\n        if (!prevProps.hidden && this.props.hidden) {\r\n            // call onHide on all registered components (iterate back to front)\r\n            for (var i = this._popupComponentStack.length - 1; i >= 0; i--) {\r\n                this._popupComponentStack[i].onHide();\r\n            }\r\n        }\r\n    };\r\n    PopupContainerViewBase.contextTypes = {\r\n        focusManager: PropTypes.object,\r\n    };\r\n    PopupContainerViewBase.childContextTypes = {\r\n        focusManager: PropTypes.object,\r\n        popupContainer: PropTypes.object,\r\n    };\r\n    return PopupContainerViewBase;\r\n}(React.Component));\r\nexports.PopupContainerViewBase = PopupContainerViewBase;\r\nexports.default = PopupContainerViewBase;\r\n"]},"metadata":{},"sourceType":"script"}