{"ast":null,"code":"\"use strict\";\n/**\r\n * AccessibilityUtil.ts\r\n *\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT license.\r\n *\r\n * Web-specific implementation of accessiblity functions for cross-platform\r\n * ReactXP framework.\r\n */\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar _a, _b;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AccessibilityUtil = void 0;\n\nvar AccessibilityUtil_1 = require(\"../common/AccessibilityUtil\");\n\nvar Interfaces_1 = require(\"../common/Interfaces\");\n\nvar _ = require(\"./utils/lodashMini\"); // Map of accessibility trait to an aria role attribute.\n// What's a role attribute? https://www.w3.org/wiki/PF/XTech/HTML5/RoleAttribute\n\n\nvar roleMap = (_a = {}, _a[Interfaces_1.Types.AccessibilityTrait.None] = 'presentation', _a[Interfaces_1.Types.AccessibilityTrait.Button] = 'button', _a[Interfaces_1.Types.AccessibilityTrait.Link] = 'link', _a[Interfaces_1.Types.AccessibilityTrait.Header] = 'heading', _a[Interfaces_1.Types.AccessibilityTrait.Search] = 'search', _a[Interfaces_1.Types.AccessibilityTrait.Image] = 'img', _a[Interfaces_1.Types.AccessibilityTrait.Summary] = 'region', _a[Interfaces_1.Types.AccessibilityTrait.Adjustable] = 'slider', _a[Interfaces_1.Types.AccessibilityTrait.Menu] = 'menu', _a[Interfaces_1.Types.AccessibilityTrait.MenuItem] = 'menuitem', _a[Interfaces_1.Types.AccessibilityTrait.MenuBar] = 'menubar', _a[Interfaces_1.Types.AccessibilityTrait.Tab] = 'tab', _a[Interfaces_1.Types.AccessibilityTrait.TabList] = 'tablist', _a[Interfaces_1.Types.AccessibilityTrait.List] = 'list', _a[Interfaces_1.Types.AccessibilityTrait.ListItem] = 'listitem', _a[Interfaces_1.Types.AccessibilityTrait.ListBox] = 'listbox', _a[Interfaces_1.Types.AccessibilityTrait.Group] = 'group', _a[Interfaces_1.Types.AccessibilityTrait.CheckBox] = 'checkbox', _a[Interfaces_1.Types.AccessibilityTrait.ComboBox] = 'combobox', _a[Interfaces_1.Types.AccessibilityTrait.Log] = 'log', _a[Interfaces_1.Types.AccessibilityTrait.Status] = 'status', _a[Interfaces_1.Types.AccessibilityTrait.Dialog] = 'dialog', _a[Interfaces_1.Types.AccessibilityTrait.Switch] = 'switch', _a); // Map of accesssibility live region to an aria-live property.\n\nvar liveRegionMap = (_b = {}, _b[Interfaces_1.Types.AccessibilityLiveRegion.None] = 'off', _b[Interfaces_1.Types.AccessibilityLiveRegion.Assertive] = 'assertive', _b[Interfaces_1.Types.AccessibilityLiveRegion.Polite] = 'polite', _b);\n\nvar AccessibilityUtil =\n/** @class */\nfunction (_super) {\n  __extends(AccessibilityUtil, _super);\n\n  function AccessibilityUtil() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  } // Web equivalent value for aria-live property.\n\n\n  AccessibilityUtil.prototype.accessibilityLiveRegionToString = function (liveRegion) {\n    if (liveRegion) {\n      return liveRegionMap[liveRegion];\n    }\n\n    return undefined;\n  }; // Web equivalent value for role property.\n  // NOTE: Web only supports a single aria-role on a component.\n\n\n  AccessibilityUtil.prototype.accessibilityTraitToString = function (traits, defaultTrait) {\n    // Combine & remove duplicate traits.\n    var combinedTraits = defaultTrait ? [defaultTrait] : [];\n\n    if (traits) {\n      combinedTraits = _.union(combinedTraits, Array.isArray(traits) ? traits : [traits]);\n    } // Max enum value in this array of traits is role for web. Return corresponding\n    // role string from roleMap.\n\n\n    return combinedTraits.length > 0 ? roleMap[_.max(_.filter(combinedTraits, function (t) {\n      return roleMap.hasOwnProperty(t);\n    }))] : undefined;\n  };\n\n  AccessibilityUtil.prototype.accessibilityTraitToAriaSelected = function (traits) {\n    // Walk through each trait and check if there's a selected trait. Return if one is found.\n    if (traits && Array.isArray(traits) && traits.indexOf(Interfaces_1.Types.AccessibilityTrait.Tab) !== -1) {\n      return traits.indexOf(Interfaces_1.Types.AccessibilityTrait.Selected) !== -1;\n    } // Here we are returning undefined if the above condition is not met\n    // as we dont want to pollute the dom with \"aria-selected = false\" for every falsy condition\n\n\n    return undefined;\n  };\n\n  AccessibilityUtil.prototype.accessibilityTraitToAriaChecked = function (traits) {\n    // Walk through each trait and check if there's a checked trait. Return if one is found.\n    if (traits && Array.isArray(traits) && traits.indexOf(Interfaces_1.Types.AccessibilityTrait.CheckBox) !== -1) {\n      return traits.indexOf(Interfaces_1.Types.AccessibilityTrait.Checked) !== -1;\n    } // Here we are returning undefined if the above condition is not met\n    // as we dont want to pollute the dom with \"aria-checked = false\" for every falsy condition\n\n\n    return undefined;\n  };\n\n  AccessibilityUtil.prototype.accessibilityTraitToAriaHasPopup = function (traits) {\n    // Walk through each trait and check if there's a hasPopup trait. Return if one is found.\n    if (traits && Array.isArray(traits) && traits.indexOf(Interfaces_1.Types.AccessibilityTrait.HasPopup) !== -1) {\n      return traits.indexOf(Interfaces_1.Types.AccessibilityTrait.HasPopup) !== -1;\n    } // Here we are returning undefined if the above condition is not met\n    // as we dont want to pollute the dom with \"aria-checked = false\" for every falsy condition\n\n\n    return undefined;\n  };\n\n  return AccessibilityUtil;\n}(AccessibilityUtil_1.AccessibilityUtil);\n\nexports.AccessibilityUtil = AccessibilityUtil;\nexports.default = new AccessibilityUtil();","map":{"version":3,"sources":["/Users/trungthang/webStreamGame/webStreamGame/node_modules/react-ult/dist/web/AccessibilityUtil.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__","constructor","create","_a","_b","defineProperty","exports","value","AccessibilityUtil","AccessibilityUtil_1","require","Interfaces_1","_","roleMap","Types","AccessibilityTrait","None","Button","Link","Header","Search","Image","Summary","Adjustable","Menu","MenuItem","MenuBar","Tab","TabList","List","ListItem","ListBox","Group","CheckBox","ComboBox","Log","Status","Dialog","Switch","liveRegionMap","AccessibilityLiveRegion","Assertive","Polite","_super","apply","arguments","accessibilityLiveRegionToString","liveRegion","undefined","accessibilityTraitToString","traits","defaultTrait","combinedTraits","union","isArray","length","max","filter","t","accessibilityTraitToAriaSelected","indexOf","Selected","accessibilityTraitToAriaChecked","Checked","accessibilityTraitToAriaHasPopup","HasPopup","default"],"mappings":"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","sourcesContent":["\"use strict\";\r\n/**\r\n * AccessibilityUtil.ts\r\n *\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT license.\r\n *\r\n * Web-specific implementation of accessiblity functions for cross-platform\r\n * ReactXP framework.\r\n */\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar _a, _b;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.AccessibilityUtil = void 0;\r\nvar AccessibilityUtil_1 = require(\"../common/AccessibilityUtil\");\r\nvar Interfaces_1 = require(\"../common/Interfaces\");\r\nvar _ = require(\"./utils/lodashMini\");\r\n// Map of accessibility trait to an aria role attribute.\r\n// What's a role attribute? https://www.w3.org/wiki/PF/XTech/HTML5/RoleAttribute\r\nvar roleMap = (_a = {},\r\n    _a[Interfaces_1.Types.AccessibilityTrait.None] = 'presentation',\r\n    _a[Interfaces_1.Types.AccessibilityTrait.Button] = 'button',\r\n    _a[Interfaces_1.Types.AccessibilityTrait.Link] = 'link',\r\n    _a[Interfaces_1.Types.AccessibilityTrait.Header] = 'heading',\r\n    _a[Interfaces_1.Types.AccessibilityTrait.Search] = 'search',\r\n    _a[Interfaces_1.Types.AccessibilityTrait.Image] = 'img',\r\n    _a[Interfaces_1.Types.AccessibilityTrait.Summary] = 'region',\r\n    _a[Interfaces_1.Types.AccessibilityTrait.Adjustable] = 'slider',\r\n    _a[Interfaces_1.Types.AccessibilityTrait.Menu] = 'menu',\r\n    _a[Interfaces_1.Types.AccessibilityTrait.MenuItem] = 'menuitem',\r\n    _a[Interfaces_1.Types.AccessibilityTrait.MenuBar] = 'menubar',\r\n    _a[Interfaces_1.Types.AccessibilityTrait.Tab] = 'tab',\r\n    _a[Interfaces_1.Types.AccessibilityTrait.TabList] = 'tablist',\r\n    _a[Interfaces_1.Types.AccessibilityTrait.List] = 'list',\r\n    _a[Interfaces_1.Types.AccessibilityTrait.ListItem] = 'listitem',\r\n    _a[Interfaces_1.Types.AccessibilityTrait.ListBox] = 'listbox',\r\n    _a[Interfaces_1.Types.AccessibilityTrait.Group] = 'group',\r\n    _a[Interfaces_1.Types.AccessibilityTrait.CheckBox] = 'checkbox',\r\n    _a[Interfaces_1.Types.AccessibilityTrait.ComboBox] = 'combobox',\r\n    _a[Interfaces_1.Types.AccessibilityTrait.Log] = 'log',\r\n    _a[Interfaces_1.Types.AccessibilityTrait.Status] = 'status',\r\n    _a[Interfaces_1.Types.AccessibilityTrait.Dialog] = 'dialog',\r\n    _a[Interfaces_1.Types.AccessibilityTrait.Switch] = 'switch',\r\n    _a);\r\n// Map of accesssibility live region to an aria-live property.\r\nvar liveRegionMap = (_b = {},\r\n    _b[Interfaces_1.Types.AccessibilityLiveRegion.None] = 'off',\r\n    _b[Interfaces_1.Types.AccessibilityLiveRegion.Assertive] = 'assertive',\r\n    _b[Interfaces_1.Types.AccessibilityLiveRegion.Polite] = 'polite',\r\n    _b);\r\nvar AccessibilityUtil = /** @class */ (function (_super) {\r\n    __extends(AccessibilityUtil, _super);\r\n    function AccessibilityUtil() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    // Web equivalent value for aria-live property.\r\n    AccessibilityUtil.prototype.accessibilityLiveRegionToString = function (liveRegion) {\r\n        if (liveRegion) {\r\n            return liveRegionMap[liveRegion];\r\n        }\r\n        return undefined;\r\n    };\r\n    // Web equivalent value for role property.\r\n    // NOTE: Web only supports a single aria-role on a component.\r\n    AccessibilityUtil.prototype.accessibilityTraitToString = function (traits, defaultTrait) {\r\n        // Combine & remove duplicate traits.\r\n        var combinedTraits = defaultTrait ? [defaultTrait] : [];\r\n        if (traits) {\r\n            combinedTraits = _.union(combinedTraits, Array.isArray(traits) ? traits : [traits]);\r\n        }\r\n        // Max enum value in this array of traits is role for web. Return corresponding\r\n        // role string from roleMap.\r\n        return combinedTraits.length > 0 ?\r\n            roleMap[_.max(_.filter(combinedTraits, function (t) { return roleMap.hasOwnProperty(t); }))]\r\n            : undefined;\r\n    };\r\n    AccessibilityUtil.prototype.accessibilityTraitToAriaSelected = function (traits) {\r\n        // Walk through each trait and check if there's a selected trait. Return if one is found.\r\n        if (traits && Array.isArray(traits) && traits.indexOf(Interfaces_1.Types.AccessibilityTrait.Tab) !== -1) {\r\n            return traits.indexOf(Interfaces_1.Types.AccessibilityTrait.Selected) !== -1;\r\n        }\r\n        // Here we are returning undefined if the above condition is not met\r\n        // as we dont want to pollute the dom with \"aria-selected = false\" for every falsy condition\r\n        return undefined;\r\n    };\r\n    AccessibilityUtil.prototype.accessibilityTraitToAriaChecked = function (traits) {\r\n        // Walk through each trait and check if there's a checked trait. Return if one is found.\r\n        if (traits && Array.isArray(traits) && traits.indexOf(Interfaces_1.Types.AccessibilityTrait.CheckBox) !== -1) {\r\n            return traits.indexOf(Interfaces_1.Types.AccessibilityTrait.Checked) !== -1;\r\n        }\r\n        // Here we are returning undefined if the above condition is not met\r\n        // as we dont want to pollute the dom with \"aria-checked = false\" for every falsy condition\r\n        return undefined;\r\n    };\r\n    AccessibilityUtil.prototype.accessibilityTraitToAriaHasPopup = function (traits) {\r\n        // Walk through each trait and check if there's a hasPopup trait. Return if one is found.\r\n        if (traits && Array.isArray(traits) && traits.indexOf(Interfaces_1.Types.AccessibilityTrait.HasPopup) !== -1) {\r\n            return traits.indexOf(Interfaces_1.Types.AccessibilityTrait.HasPopup) !== -1;\r\n        }\r\n        // Here we are returning undefined if the above condition is not met\r\n        // as we dont want to pollute the dom with \"aria-checked = false\" for every falsy condition\r\n        return undefined;\r\n    };\r\n    return AccessibilityUtil;\r\n}(AccessibilityUtil_1.AccessibilityUtil));\r\nexports.AccessibilityUtil = AccessibilityUtil;\r\nexports.default = new AccessibilityUtil();\r\n"]},"metadata":{},"sourceType":"script"}