{"ast":null,"code":"/**\n * SubscribableEvent.ts\n *\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT license.\n *\n * A simple strongly-typed pub/sub/fire eventing system.\n */\nvar SubscriptionToken =\n/** @class */\nfunction () {\n  function SubscriptionToken(_event, _callback) {\n    this._event = _event;\n    this._callback = _callback;\n  }\n\n  SubscriptionToken.prototype.unsubscribe = function () {\n    this._event.unsubscribe(this._callback);\n  };\n\n  return SubscriptionToken;\n}();\n\nexport { SubscriptionToken };\n\nvar SubscribableEvent =\n/** @class */\nfunction () {\n  // By default, SubscribableEvent will fire to all subscribers regardless of any conditions.\n  // If you enable allowStopPropagation, then a subscription callback can return a truthy response and it will halt further callbacks.\n  function SubscribableEvent(_allowStopPropagation) {\n    if (_allowStopPropagation === void 0) {\n      _allowStopPropagation = false;\n    }\n\n    var _this = this;\n\n    this._allowStopPropagation = _allowStopPropagation;\n\n    this.fire = function () {\n      var args = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      } // Keep reference to the original readonly array. We don't want to have it change while we're firing\n\n\n      var subs = _this._subscribers; // Execute handlers in the reverse order in which they were registered.\n\n      for (var i = subs.length - 1; i >= 0; i--) {\n        var ret = subs[i].apply(null, args);\n\n        if (_this._allowStopPropagation && !!ret) {\n          // If the value was handled, early out.\n          return true;\n        }\n      }\n\n      return false;\n    };\n\n    this._subscribers = [];\n  }\n\n  SubscribableEvent.prototype.dispose = function () {\n    this._subscribers = [];\n  };\n\n  SubscribableEvent.prototype.subscribe = function (callback) {\n    this._subscribers = this._subscribers.concat(callback);\n    return new SubscriptionToken(this, callback);\n  };\n\n  SubscribableEvent.prototype.unsubscribe = function (callback) {\n    this._subscribers = this._subscribers.filter(function (value) {\n      return value !== callback;\n    });\n  };\n\n  return SubscribableEvent;\n}();\n\nexport default SubscribableEvent;","map":{"version":3,"sources":["/Users/trungthang/Documents/webStreamGame/node_modules/subscribableevent/dist-es2015/SubscribableEvent.js"],"names":["SubscriptionToken","_event","_callback","prototype","unsubscribe","SubscribableEvent","_allowStopPropagation","_this","fire","args","_i","arguments","length","subs","_subscribers","i","ret","apply","dispose","subscribe","callback","concat","filter","value"],"mappings":"AAAA;;;;;;;;AAQA,IAAIA,iBAAiB;AAAG;AAAe,YAAY;AAC/C,WAASA,iBAAT,CAA2BC,MAA3B,EAAmCC,SAAnC,EAA8C;AAC1C,SAAKD,MAAL,GAAcA,MAAd;AACA,SAAKC,SAAL,GAAiBA,SAAjB;AACH;;AACDF,EAAAA,iBAAiB,CAACG,SAAlB,CAA4BC,WAA5B,GAA0C,YAAY;AAClD,SAAKH,MAAL,CAAYG,WAAZ,CAAwB,KAAKF,SAA7B;AACH,GAFD;;AAGA,SAAOF,iBAAP;AACH,CATsC,EAAvC;;AAUA,SAASA,iBAAT;;AACA,IAAIK,iBAAiB;AAAG;AAAe,YAAY;AAC/C;AACA;AACA,WAASA,iBAAT,CAA2BC,qBAA3B,EAAkD;AAC9C,QAAIA,qBAAqB,KAAK,KAAK,CAAnC,EAAsC;AAAEA,MAAAA,qBAAqB,GAAG,KAAxB;AAAgC;;AACxE,QAAIC,KAAK,GAAG,IAAZ;;AACA,SAAKD,qBAAL,GAA6BA,qBAA7B;;AACA,SAAKE,IAAL,GAAa,YAAY;AACrB,UAAIC,IAAI,GAAG,EAAX;;AACA,WAAK,IAAIC,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGC,SAAS,CAACC,MAAhC,EAAwCF,EAAE,EAA1C,EAA8C;AAC1CD,QAAAA,IAAI,CAACC,EAAD,CAAJ,GAAWC,SAAS,CAACD,EAAD,CAApB;AACH,OAJoB,CAKrB;;;AACA,UAAIG,IAAI,GAAGN,KAAK,CAACO,YAAjB,CANqB,CAOrB;;AACA,WAAK,IAAIC,CAAC,GAAGF,IAAI,CAACD,MAAL,GAAc,CAA3B,EAA8BG,CAAC,IAAI,CAAnC,EAAsCA,CAAC,EAAvC,EAA2C;AACvC,YAAIC,GAAG,GAAGH,IAAI,CAACE,CAAD,CAAJ,CAAQE,KAAR,CAAc,IAAd,EAAoBR,IAApB,CAAV;;AACA,YAAIF,KAAK,CAACD,qBAAN,IAA+B,CAAC,CAACU,GAArC,EAA0C;AACtC;AACA,iBAAO,IAAP;AACH;AACJ;;AACD,aAAO,KAAP;AACH,KAhBD;;AAiBA,SAAKF,YAAL,GAAoB,EAApB;AACH;;AACDT,EAAAA,iBAAiB,CAACF,SAAlB,CAA4Be,OAA5B,GAAsC,YAAY;AAC9C,SAAKJ,YAAL,GAAoB,EAApB;AACH,GAFD;;AAGAT,EAAAA,iBAAiB,CAACF,SAAlB,CAA4BgB,SAA5B,GAAwC,UAAUC,QAAV,EAAoB;AACxD,SAAKN,YAAL,GAAoB,KAAKA,YAAL,CAAkBO,MAAlB,CAAyBD,QAAzB,CAApB;AACA,WAAO,IAAIpB,iBAAJ,CAAsB,IAAtB,EAA4BoB,QAA5B,CAAP;AACH,GAHD;;AAIAf,EAAAA,iBAAiB,CAACF,SAAlB,CAA4BC,WAA5B,GAA0C,UAAUgB,QAAV,EAAoB;AAC1D,SAAKN,YAAL,GAAoB,KAAKA,YAAL,CAAkBQ,MAAlB,CAAyB,UAAUC,KAAV,EAAiB;AAAE,aAAOA,KAAK,KAAKH,QAAjB;AAA4B,KAAxE,CAApB;AACH,GAFD;;AAGA,SAAOf,iBAAP;AACH,CArCsC,EAAvC;;AAsCA,eAAeA,iBAAf","sourcesContent":["/**\n * SubscribableEvent.ts\n *\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT license.\n *\n * A simple strongly-typed pub/sub/fire eventing system.\n */\nvar SubscriptionToken = /** @class */ (function () {\n    function SubscriptionToken(_event, _callback) {\n        this._event = _event;\n        this._callback = _callback;\n    }\n    SubscriptionToken.prototype.unsubscribe = function () {\n        this._event.unsubscribe(this._callback);\n    };\n    return SubscriptionToken;\n}());\nexport { SubscriptionToken };\nvar SubscribableEvent = /** @class */ (function () {\n    // By default, SubscribableEvent will fire to all subscribers regardless of any conditions.\n    // If you enable allowStopPropagation, then a subscription callback can return a truthy response and it will halt further callbacks.\n    function SubscribableEvent(_allowStopPropagation) {\n        if (_allowStopPropagation === void 0) { _allowStopPropagation = false; }\n        var _this = this;\n        this._allowStopPropagation = _allowStopPropagation;\n        this.fire = (function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            // Keep reference to the original readonly array. We don't want to have it change while we're firing\n            var subs = _this._subscribers;\n            // Execute handlers in the reverse order in which they were registered.\n            for (var i = subs.length - 1; i >= 0; i--) {\n                var ret = subs[i].apply(null, args);\n                if (_this._allowStopPropagation && !!ret) {\n                    // If the value was handled, early out.\n                    return true;\n                }\n            }\n            return false;\n        });\n        this._subscribers = [];\n    }\n    SubscribableEvent.prototype.dispose = function () {\n        this._subscribers = [];\n    };\n    SubscribableEvent.prototype.subscribe = function (callback) {\n        this._subscribers = this._subscribers.concat(callback);\n        return new SubscriptionToken(this, callback);\n    };\n    SubscribableEvent.prototype.unsubscribe = function (callback) {\n        this._subscribers = this._subscribers.filter(function (value) { return value !== callback; });\n    };\n    return SubscribableEvent;\n}());\nexport default SubscribableEvent;\n"]},"metadata":{},"sourceType":"module"}