{"ast":null,"code":"\"use strict\";\n/**\r\n * TextInput.tsx\r\n *\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT license.\r\n *\r\n * Web-specific implementation of the cross-platform TextInput abstraction.\r\n */\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TextInput = void 0;\n\nvar PropTypes = require(\"prop-types\");\n\nvar React = require(\"react\");\n\nvar AutoFocusHelper_1 = require(\"../common/utils/AutoFocusHelper\");\n\nvar FocusManager_1 = require(\"./utils/FocusManager\");\n\nvar lodashMini_1 = require(\"./utils/lodashMini\");\n\nvar Styles_1 = require(\"./Styles\");\n\nvar _isMac = typeof navigator !== 'undefined' && typeof navigator.platform === 'string' && navigator.platform.indexOf('Mac') >= 0; // Cast to any to allow merging of web and RX styles\n\n\nvar _styles = {\n  defaultStyle: {\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'row',\n    flexBasis: 'auto',\n    flexGrow: 0,\n    flexShrink: 0,\n    overflowX: 'hidden',\n    overflowY: 'auto',\n    alignItems: 'stretch'\n  },\n  formStyle: {\n    display: 'flex',\n    flex: 1\n  }\n};\n\nvar TextInputPlaceholderSupport =\n/** @class */\nfunction () {\n  function TextInputPlaceholderSupport() {}\n\n  TextInputPlaceholderSupport.getClassName = function (color) {\n    var key = this._colorKey(color);\n\n    return \"reactxp-placeholder-\" + key;\n  };\n\n  TextInputPlaceholderSupport.addRef = function (color) {\n    if (typeof document === undefined) {\n      return;\n    }\n\n    var cache = this._cachedStyles;\n\n    var key = this._colorKey(color);\n\n    if (cache.hasOwnProperty(key)) {\n      cache[key].refCounter++;\n    } else {\n      var className = this.getClassName(color);\n      var style = document.createElement('style');\n      style.type = 'text/css';\n      style.textContent = this._getStyle(className, color);\n      document.head.appendChild(style);\n      cache[key] = {\n        refCounter: 1,\n        styleElement: style\n      };\n    }\n  };\n\n  TextInputPlaceholderSupport.removeRef = function (color) {\n    var cache = this._cachedStyles;\n\n    var key = this._colorKey(color);\n\n    if (cache.hasOwnProperty(key)) {\n      var item = cache[key];\n\n      if (--item.refCounter < 1) {\n        var styleElement = item.styleElement;\n\n        if (styleElement.parentNode) {\n          styleElement.parentNode.removeChild(styleElement);\n        }\n\n        delete cache[key];\n      }\n    }\n  };\n\n  TextInputPlaceholderSupport._colorKey = function (color) {\n    return color.toLowerCase().replace(/(,|\\.|#)/g, '_').replace(/[^a-z0-9_]/g, '');\n  };\n\n  TextInputPlaceholderSupport._getStyle = function (className, placeholderColor) {\n    var selectors = ['::placeholder', '::-webkit-input-placeholder', '::-moz-placeholder', ':-moz-placeholder', ':-ms-input-placeholder'];\n    return selectors.map(function (pseudoSelector) {\n      return \".\" + className + pseudoSelector + \" {\\n\" + \"  opacity: 1;\\n\" + (\"  color: \" + placeholderColor + \";\\n\") + \"}\";\n    }).join('\\n');\n  };\n\n  TextInputPlaceholderSupport._cachedStyles = {};\n  return TextInputPlaceholderSupport;\n}();\n\nvar TextInput =\n/** @class */\nfunction (_super) {\n  __extends(TextInput, _super);\n\n  function TextInput(props, context) {\n    var _this = _super.call(this, props, context) || this;\n\n    _this._mountedComponent = null;\n    _this._selectionStart = 0;\n    _this._selectionEnd = 0;\n    _this._isFocused = false;\n    _this._ariaLiveEnabled = false;\n\n    _this._onMount = function (comp) {\n      _this._mountedComponent = comp;\n\n      if (_this._mountedComponent && _this._mountedComponent instanceof HTMLTextAreaElement) {\n        TextInput._updateScrollPositions(_this._mountedComponent, !!_this.state.autoResize);\n      }\n    };\n\n    _this._onMultilineInput = function (ev) {\n      _this._onInput();\n\n      TextInput._updateScrollPositions(ev.currentTarget, !!_this.state.autoResize);\n    };\n\n    _this._onInput = function () {\n      if (_isMac && _this._mountedComponent && _this._isFocused && !_this._ariaLiveEnabled) {\n        // VoiceOver does not handle text inputs properly at the moment, aria-live is a temporary workaround.\n        // And we're adding aria-live only for the focused input which is being edited, otherwise it might\n        // interrupt some required announcements.\n        _this._mountedComponent.setAttribute('aria-live', 'assertive');\n\n        _this._ariaLiveEnabled = true;\n      }\n    };\n\n    _this._onFocus = function (e) {\n      if (_this._mountedComponent) {\n        _this._isFocused = true;\n\n        if (_this.props.onFocus) {\n          _this.props.onFocus(e);\n        }\n      }\n    };\n\n    _this._onBlur = function (e) {\n      if (_this._mountedComponent) {\n        _this._isFocused = false;\n\n        if (_isMac && _this._ariaLiveEnabled) {\n          _this._mountedComponent.removeAttribute('aria-live');\n\n          _this._ariaLiveEnabled = false;\n        }\n\n        if (_this.props.onBlur) {\n          _this.props.onBlur(e);\n        }\n      }\n    };\n\n    _this._onPaste = function (e) {\n      if (_this.props.onPaste) {\n        _this.props.onPaste(e);\n      }\n\n      _this._checkSelectionChanged();\n    };\n\n    _this._onInputChanged = function (event) {\n      if (!event.defaultPrevented) {\n        if (_this._mountedComponent) {\n          // Has the input value changed?\n          var value = _this._mountedComponent.value || '';\n\n          if (_this.state.inputValue !== value) {\n            // If the parent component didn't specify a value, we'll keep\n            // track of the modified value.\n            if (_this.props.value === undefined) {\n              _this.setState({\n                inputValue: value\n              });\n            }\n\n            if (_this.props.onChangeText) {\n              _this.props.onChangeText(value);\n            }\n          }\n\n          _this._checkSelectionChanged();\n        }\n      }\n    };\n\n    _this._checkSelectionChanged = function () {\n      if (_this._mountedComponent) {\n        if (_this._selectionStart !== _this._mountedComponent.selectionStart || _this._selectionEnd !== _this._mountedComponent.selectionEnd) {\n          _this._selectionStart = _this._mountedComponent.selectionStart || 0;\n          _this._selectionEnd = _this._mountedComponent.selectionEnd || 0;\n\n          if (_this.props.onSelectionChange) {\n            _this.props.onSelectionChange(_this._selectionStart, _this._selectionEnd);\n          }\n        }\n      }\n    };\n\n    _this._onKeyDown = function (e) {\n      // Generate a \"submit editing\" event if the user\n      // pressed enter or return.\n      if (e.keyCode === 13 && (!_this.props.multiline || _this.props.blurOnSubmit)) {\n        if (_this.props.onSubmitEditing) {\n          _this.props.onSubmitEditing();\n        }\n\n        if (_this.props.blurOnSubmit) {\n          _this.blur();\n        }\n      }\n\n      if (_this.props.onKeyPress) {\n        _this.props.onKeyPress(e);\n      }\n\n      _this._checkSelectionChanged();\n    };\n\n    _this._onScroll = function (e) {\n      var targetElement = e.currentTarget; // Fix scrollTop if the TextInput can auto-grow\n      // If the item is bounded by max-height, don't scroll since we want input to follow the cursor at that point\n\n      if (_this.state.autoResize && targetElement.scrollHeight < targetElement.clientHeight) {\n        targetElement.scrollTop = 0;\n      }\n\n      if (_this.props.onScroll) {\n        _this.props.onScroll(targetElement.scrollLeft, targetElement.scrollTop);\n      }\n    };\n\n    _this._focus = function () {\n      AutoFocusHelper_1.FocusArbitratorProvider.requestFocus(_this, function () {\n        return _this.focus();\n      }, function () {\n        return !!_this._mountedComponent;\n      });\n    };\n\n    _this.state = {\n      inputValue: props.value !== undefined ? props.value : props.defaultValue || '',\n      autoResize: TextInput._shouldAutoResize(props)\n    };\n    return _this;\n  }\n\n  TextInput.prototype.UNSAFE_componentWillReceiveProps = function (nextProps) {\n    var _this = this;\n\n    var nextState = {};\n\n    if (nextProps.value !== undefined && nextProps.value !== this.state.inputValue) {\n      nextState.inputValue = nextProps.value;\n    }\n\n    if (nextProps.style !== this.props.style || nextProps.multiline !== this.props.multiline) {\n      var fixedHeight = TextInput._shouldAutoResize(nextProps);\n\n      if (this.state.autoResize !== fixedHeight) {\n        nextState.autoResize = fixedHeight;\n      }\n    }\n\n    if (nextProps.placeholderTextColor !== this.props.placeholderTextColor) {\n      if (nextProps.placeholderTextColor) {\n        TextInputPlaceholderSupport.addRef(nextProps.placeholderTextColor);\n      }\n\n      if (this.props.placeholderTextColor) {\n        TextInputPlaceholderSupport.removeRef(this.props.placeholderTextColor);\n      }\n    }\n\n    if (!lodashMini_1.isEmpty(nextState)) {\n      this.setState(nextState, function () {\n        // Resize as needed after state is set\n        if (_this._mountedComponent instanceof HTMLTextAreaElement) {\n          TextInput._updateScrollPositions(_this._mountedComponent, !!_this.state.autoResize);\n        }\n      });\n    }\n  };\n\n  TextInput.prototype.componentDidMount = function () {\n    if (this.props.placeholderTextColor) {\n      TextInputPlaceholderSupport.addRef(this.props.placeholderTextColor);\n    }\n\n    if (this.props.autoFocus) {\n      this.requestFocus();\n    }\n  };\n\n  TextInput.prototype.componentWillUnmount = function () {\n    if (this.props.placeholderTextColor) {\n      TextInputPlaceholderSupport.removeRef(this.props.placeholderTextColor);\n    }\n  };\n\n  TextInput.prototype.render = function () {\n    var _this = this;\n\n    var combinedStyles = Styles_1.default.combine([_styles.defaultStyle, this.props.style]); // Always hide the outline.\n\n    combinedStyles.outline = 'none';\n    combinedStyles.resize = 'none'; // Set the border to zero width if not otherwise specified.\n\n    if (combinedStyles.borderWidth === undefined) {\n      combinedStyles.borderWidth = 0;\n    } // By default, the control is editable.\n\n\n    var editable = this.props.editable !== undefined ? this.props.editable : true;\n    var spellCheck = this.props.spellCheck !== undefined ? this.props.spellCheck : this.props.autoCorrect;\n    var className = this.props.placeholderTextColor !== undefined ? TextInputPlaceholderSupport.getClassName(this.props.placeholderTextColor) : undefined; // Use a textarea for multi-line and a regular input for single-line.\n\n    if (this.props.multiline) {\n      return React.createElement(\"textarea\", {\n        ref: this._onMount,\n        style: combinedStyles,\n        value: this.state.inputValue,\n        title: this.props.title,\n        tabIndex: this.props.tabIndex,\n        autoCorrect: this.props.autoCorrect === false ? 'off' : undefined,\n        spellCheck: spellCheck,\n        disabled: !editable,\n        maxLength: this.props.maxLength,\n        placeholder: this.props.placeholder,\n        className: className,\n        onChange: this._onInputChanged,\n        onKeyDown: this._onKeyDown,\n        onKeyUp: this._checkSelectionChanged,\n        onInput: this._onMultilineInput,\n        onFocus: this._onFocus,\n        onBlur: this._onBlur,\n        onMouseDown: this._checkSelectionChanged,\n        onMouseUp: this._checkSelectionChanged,\n        onPaste: this._onPaste,\n        onScroll: this._onScroll,\n        \"aria-label\": this.props.accessibilityLabel || this.props.title,\n        \"data-test-id\": this.props.testId\n      });\n    } else {\n      var _a = this._getKeyboardType(),\n          keyboardTypeValue = _a.keyboardTypeValue,\n          wrapInForm = _a.wrapInForm,\n          pattern = _a.pattern;\n\n      var input = React.createElement(\"input\", {\n        ref: this._onMount,\n        style: combinedStyles,\n        value: this.state.inputValue,\n        title: this.props.title,\n        tabIndex: this.props.tabIndex,\n        className: className,\n        autoCapitalize: this.props.autoCapitalize,\n        autoCorrect: this.props.autoCorrect === false ? 'off' : undefined,\n        spellCheck: spellCheck,\n        disabled: !editable,\n        maxLength: this.props.maxLength,\n        placeholder: this.props.placeholder,\n        size: 1,\n        onChange: this._onInputChanged,\n        onKeyDown: this._onKeyDown,\n        onKeyUp: this._checkSelectionChanged,\n        onInput: this._onInput,\n        onFocus: this._onFocus,\n        onBlur: this._onBlur,\n        onMouseDown: this._checkSelectionChanged,\n        onMouseUp: this._checkSelectionChanged,\n        onPaste: this._onPaste,\n        \"aria-label\": this.props.accessibilityLabel || this.props.title,\n        type: keyboardTypeValue,\n        pattern: pattern,\n        \"data-test-id\": this.props.testId\n      });\n\n      if (wrapInForm) {\n        // Wrap the input in a form tag if required\n        input = React.createElement(\"form\", {\n          action: '',\n          onSubmit: function (ev) {\n            /* prevent form submission/page reload */\n            ev.preventDefault();\n\n            _this.blur();\n          },\n          style: _styles.formStyle\n        }, input);\n      }\n\n      return input;\n    }\n  };\n\n  TextInput._shouldAutoResize = function (props) {\n    // Single line boxes don't need auto-resize\n    if (!props.multiline) {\n      return false;\n    }\n\n    var combinedStyles = Styles_1.default.combine(props.style);\n\n    if (!combinedStyles || typeof combinedStyles === 'number') {\n      // Number-type styles aren't allowed on web but if they're found we can't decode them so assume not fixed height\n      return true;\n    } else if (Array.isArray(combinedStyles)) {\n      // Iterate across the array and see if there's any height value\n      // It's possible that the height could be set via another mechanism (like absolute positioning) which would potenailly\n      // incorrectly engage the autoResize mode\n      return combinedStyles.some(function (style) {\n        if (!style || typeof style === 'number') {\n          return true;\n        }\n\n        return style.height === undefined;\n      });\n    } else {\n      return combinedStyles.height === undefined;\n    }\n  };\n\n  TextInput._updateScrollPositions = function (element, autoResize) {\n    // If the height is fixed, there's nothing more to do\n    if (!autoResize) {\n      return;\n    } // When scrolling we need to retain scroll tops of all elements\n\n\n    var scrollTops = this._getParentElementAndTops(element); // Reset height to 1px so that we can detect shrinking TextInputs\n\n\n    element.style.height = '1px';\n    element.style.height = element.scrollHeight + 'px';\n    scrollTops.forEach(function (obj) {\n      obj.el.scrollTop = obj.top;\n    });\n  };\n\n  TextInput._getParentElementAndTops = function (textAreaElement) {\n    var element = textAreaElement;\n    var results = [];\n\n    while (element && element.parentElement) {\n      element = element.parentElement;\n      results.push({\n        el: element,\n        top: element.scrollTop\n      });\n    }\n\n    return results;\n  };\n\n  TextInput.prototype._getKeyboardType = function () {\n    // Determine the correct virtual keyboardType in HTML 5.\n    // Some types require the <input> tag to be wrapped in a form.\n    // Pattern is used on numeric keyboardType to display numbers only.\n    var keyboardTypeValue = 'text';\n    var wrapInForm = false;\n    var pattern;\n\n    if (this.props.keyboardType === 'numeric') {\n      pattern = '\\\\d*';\n    } else if (this.props.keyboardType === 'number-pad') {\n      keyboardTypeValue = 'tel';\n    } else if (this.props.keyboardType === 'email-address') {\n      keyboardTypeValue = 'email';\n    }\n\n    if (this.props.returnKeyType === 'search') {\n      keyboardTypeValue = 'search';\n      wrapInForm = true;\n    }\n\n    if (this.props.secureTextEntry) {\n      keyboardTypeValue = 'password';\n    }\n\n    return {\n      keyboardTypeValue: keyboardTypeValue,\n      wrapInForm: wrapInForm,\n      pattern: pattern\n    };\n  };\n\n  TextInput.prototype.blur = function () {\n    if (this._mountedComponent) {\n      this._mountedComponent.blur();\n    }\n  };\n\n  TextInput.prototype.requestFocus = function () {\n    this._focus();\n  };\n\n  TextInput.prototype.focus = function () {\n    if (this._mountedComponent) {\n      this._mountedComponent.focus();\n    }\n  };\n\n  TextInput.prototype.setAccessibilityFocus = function () {\n    this._focus();\n  };\n\n  TextInput.prototype.isFocused = function () {\n    if (this._mountedComponent) {\n      return document.activeElement === this._mountedComponent;\n    }\n\n    return false;\n  };\n\n  TextInput.prototype.selectAll = function () {\n    if (this._mountedComponent) {\n      this._mountedComponent.select();\n    }\n  };\n\n  TextInput.prototype.selectRange = function (start, end) {\n    if (this._mountedComponent) {\n      var component = this._mountedComponent;\n      component.setSelectionRange(start, end);\n    }\n  };\n\n  TextInput.prototype.getSelectionRange = function () {\n    var range = {\n      start: 0,\n      end: 0\n    };\n\n    if (this._mountedComponent) {\n      range.start = this._mountedComponent.selectionStart || 0;\n      range.end = this._mountedComponent.selectionEnd || 0;\n    }\n\n    return range;\n  };\n\n  TextInput.prototype.setValue = function (value) {\n    var inputValue = value || '';\n\n    if (this.state.inputValue !== inputValue) {\n      // It's important to set the actual value in the DOM immediately. This allows us to call other related methods\n      // like selectRange synchronously afterward.\n      if (this._mountedComponent) {\n        this._mountedComponent.value = inputValue;\n      }\n\n      this.setState({\n        inputValue: inputValue\n      });\n\n      if (this.props.onChangeText) {\n        this.props.onChangeText(value);\n      }\n    }\n  };\n\n  TextInput.contextTypes = {\n    focusArbitrator: PropTypes.object\n  };\n  return TextInput;\n}(React.Component);\n\nexports.TextInput = TextInput;\nFocusManager_1.applyFocusableComponentMixin(TextInput);\nexports.default = TextInput;","map":{"version":3,"sources":["/Users/trungthang/Documents/webStreamGame/node_modules/react-ult/dist/web/TextInput.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__","constructor","create","defineProperty","exports","value","TextInput","PropTypes","require","React","AutoFocusHelper_1","FocusManager_1","lodashMini_1","Styles_1","_isMac","navigator","platform","indexOf","_styles","defaultStyle","position","display","flexDirection","flexBasis","flexGrow","flexShrink","overflowX","overflowY","alignItems","formStyle","flex","TextInputPlaceholderSupport","getClassName","color","key","_colorKey","addRef","document","undefined","cache","_cachedStyles","refCounter","className","style","createElement","type","textContent","_getStyle","head","appendChild","styleElement","removeRef","item","parentNode","removeChild","toLowerCase","replace","placeholderColor","selectors","map","pseudoSelector","join","_super","props","context","_this","_mountedComponent","_selectionStart","_selectionEnd","_isFocused","_ariaLiveEnabled","_onMount","comp","HTMLTextAreaElement","_updateScrollPositions","state","autoResize","_onMultilineInput","ev","_onInput","currentTarget","setAttribute","_onFocus","e","onFocus","_onBlur","removeAttribute","onBlur","_onPaste","onPaste","_checkSelectionChanged","_onInputChanged","event","defaultPrevented","inputValue","setState","onChangeText","selectionStart","selectionEnd","onSelectionChange","_onKeyDown","keyCode","multiline","blurOnSubmit","onSubmitEditing","blur","onKeyPress","_onScroll","targetElement","scrollHeight","clientHeight","scrollTop","onScroll","scrollLeft","_focus","FocusArbitratorProvider","requestFocus","focus","defaultValue","_shouldAutoResize","UNSAFE_componentWillReceiveProps","nextProps","nextState","fixedHeight","placeholderTextColor","isEmpty","componentDidMount","autoFocus","componentWillUnmount","render","combinedStyles","default","combine","outline","resize","borderWidth","editable","spellCheck","autoCorrect","ref","title","tabIndex","disabled","maxLength","placeholder","onChange","onKeyDown","onKeyUp","onInput","onMouseDown","onMouseUp","accessibilityLabel","testId","_a","_getKeyboardType","keyboardTypeValue","wrapInForm","pattern","input","autoCapitalize","size","action","onSubmit","preventDefault","isArray","some","height","element","scrollTops","_getParentElementAndTops","forEach","obj","el","top","textAreaElement","results","parentElement","push","keyboardType","returnKeyType","secureTextEntry","setAccessibilityFocus","isFocused","activeElement","selectAll","select","selectRange","start","end","component","setSelectionRange","getSelectionRange","range","setValue","contextTypes","focusArbitrator","object","Component","applyFocusableComponentMixin"],"mappings":"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","sourcesContent":["\"use strict\";\r\n/**\r\n * TextInput.tsx\r\n *\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT license.\r\n *\r\n * Web-specific implementation of the cross-platform TextInput abstraction.\r\n */\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.TextInput = void 0;\r\nvar PropTypes = require(\"prop-types\");\r\nvar React = require(\"react\");\r\nvar AutoFocusHelper_1 = require(\"../common/utils/AutoFocusHelper\");\r\nvar FocusManager_1 = require(\"./utils/FocusManager\");\r\nvar lodashMini_1 = require(\"./utils/lodashMini\");\r\nvar Styles_1 = require(\"./Styles\");\r\nvar _isMac = (typeof navigator !== 'undefined') && (typeof navigator.platform === 'string') && (navigator.platform.indexOf('Mac') >= 0);\r\n// Cast to any to allow merging of web and RX styles\r\nvar _styles = {\r\n    defaultStyle: {\r\n        position: 'relative',\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        flexBasis: 'auto',\r\n        flexGrow: 0,\r\n        flexShrink: 0,\r\n        overflowX: 'hidden',\r\n        overflowY: 'auto',\r\n        alignItems: 'stretch',\r\n    },\r\n    formStyle: {\r\n        display: 'flex',\r\n        flex: 1,\r\n    },\r\n};\r\nvar TextInputPlaceholderSupport = /** @class */ (function () {\r\n    function TextInputPlaceholderSupport() {\r\n    }\r\n    TextInputPlaceholderSupport.getClassName = function (color) {\r\n        var key = this._colorKey(color);\r\n        return \"reactxp-placeholder-\" + key;\r\n    };\r\n    TextInputPlaceholderSupport.addRef = function (color) {\r\n        if (typeof document === undefined) {\r\n            return;\r\n        }\r\n        var cache = this._cachedStyles;\r\n        var key = this._colorKey(color);\r\n        if (cache.hasOwnProperty(key)) {\r\n            cache[key].refCounter++;\r\n        }\r\n        else {\r\n            var className = this.getClassName(color);\r\n            var style = document.createElement('style');\r\n            style.type = 'text/css';\r\n            style.textContent = this._getStyle(className, color);\r\n            document.head.appendChild(style);\r\n            cache[key] = {\r\n                refCounter: 1,\r\n                styleElement: style,\r\n            };\r\n        }\r\n    };\r\n    TextInputPlaceholderSupport.removeRef = function (color) {\r\n        var cache = this._cachedStyles;\r\n        var key = this._colorKey(color);\r\n        if (cache.hasOwnProperty(key)) {\r\n            var item = cache[key];\r\n            if (--item.refCounter < 1) {\r\n                var styleElement = item.styleElement;\r\n                if (styleElement.parentNode) {\r\n                    styleElement.parentNode.removeChild(styleElement);\r\n                }\r\n                delete cache[key];\r\n            }\r\n        }\r\n    };\r\n    TextInputPlaceholderSupport._colorKey = function (color) {\r\n        return color.toLowerCase()\r\n            .replace(/(,|\\.|#)/g, '_')\r\n            .replace(/[^a-z0-9_]/g, '');\r\n    };\r\n    TextInputPlaceholderSupport._getStyle = function (className, placeholderColor) {\r\n        var selectors = [\r\n            '::placeholder',\r\n            '::-webkit-input-placeholder',\r\n            '::-moz-placeholder',\r\n            ':-moz-placeholder',\r\n            ':-ms-input-placeholder',\r\n        ];\r\n        return selectors\r\n            .map(function (pseudoSelector) {\r\n            return \".\" + className + pseudoSelector + \" {\\n\" +\r\n                \"  opacity: 1;\\n\" +\r\n                (\"  color: \" + placeholderColor + \";\\n\") +\r\n                \"}\";\r\n        }).join('\\n');\r\n    };\r\n    TextInputPlaceholderSupport._cachedStyles = {};\r\n    return TextInputPlaceholderSupport;\r\n}());\r\nvar TextInput = /** @class */ (function (_super) {\r\n    __extends(TextInput, _super);\r\n    function TextInput(props, context) {\r\n        var _this = _super.call(this, props, context) || this;\r\n        _this._mountedComponent = null;\r\n        _this._selectionStart = 0;\r\n        _this._selectionEnd = 0;\r\n        _this._isFocused = false;\r\n        _this._ariaLiveEnabled = false;\r\n        _this._onMount = function (comp) {\r\n            _this._mountedComponent = comp;\r\n            if (_this._mountedComponent && _this._mountedComponent instanceof HTMLTextAreaElement) {\r\n                TextInput._updateScrollPositions(_this._mountedComponent, !!_this.state.autoResize);\r\n            }\r\n        };\r\n        _this._onMultilineInput = function (ev) {\r\n            _this._onInput();\r\n            TextInput._updateScrollPositions(ev.currentTarget, !!_this.state.autoResize);\r\n        };\r\n        _this._onInput = function () {\r\n            if (_isMac && _this._mountedComponent && _this._isFocused && !_this._ariaLiveEnabled) {\r\n                // VoiceOver does not handle text inputs properly at the moment, aria-live is a temporary workaround.\r\n                // And we're adding aria-live only for the focused input which is being edited, otherwise it might\r\n                // interrupt some required announcements.\r\n                _this._mountedComponent.setAttribute('aria-live', 'assertive');\r\n                _this._ariaLiveEnabled = true;\r\n            }\r\n        };\r\n        _this._onFocus = function (e) {\r\n            if (_this._mountedComponent) {\r\n                _this._isFocused = true;\r\n                if (_this.props.onFocus) {\r\n                    _this.props.onFocus(e);\r\n                }\r\n            }\r\n        };\r\n        _this._onBlur = function (e) {\r\n            if (_this._mountedComponent) {\r\n                _this._isFocused = false;\r\n                if (_isMac && _this._ariaLiveEnabled) {\r\n                    _this._mountedComponent.removeAttribute('aria-live');\r\n                    _this._ariaLiveEnabled = false;\r\n                }\r\n                if (_this.props.onBlur) {\r\n                    _this.props.onBlur(e);\r\n                }\r\n            }\r\n        };\r\n        _this._onPaste = function (e) {\r\n            if (_this.props.onPaste) {\r\n                _this.props.onPaste(e);\r\n            }\r\n            _this._checkSelectionChanged();\r\n        };\r\n        _this._onInputChanged = function (event) {\r\n            if (!event.defaultPrevented) {\r\n                if (_this._mountedComponent) {\r\n                    // Has the input value changed?\r\n                    var value = _this._mountedComponent.value || '';\r\n                    if (_this.state.inputValue !== value) {\r\n                        // If the parent component didn't specify a value, we'll keep\r\n                        // track of the modified value.\r\n                        if (_this.props.value === undefined) {\r\n                            _this.setState({\r\n                                inputValue: value,\r\n                            });\r\n                        }\r\n                        if (_this.props.onChangeText) {\r\n                            _this.props.onChangeText(value);\r\n                        }\r\n                    }\r\n                    _this._checkSelectionChanged();\r\n                }\r\n            }\r\n        };\r\n        _this._checkSelectionChanged = function () {\r\n            if (_this._mountedComponent) {\r\n                if (_this._selectionStart !== _this._mountedComponent.selectionStart ||\r\n                    _this._selectionEnd !== _this._mountedComponent.selectionEnd) {\r\n                    _this._selectionStart = _this._mountedComponent.selectionStart || 0;\r\n                    _this._selectionEnd = _this._mountedComponent.selectionEnd || 0;\r\n                    if (_this.props.onSelectionChange) {\r\n                        _this.props.onSelectionChange(_this._selectionStart, _this._selectionEnd);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        _this._onKeyDown = function (e) {\r\n            // Generate a \"submit editing\" event if the user\r\n            // pressed enter or return.\r\n            if (e.keyCode === 13 && (!_this.props.multiline || _this.props.blurOnSubmit)) {\r\n                if (_this.props.onSubmitEditing) {\r\n                    _this.props.onSubmitEditing();\r\n                }\r\n                if (_this.props.blurOnSubmit) {\r\n                    _this.blur();\r\n                }\r\n            }\r\n            if (_this.props.onKeyPress) {\r\n                _this.props.onKeyPress(e);\r\n            }\r\n            _this._checkSelectionChanged();\r\n        };\r\n        _this._onScroll = function (e) {\r\n            var targetElement = e.currentTarget;\r\n            // Fix scrollTop if the TextInput can auto-grow\r\n            // If the item is bounded by max-height, don't scroll since we want input to follow the cursor at that point\r\n            if (_this.state.autoResize && targetElement.scrollHeight < targetElement.clientHeight) {\r\n                targetElement.scrollTop = 0;\r\n            }\r\n            if (_this.props.onScroll) {\r\n                _this.props.onScroll(targetElement.scrollLeft, targetElement.scrollTop);\r\n            }\r\n        };\r\n        _this._focus = function () {\r\n            AutoFocusHelper_1.FocusArbitratorProvider.requestFocus(_this, function () { return _this.focus(); }, function () { return !!_this._mountedComponent; });\r\n        };\r\n        _this.state = {\r\n            inputValue: props.value !== undefined ? props.value : (props.defaultValue || ''),\r\n            autoResize: TextInput._shouldAutoResize(props),\r\n        };\r\n        return _this;\r\n    }\r\n    TextInput.prototype.UNSAFE_componentWillReceiveProps = function (nextProps) {\r\n        var _this = this;\r\n        var nextState = {};\r\n        if (nextProps.value !== undefined && nextProps.value !== this.state.inputValue) {\r\n            nextState.inputValue = nextProps.value;\r\n        }\r\n        if (nextProps.style !== this.props.style || nextProps.multiline !== this.props.multiline) {\r\n            var fixedHeight = TextInput._shouldAutoResize(nextProps);\r\n            if (this.state.autoResize !== fixedHeight) {\r\n                nextState.autoResize = fixedHeight;\r\n            }\r\n        }\r\n        if (nextProps.placeholderTextColor !== this.props.placeholderTextColor) {\r\n            if (nextProps.placeholderTextColor) {\r\n                TextInputPlaceholderSupport.addRef(nextProps.placeholderTextColor);\r\n            }\r\n            if (this.props.placeholderTextColor) {\r\n                TextInputPlaceholderSupport.removeRef(this.props.placeholderTextColor);\r\n            }\r\n        }\r\n        if (!lodashMini_1.isEmpty(nextState)) {\r\n            this.setState(nextState, function () {\r\n                // Resize as needed after state is set\r\n                if (_this._mountedComponent instanceof HTMLTextAreaElement) {\r\n                    TextInput._updateScrollPositions(_this._mountedComponent, !!_this.state.autoResize);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    TextInput.prototype.componentDidMount = function () {\r\n        if (this.props.placeholderTextColor) {\r\n            TextInputPlaceholderSupport.addRef(this.props.placeholderTextColor);\r\n        }\r\n        if (this.props.autoFocus) {\r\n            this.requestFocus();\r\n        }\r\n    };\r\n    TextInput.prototype.componentWillUnmount = function () {\r\n        if (this.props.placeholderTextColor) {\r\n            TextInputPlaceholderSupport.removeRef(this.props.placeholderTextColor);\r\n        }\r\n    };\r\n    TextInput.prototype.render = function () {\r\n        var _this = this;\r\n        var combinedStyles = Styles_1.default.combine([_styles.defaultStyle, this.props.style]);\r\n        // Always hide the outline.\r\n        combinedStyles.outline = 'none';\r\n        combinedStyles.resize = 'none';\r\n        // Set the border to zero width if not otherwise specified.\r\n        if (combinedStyles.borderWidth === undefined) {\r\n            combinedStyles.borderWidth = 0;\r\n        }\r\n        // By default, the control is editable.\r\n        var editable = (this.props.editable !== undefined ? this.props.editable : true);\r\n        var spellCheck = (this.props.spellCheck !== undefined ? this.props.spellCheck : this.props.autoCorrect);\r\n        var className = this.props.placeholderTextColor !== undefined ?\r\n            TextInputPlaceholderSupport.getClassName(this.props.placeholderTextColor) : undefined;\r\n        // Use a textarea for multi-line and a regular input for single-line.\r\n        if (this.props.multiline) {\r\n            return (React.createElement(\"textarea\", { ref: this._onMount, style: combinedStyles, value: this.state.inputValue, title: this.props.title, tabIndex: this.props.tabIndex, autoCorrect: this.props.autoCorrect === false ? 'off' : undefined, spellCheck: spellCheck, disabled: !editable, maxLength: this.props.maxLength, placeholder: this.props.placeholder, className: className, onChange: this._onInputChanged, onKeyDown: this._onKeyDown, onKeyUp: this._checkSelectionChanged, onInput: this._onMultilineInput, onFocus: this._onFocus, onBlur: this._onBlur, onMouseDown: this._checkSelectionChanged, onMouseUp: this._checkSelectionChanged, onPaste: this._onPaste, onScroll: this._onScroll, \"aria-label\": this.props.accessibilityLabel || this.props.title, \"data-test-id\": this.props.testId }));\r\n        }\r\n        else {\r\n            var _a = this._getKeyboardType(), keyboardTypeValue = _a.keyboardTypeValue, wrapInForm = _a.wrapInForm, pattern = _a.pattern;\r\n            var input = (React.createElement(\"input\", { ref: this._onMount, style: combinedStyles, value: this.state.inputValue, title: this.props.title, tabIndex: this.props.tabIndex, className: className, autoCapitalize: this.props.autoCapitalize, autoCorrect: this.props.autoCorrect === false ? 'off' : undefined, spellCheck: spellCheck, disabled: !editable, maxLength: this.props.maxLength, placeholder: this.props.placeholder, size: 1, onChange: this._onInputChanged, onKeyDown: this._onKeyDown, onKeyUp: this._checkSelectionChanged, onInput: this._onInput, onFocus: this._onFocus, onBlur: this._onBlur, onMouseDown: this._checkSelectionChanged, onMouseUp: this._checkSelectionChanged, onPaste: this._onPaste, \"aria-label\": this.props.accessibilityLabel || this.props.title, type: keyboardTypeValue, pattern: pattern, \"data-test-id\": this.props.testId }));\r\n            if (wrapInForm) {\r\n                // Wrap the input in a form tag if required\r\n                input = (React.createElement(\"form\", { action: '', onSubmit: function (ev) { /* prevent form submission/page reload */ ev.preventDefault(); _this.blur(); }, style: _styles.formStyle }, input));\r\n            }\r\n            return input;\r\n        }\r\n    };\r\n    TextInput._shouldAutoResize = function (props) {\r\n        // Single line boxes don't need auto-resize\r\n        if (!props.multiline) {\r\n            return false;\r\n        }\r\n        var combinedStyles = Styles_1.default.combine(props.style);\r\n        if (!combinedStyles || typeof combinedStyles === 'number') {\r\n            // Number-type styles aren't allowed on web but if they're found we can't decode them so assume not fixed height\r\n            return true;\r\n        }\r\n        else if (Array.isArray(combinedStyles)) {\r\n            // Iterate across the array and see if there's any height value\r\n            // It's possible that the height could be set via another mechanism (like absolute positioning) which would potenailly\r\n            // incorrectly engage the autoResize mode\r\n            return combinedStyles.some(function (style) {\r\n                if (!style || typeof style === 'number') {\r\n                    return true;\r\n                }\r\n                return style.height === undefined;\r\n            });\r\n        }\r\n        else {\r\n            return combinedStyles.height === undefined;\r\n        }\r\n    };\r\n    TextInput._updateScrollPositions = function (element, autoResize) {\r\n        // If the height is fixed, there's nothing more to do\r\n        if (!autoResize) {\r\n            return;\r\n        }\r\n        // When scrolling we need to retain scroll tops of all elements\r\n        var scrollTops = this._getParentElementAndTops(element);\r\n        // Reset height to 1px so that we can detect shrinking TextInputs\r\n        element.style.height = '1px';\r\n        element.style.height = element.scrollHeight + 'px';\r\n        scrollTops.forEach(function (obj) {\r\n            obj.el.scrollTop = obj.top;\r\n        });\r\n    };\r\n    TextInput._getParentElementAndTops = function (textAreaElement) {\r\n        var element = textAreaElement;\r\n        var results = [];\r\n        while (element && element.parentElement) {\r\n            element = element.parentElement;\r\n            results.push({\r\n                el: element,\r\n                top: element.scrollTop,\r\n            });\r\n        }\r\n        return results;\r\n    };\r\n    TextInput.prototype._getKeyboardType = function () {\r\n        // Determine the correct virtual keyboardType in HTML 5.\r\n        // Some types require the <input> tag to be wrapped in a form.\r\n        // Pattern is used on numeric keyboardType to display numbers only.\r\n        var keyboardTypeValue = 'text';\r\n        var wrapInForm = false;\r\n        var pattern;\r\n        if (this.props.keyboardType === 'numeric') {\r\n            pattern = '\\\\d*';\r\n        }\r\n        else if (this.props.keyboardType === 'number-pad') {\r\n            keyboardTypeValue = 'tel';\r\n        }\r\n        else if (this.props.keyboardType === 'email-address') {\r\n            keyboardTypeValue = 'email';\r\n        }\r\n        if (this.props.returnKeyType === 'search') {\r\n            keyboardTypeValue = 'search';\r\n            wrapInForm = true;\r\n        }\r\n        if (this.props.secureTextEntry) {\r\n            keyboardTypeValue = 'password';\r\n        }\r\n        return { keyboardTypeValue: keyboardTypeValue, wrapInForm: wrapInForm, pattern: pattern };\r\n    };\r\n    TextInput.prototype.blur = function () {\r\n        if (this._mountedComponent) {\r\n            this._mountedComponent.blur();\r\n        }\r\n    };\r\n    TextInput.prototype.requestFocus = function () {\r\n        this._focus();\r\n    };\r\n    TextInput.prototype.focus = function () {\r\n        if (this._mountedComponent) {\r\n            this._mountedComponent.focus();\r\n        }\r\n    };\r\n    TextInput.prototype.setAccessibilityFocus = function () {\r\n        this._focus();\r\n    };\r\n    TextInput.prototype.isFocused = function () {\r\n        if (this._mountedComponent) {\r\n            return document.activeElement === this._mountedComponent;\r\n        }\r\n        return false;\r\n    };\r\n    TextInput.prototype.selectAll = function () {\r\n        if (this._mountedComponent) {\r\n            this._mountedComponent.select();\r\n        }\r\n    };\r\n    TextInput.prototype.selectRange = function (start, end) {\r\n        if (this._mountedComponent) {\r\n            var component = this._mountedComponent;\r\n            component.setSelectionRange(start, end);\r\n        }\r\n    };\r\n    TextInput.prototype.getSelectionRange = function () {\r\n        var range = {\r\n            start: 0,\r\n            end: 0,\r\n        };\r\n        if (this._mountedComponent) {\r\n            range.start = this._mountedComponent.selectionStart || 0;\r\n            range.end = this._mountedComponent.selectionEnd || 0;\r\n        }\r\n        return range;\r\n    };\r\n    TextInput.prototype.setValue = function (value) {\r\n        var inputValue = value || '';\r\n        if (this.state.inputValue !== inputValue) {\r\n            // It's important to set the actual value in the DOM immediately. This allows us to call other related methods\r\n            // like selectRange synchronously afterward.\r\n            if (this._mountedComponent) {\r\n                this._mountedComponent.value = inputValue;\r\n            }\r\n            this.setState({\r\n                inputValue: inputValue,\r\n            });\r\n            if (this.props.onChangeText) {\r\n                this.props.onChangeText(value);\r\n            }\r\n        }\r\n    };\r\n    TextInput.contextTypes = {\r\n        focusArbitrator: PropTypes.object,\r\n    };\r\n    return TextInput;\r\n}(React.Component));\r\nexports.TextInput = TextInput;\r\nFocusManager_1.applyFocusableComponentMixin(TextInput);\r\nexports.default = TextInput;\r\n"]},"metadata":{},"sourceType":"script"}