{"ast":null,"code":"\"use strict\";\n/**\r\n * GestureView.tsx\r\n *\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT license.\r\n *\r\n * Web-specific implementation of the cross-platform GestureView component.\r\n * It provides support for the scroll wheel, clicks and double clicks.\r\n */\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GestureView = void 0;\n\nvar PropTypes = require(\"prop-types\");\n\nvar React = require(\"react\");\n\nvar ReactDOM = require(\"react-dom\");\n\nvar GestureView_1 = require(\"../common/GestureView\");\n\nvar Interfaces_1 = require(\"../common/Interfaces\");\n\nvar AccessibilityUtil_1 = require(\"./AccessibilityUtil\");\n\nvar lodashMini_1 = require(\"./utils/lodashMini\");\n\nvar MouseResponder_1 = require(\"./utils/MouseResponder\");\n\nvar Styles_1 = require(\"./Styles\"); // Cast to any to allow merging of web and RX styles\n\n\nvar _styles = {\n  defaultView: {\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'column',\n    flexGrow: 0,\n    flexShrink: 0,\n    overflow: 'hidden',\n    alignItems: 'stretch',\n    justifyContent: 'center'\n  }\n}; // Unique to web\n\nvar _preferredPanRatio = 3;\nvar _idCounter = 1;\n\nvar GestureView =\n/** @class */\nfunction (_super) {\n  __extends(GestureView, _super);\n\n  function GestureView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this._id = _idCounter++;\n    _this._isMounted = false;\n    _this._pendingMouseGestureType = GestureView_1.GestureType.None;\n    _this._gestureTypeLocked = false;\n\n    _this._setContainerRef = function (container) {\n      // safe since div refs resolve into HTMLElement and not react element.\n      _this._container = container;\n\n      if (container) {\n        _this._createMouseResponder(container);\n      } else {\n        _this._disposeMouseResponder();\n      }\n    };\n\n    _this._onMouseDown = function (e) {\n      if (_this.props.onPan || _this.props.onPanHorizontal || _this.props.onPanVertical) {\n        // Disable mousedown default action that initiates a drag/drop operation and breaks panning with a not-allowed cursor.\n        // https://w3c.github.io/uievents/#mousedown\n        e.preventDefault();\n      }\n\n      if (_this.props.onLongPress) {\n        var gsState = _this._mouseEventToTapGestureState(e);\n\n        _this._startLongPressTimer(gsState, true);\n      }\n    };\n\n    _this._onClick = function (e) {\n      _this._cancelLongPressTimer();\n\n      var gsState = _this._mouseEventToTapGestureState(e);\n\n      if (!_this.props.onDoubleTap) {\n        // If there is no double-tap handler, we can invoke the tap handler immediately.\n        _this._sendTapEvent(gsState);\n      } else if (_this._isDoubleTap(gsState)) {\n        // This is a double-tap, so swallow the previous single tap.\n        _this._cancelDoubleTapTimer();\n\n        _this._sendDoubleTapEvent(gsState);\n      } else {\n        // This wasn't a double-tap. Report any previous single tap and start the double-tap\n        // timer so we can determine whether the current tap is a single or double.\n        _this._reportDelayedTap();\n\n        _this._startDoubleTapTimer(gsState);\n      }\n    };\n\n    _this._sendDoubleClickEvent = function (e) {\n      if (_this.props.onDoubleClick) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        var tapEvent = _this._mouseEventToTapGestureState(e);\n\n        _this.props.onDoubleClick(tapEvent);\n      }\n    };\n\n    _this._sendContextMenuEvent = function (e) {\n      if (_this.props.onContextMenu) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        var tapEvent = _this._mouseEventToTapGestureState(e);\n\n        _this.props.onContextMenu(tapEvent);\n      }\n    };\n\n    _this._onTouchStart = function (e) {\n      if (!_this._initialTouch) {\n        var ft = e.touches[0];\n        _this._initialTouch = {\n          x: ft.clientX,\n          y: ft.clientY\n        };\n        _this._ongoingGesture = {\n          dx: 0,\n          dy: 0,\n          vx: 0,\n          vy: 0\n        };\n\n        _this._onTouchSeriesStart(GestureView._reactTouchEventToBasic(e));\n      }\n    };\n\n    _this._onTouchMove = function (e) {\n      if (!_this._initialTouch || !_this._ongoingGesture) {\n        return;\n      }\n\n      var ft = e.touches[0];\n      _this._ongoingGesture = {\n        dx: ft.clientX - _this._initialTouch.x,\n        dy: ft.clientY - _this._initialTouch.y,\n        // TODO: calculate velocity?\n        vx: 0,\n        vy: 0\n      };\n\n      _this._onTouchChange(GestureView._reactTouchEventToBasic(e), _this._ongoingGesture);\n    };\n\n    _this._onTouchEnd = function (e) {\n      if (!_this._initialTouch || !_this._ongoingGesture) {\n        return;\n      }\n\n      if (e.touches.length === 0) {\n        _this._onTouchSeriesFinished(GestureView._reactTouchEventToBasic(e), _this._ongoingGesture);\n\n        _this._initialTouch = undefined;\n        _this._ongoingGesture = undefined;\n      }\n    };\n\n    _this._detectGestureType = function (gestureState) {\n      // we need to lock gesture type until it's completed\n      if (_this._gestureTypeLocked) {\n        return _this._pendingMouseGestureType;\n      }\n\n      _this._gestureTypeLocked = true;\n      var gsBasic = {\n        dx: gestureState.clientX - gestureState.initialClientX,\n        dy: gestureState.clientY - gestureState.initialClientY\n      };\n\n      if (_this._shouldRespondToPan(gsBasic)) {\n        return GestureView_1.GestureType.Pan;\n      } else if (_this._shouldRespondToPanVertical(gsBasic)) {\n        return GestureView_1.GestureType.PanVertical;\n      } else if (_this._shouldRespondToPanHorizontal(gsBasic)) {\n        return GestureView_1.GestureType.PanHorizontal;\n      }\n\n      _this._gestureTypeLocked = false;\n      return GestureView_1.GestureType.None;\n    };\n\n    _this._onWheel = function (e) {\n      if (_this.props.onScrollWheel) {\n        var clientRect = _this._getGestureViewClientRect();\n\n        if (clientRect) {\n          var scrollWheelEvent = {\n            clientX: e.clientX - clientRect.left,\n            clientY: e.clientY - clientRect.top,\n            pageX: e.pageX,\n            pageY: e.pageY,\n            scrollAmount: e.deltaY,\n            timeStamp: e.timeStamp,\n            isTouch: false\n          };\n\n          _this.props.onScrollWheel(scrollWheelEvent);\n        }\n      }\n    };\n\n    _this._sendMousePanEvent = function (gestureState) {\n      switch (_this._pendingMouseGestureType) {\n        case GestureView_1.GestureType.Pan:\n          if (_this.props.onPan) {\n            _this.props.onPan(gestureState);\n          }\n\n          break;\n\n        case GestureView_1.GestureType.PanVertical:\n          if (_this.props.onPanVertical) {\n            _this.props.onPanVertical(gestureState);\n          }\n\n          break;\n\n        case GestureView_1.GestureType.PanHorizontal:\n          if (_this.props.onPanHorizontal) {\n            _this.props.onPanHorizontal(gestureState);\n          }\n\n          break;\n\n        default: // do nothing;\n\n      } // we need to clean taps in case there was a pan event in the meantime\n\n\n      if (_this._pendingMouseGestureType !== GestureView_1.GestureType.None) {\n        _this._clearLastTap();\n\n        _this._cancelDoubleTapTimer();\n\n        _this._skipNextTap();\n      }\n    };\n\n    return _this;\n  } // Get preferred pan ratio for platform.\n\n\n  GestureView.prototype._getPreferredPanRatio = function () {\n    return _preferredPanRatio;\n  }; // Returns the timestamp for the touch event in milliseconds.\n\n\n  GestureView.prototype._getEventTimestamp = function (e) {\n    return e.timeStamp;\n  };\n\n  GestureView.prototype.componentDidMount = function () {\n    this._isMounted = true;\n  };\n\n  GestureView.prototype.componentWillUnmount = function () {\n    _super.prototype.componentWillUnmount.call(this);\n\n    this._isMounted = false;\n  };\n\n  GestureView.prototype.render = function () {\n    var ariaRole = AccessibilityUtil_1.default.accessibilityTraitToString(this.props.accessibilityTraits);\n    var isAriaHidden = AccessibilityUtil_1.default.isHidden(this.props.importantForAccessibility);\n    return React.createElement(\"div\", {\n      style: this._getStyles(),\n      tabIndex: this.props.tabIndex,\n      ref: this._setContainerRef,\n      onMouseDown: this._onMouseDown,\n      onClick: this._onClick,\n      onWheel: this._onWheel,\n      onTouchStart: this._onTouchStart,\n      onTouchMove: this._onTouchMove,\n      onTouchEnd: this._onTouchEnd,\n      onFocus: this.props.onFocus,\n      onBlur: this.props.onBlur,\n      onKeyPress: this.props.onKeyPress,\n      role: ariaRole,\n      \"aria-label\": this.props.accessibilityLabel,\n      \"aria-hidden\": isAriaHidden,\n      onDoubleClick: this.props.onDoubleClick ? this._sendDoubleClickEvent : undefined,\n      onContextMenu: this.props.onContextMenu ? this._sendContextMenuEvent : undefined,\n      \"data-test-id\": this.props.testId\n    }, this.props.children);\n  };\n\n  GestureView.prototype.blur = function () {\n    var el = this._getContainer();\n\n    if (el) {\n      el.blur();\n    }\n  };\n\n  GestureView.prototype.focus = function () {\n    var el = this._getContainer();\n\n    if (el) {\n      el.focus();\n    }\n  };\n\n  GestureView.prototype._getContainer = function () {\n    if (!this._isMounted) {\n      return null;\n    }\n\n    try {\n      return ReactDOM.findDOMNode(this);\n    } catch (_a) {\n      // Handle exception due to potential unmount race condition.\n      return null;\n    }\n  };\n\n  GestureView.prototype._createMouseResponder = function (container) {\n    var _this = this;\n\n    this._disposeMouseResponder();\n\n    this._responder = MouseResponder_1.default.create({\n      id: this._id,\n      target: container,\n      disableWhenModal: !!this.context.isInRxMainView,\n      shouldBecomeFirstResponder: function (event) {\n        if (!_this.props.onPan && !_this.props.onPanHorizontal && !_this.props.onPanVertical) {\n          return false;\n        }\n\n        var boundingRect = _this._getGestureViewClientRect();\n\n        if (!boundingRect) {\n          return false;\n        }\n\n        var top = boundingRect.top,\n            left = boundingRect.left,\n            bottom = boundingRect.bottom,\n            right = boundingRect.right;\n        var clientX = event.clientX,\n            clientY = event.clientY;\n\n        if (clientX >= left && clientX <= right && clientY >= top && clientY <= bottom) {\n          return true;\n        }\n\n        return false;\n      },\n      onMove: function (event, gestureState) {\n        _this._pendingMouseGestureType = _this._detectGestureType(gestureState);\n\n        if (_this._pendingMouseGestureType !== GestureView_1.GestureType.None) {\n          _this._cancelLongPressTimer();\n        }\n\n        _this._sendMousePanEvent(gestureState);\n      },\n      onTerminate: function (event, gestureState) {\n        _this._cancelLongPressTimer();\n\n        _this._pendingMouseGestureType = _this._detectGestureType(gestureState);\n\n        _this._sendMousePanEvent(gestureState);\n\n        _this._pendingMouseGestureType = GestureView_1.GestureType.None;\n        _this._gestureTypeLocked = false;\n      }\n    });\n  };\n\n  GestureView.prototype._disposeMouseResponder = function () {\n    if (this._responder) {\n      this._responder.dispose();\n\n      delete this._responder;\n    }\n  };\n\n  GestureView.prototype._getStyles = function () {\n    var combinedStyles = Styles_1.default.combine([_styles.defaultView, this.props.style]);\n    var cursorName;\n\n    switch (this.props.mouseOverCursor) {\n      case Interfaces_1.Types.GestureMouseCursor.Grab:\n        cursorName = 'grab';\n        break;\n\n      case Interfaces_1.Types.GestureMouseCursor.Move:\n        cursorName = 'move';\n        break;\n\n      case Interfaces_1.Types.GestureMouseCursor.Pointer:\n        cursorName = 'pointer';\n        break;\n\n      case Interfaces_1.Types.GestureMouseCursor.NSResize:\n        cursorName = 'ns-resize';\n        break;\n\n      case Interfaces_1.Types.GestureMouseCursor.EWResize:\n        cursorName = 'ew-resize';\n        break;\n\n      case Interfaces_1.Types.GestureMouseCursor.NESWResize:\n        cursorName = 'nesw-resize';\n        break;\n\n      case Interfaces_1.Types.GestureMouseCursor.NWSEResize:\n        cursorName = 'nwse-resize';\n        break;\n\n      case Interfaces_1.Types.GestureMouseCursor.NotAllowed:\n        cursorName = 'not-allowed';\n        break;\n\n      case Interfaces_1.Types.GestureMouseCursor.ZoomIn:\n        cursorName = 'zoom-in';\n        break;\n\n      case Interfaces_1.Types.GestureMouseCursor.ZoomOut:\n        cursorName = 'zoom-out';\n        break;\n    }\n\n    if (cursorName) {\n      combinedStyles.cursor = cursorName;\n    }\n\n    return combinedStyles;\n  }; // The RN and React touch event types are basically identical except that React uses \"clientX/Y\"\n  // and RN uses \"locationX/Y\", so we need to map one to the other.  Unfortunately, due to inertia,\n  // web loses.  So, we need these 3 ugly functions...\n\n\n  GestureView._reactTouchEventToBasic = function (e) {\n    var ne = lodashMini_1.clone(e);\n    ne.changedTouches = this._mapReactTouchListToBasic(e.changedTouches);\n    ne.targetTouches = this._mapReactTouchListToBasic(e.targetTouches);\n    ne.touches = this._mapReactTouchListToBasic(e.touches);\n    var ft = ne.touches[0];\n\n    if (ft) {\n      // RN also apparently shims the first touch's location info onto the root touch event\n      ne.pageX = ft.pageX;\n      ne.pageY = ft.pageY;\n      ne.locationX = ft.locationX;\n      ne.locationY = ft.locationY;\n    }\n\n    return ne;\n  };\n\n  GestureView._mapReactTouchListToBasic = function (l) {\n    var nl = new Array(l.length);\n\n    for (var i = 0; i < l.length; i++) {\n      nl[i] = this._mapReactTouchToRx(l[i]);\n    }\n\n    return nl;\n  };\n\n  GestureView._mapReactTouchToRx = function (l) {\n    return {\n      identifier: l.identifier,\n      locationX: l.clientX,\n      locationY: l.clientY,\n      screenX: l.screenX,\n      screenY: l.screenY,\n      clientX: l.clientX,\n      clientY: l.clientY,\n      pageX: l.pageX,\n      pageY: l.pageY\n    };\n  };\n\n  GestureView.prototype._getClientXYOffset = function () {\n    var rect = this._getGestureViewClientRect();\n\n    return rect ? {\n      x: rect.left,\n      y: rect.top\n    } : {\n      x: 0,\n      y: 0\n    };\n  };\n\n  GestureView.prototype._getGestureViewClientRect = function () {\n    return this._container ? this._container.getBoundingClientRect() : null;\n  };\n\n  GestureView.contextTypes = {\n    isInRxMainView: PropTypes.bool\n  };\n  return GestureView;\n}(GestureView_1.default);\n\nexports.GestureView = GestureView;\nexports.default = GestureView;","map":{"version":3,"sources":["/Users/dangthang/Desktop/webStreamGame/node_modules/react-ult/dist/web/GestureView.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__","constructor","create","defineProperty","exports","value","GestureView","PropTypes","require","React","ReactDOM","GestureView_1","Interfaces_1","AccessibilityUtil_1","lodashMini_1","MouseResponder_1","Styles_1","_styles","defaultView","position","display","flexDirection","flexGrow","flexShrink","overflow","alignItems","justifyContent","_preferredPanRatio","_idCounter","_super","_this","apply","arguments","_id","_isMounted","_pendingMouseGestureType","GestureType","None","_gestureTypeLocked","_setContainerRef","container","_container","_createMouseResponder","_disposeMouseResponder","_onMouseDown","e","props","onPan","onPanHorizontal","onPanVertical","preventDefault","onLongPress","gsState","_mouseEventToTapGestureState","_startLongPressTimer","_onClick","_cancelLongPressTimer","onDoubleTap","_sendTapEvent","_isDoubleTap","_cancelDoubleTapTimer","_sendDoubleTapEvent","_reportDelayedTap","_startDoubleTapTimer","_sendDoubleClickEvent","onDoubleClick","stopPropagation","tapEvent","_sendContextMenuEvent","onContextMenu","_onTouchStart","_initialTouch","ft","touches","x","clientX","y","clientY","_ongoingGesture","dx","dy","vx","vy","_onTouchSeriesStart","_reactTouchEventToBasic","_onTouchMove","_onTouchChange","_onTouchEnd","length","_onTouchSeriesFinished","undefined","_detectGestureType","gestureState","gsBasic","initialClientX","initialClientY","_shouldRespondToPan","Pan","_shouldRespondToPanVertical","PanVertical","_shouldRespondToPanHorizontal","PanHorizontal","_onWheel","onScrollWheel","clientRect","_getGestureViewClientRect","scrollWheelEvent","left","top","pageX","pageY","scrollAmount","deltaY","timeStamp","isTouch","_sendMousePanEvent","_clearLastTap","_skipNextTap","_getPreferredPanRatio","_getEventTimestamp","componentDidMount","componentWillUnmount","render","ariaRole","default","accessibilityTraitToString","accessibilityTraits","isAriaHidden","isHidden","importantForAccessibility","createElement","style","_getStyles","tabIndex","ref","onMouseDown","onClick","onWheel","onTouchStart","onTouchMove","onTouchEnd","onFocus","onBlur","onKeyPress","role","accessibilityLabel","testId","children","blur","el","_getContainer","focus","findDOMNode","_a","_responder","id","target","disableWhenModal","context","isInRxMainView","shouldBecomeFirstResponder","event","boundingRect","bottom","right","onMove","onTerminate","dispose","combinedStyles","combine","cursorName","mouseOverCursor","Types","GestureMouseCursor","Grab","Move","Pointer","NSResize","EWResize","NESWResize","NWSEResize","NotAllowed","ZoomIn","ZoomOut","cursor","ne","clone","changedTouches","_mapReactTouchListToBasic","targetTouches","locationX","locationY","l","nl","i","_mapReactTouchToRx","identifier","screenX","screenY","_getClientXYOffset","rect","getBoundingClientRect","contextTypes","bool"],"mappings":"AAAA;AACA;;;;;;;;;;AASA,IAAIA,SAAS,GAAI,QAAQ,KAAKA,SAAd,IAA6B,YAAY;AACrD,MAAIC,aAAa,GAAG,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAChCF,IAAAA,aAAa,GAAGG,MAAM,CAACC,cAAP,IACX;AAAEC,MAAAA,SAAS,EAAE;AAAb,iBAA6BC,KAA7B,IAAsC,UAAUL,CAAV,EAAaC,CAAb,EAAgB;AAAED,MAAAA,CAAC,CAACI,SAAF,GAAcH,CAAd;AAAkB,KAD/D,IAEZ,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AAAE,WAAK,IAAIK,CAAT,IAAcL,CAAd,EAAiB,IAAIC,MAAM,CAACK,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCR,CAArC,EAAwCK,CAAxC,CAAJ,EAAgDN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;AAAc,KAFrG;;AAGA,WAAOP,aAAa,CAACC,CAAD,EAAIC,CAAJ,CAApB;AACH,GALD;;AAMA,SAAO,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AACnBF,IAAAA,aAAa,CAACC,CAAD,EAAIC,CAAJ,CAAb;;AACA,aAASS,EAAT,GAAc;AAAE,WAAKC,WAAL,GAAmBX,CAAnB;AAAuB;;AACvCA,IAAAA,CAAC,CAACO,SAAF,GAAcN,CAAC,KAAK,IAAN,GAAaC,MAAM,CAACU,MAAP,CAAcX,CAAd,CAAb,IAAiCS,EAAE,CAACH,SAAH,GAAeN,CAAC,CAACM,SAAjB,EAA4B,IAAIG,EAAJ,EAA7D,CAAd;AACH,GAJD;AAKH,CAZ2C,EAA5C;;AAaAR,MAAM,CAACW,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,WAAR,GAAsB,KAAK,CAA3B;;AACA,IAAIC,SAAS,GAAGC,OAAO,CAAC,YAAD,CAAvB;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,OAAD,CAAnB;;AACA,IAAIE,QAAQ,GAAGF,OAAO,CAAC,WAAD,CAAtB;;AACA,IAAIG,aAAa,GAAGH,OAAO,CAAC,uBAAD,CAA3B;;AACA,IAAII,YAAY,GAAGJ,OAAO,CAAC,sBAAD,CAA1B;;AACA,IAAIK,mBAAmB,GAAGL,OAAO,CAAC,qBAAD,CAAjC;;AACA,IAAIM,YAAY,GAAGN,OAAO,CAAC,oBAAD,CAA1B;;AACA,IAAIO,gBAAgB,GAAGP,OAAO,CAAC,wBAAD,CAA9B;;AACA,IAAIQ,QAAQ,GAAGR,OAAO,CAAC,UAAD,CAAtB,C,CACA;;;AACA,IAAIS,OAAO,GAAG;AACVC,EAAAA,WAAW,EAAE;AACTC,IAAAA,QAAQ,EAAE,UADD;AAETC,IAAAA,OAAO,EAAE,MAFA;AAGTC,IAAAA,aAAa,EAAE,QAHN;AAITC,IAAAA,QAAQ,EAAE,CAJD;AAKTC,IAAAA,UAAU,EAAE,CALH;AAMTC,IAAAA,QAAQ,EAAE,QAND;AAOTC,IAAAA,UAAU,EAAE,SAPH;AAQTC,IAAAA,cAAc,EAAE;AARP;AADH,CAAd,C,CAYA;;AACA,IAAIC,kBAAkB,GAAG,CAAzB;AACA,IAAIC,UAAU,GAAG,CAAjB;;AACA,IAAItB,WAAW;AAAG;AAAe,UAAUuB,MAAV,EAAkB;AAC/CzC,EAAAA,SAAS,CAACkB,WAAD,EAAcuB,MAAd,CAAT;;AACA,WAASvB,WAAT,GAAuB;AACnB,QAAIwB,KAAK,GAAGD,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACE,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAnB,IAAoD,IAAhE;;AACAF,IAAAA,KAAK,CAACG,GAAN,GAAYL,UAAU,EAAtB;AACAE,IAAAA,KAAK,CAACI,UAAN,GAAmB,KAAnB;AACAJ,IAAAA,KAAK,CAACK,wBAAN,GAAiCxB,aAAa,CAACyB,WAAd,CAA0BC,IAA3D;AACAP,IAAAA,KAAK,CAACQ,kBAAN,GAA2B,KAA3B;;AACAR,IAAAA,KAAK,CAACS,gBAAN,GAAyB,UAAUC,SAAV,EAAqB;AAC1C;AACAV,MAAAA,KAAK,CAACW,UAAN,GAAmBD,SAAnB;;AACA,UAAIA,SAAJ,EAAe;AACXV,QAAAA,KAAK,CAACY,qBAAN,CAA4BF,SAA5B;AACH,OAFD,MAGK;AACDV,QAAAA,KAAK,CAACa,sBAAN;AACH;AACJ,KATD;;AAUAb,IAAAA,KAAK,CAACc,YAAN,GAAqB,UAAUC,CAAV,EAAa;AAC9B,UAAIf,KAAK,CAACgB,KAAN,CAAYC,KAAZ,IAAqBjB,KAAK,CAACgB,KAAN,CAAYE,eAAjC,IAAoDlB,KAAK,CAACgB,KAAN,CAAYG,aAApE,EAAmF;AAC/E;AACA;AACAJ,QAAAA,CAAC,CAACK,cAAF;AACH;;AACD,UAAIpB,KAAK,CAACgB,KAAN,CAAYK,WAAhB,EAA6B;AACzB,YAAIC,OAAO,GAAGtB,KAAK,CAACuB,4BAAN,CAAmCR,CAAnC,CAAd;;AACAf,QAAAA,KAAK,CAACwB,oBAAN,CAA2BF,OAA3B,EAAoC,IAApC;AACH;AACJ,KAVD;;AAWAtB,IAAAA,KAAK,CAACyB,QAAN,GAAiB,UAAUV,CAAV,EAAa;AAC1Bf,MAAAA,KAAK,CAAC0B,qBAAN;;AACA,UAAIJ,OAAO,GAAGtB,KAAK,CAACuB,4BAAN,CAAmCR,CAAnC,CAAd;;AACA,UAAI,CAACf,KAAK,CAACgB,KAAN,CAAYW,WAAjB,EAA8B;AAC1B;AACA3B,QAAAA,KAAK,CAAC4B,aAAN,CAAoBN,OAApB;AACH,OAHD,MAIK,IAAItB,KAAK,CAAC6B,YAAN,CAAmBP,OAAnB,CAAJ,EAAiC;AAClC;AACAtB,QAAAA,KAAK,CAAC8B,qBAAN;;AACA9B,QAAAA,KAAK,CAAC+B,mBAAN,CAA0BT,OAA1B;AACH,OAJI,MAKA;AACD;AACA;AACAtB,QAAAA,KAAK,CAACgC,iBAAN;;AACAhC,QAAAA,KAAK,CAACiC,oBAAN,CAA2BX,OAA3B;AACH;AACJ,KAlBD;;AAmBAtB,IAAAA,KAAK,CAACkC,qBAAN,GAA8B,UAAUnB,CAAV,EAAa;AACvC,UAAIf,KAAK,CAACgB,KAAN,CAAYmB,aAAhB,EAA+B;AAC3BpB,QAAAA,CAAC,CAACK,cAAF;AACAL,QAAAA,CAAC,CAACqB,eAAF;;AACA,YAAIC,QAAQ,GAAGrC,KAAK,CAACuB,4BAAN,CAAmCR,CAAnC,CAAf;;AACAf,QAAAA,KAAK,CAACgB,KAAN,CAAYmB,aAAZ,CAA0BE,QAA1B;AACH;AACJ,KAPD;;AAQArC,IAAAA,KAAK,CAACsC,qBAAN,GAA8B,UAAUvB,CAAV,EAAa;AACvC,UAAIf,KAAK,CAACgB,KAAN,CAAYuB,aAAhB,EAA+B;AAC3BxB,QAAAA,CAAC,CAACK,cAAF;AACAL,QAAAA,CAAC,CAACqB,eAAF;;AACA,YAAIC,QAAQ,GAAGrC,KAAK,CAACuB,4BAAN,CAAmCR,CAAnC,CAAf;;AACAf,QAAAA,KAAK,CAACgB,KAAN,CAAYuB,aAAZ,CAA0BF,QAA1B;AACH;AACJ,KAPD;;AAQArC,IAAAA,KAAK,CAACwC,aAAN,GAAsB,UAAUzB,CAAV,EAAa;AAC/B,UAAI,CAACf,KAAK,CAACyC,aAAX,EAA0B;AACtB,YAAIC,EAAE,GAAG3B,CAAC,CAAC4B,OAAF,CAAU,CAAV,CAAT;AACA3C,QAAAA,KAAK,CAACyC,aAAN,GAAsB;AAAEG,UAAAA,CAAC,EAAEF,EAAE,CAACG,OAAR;AAAiBC,UAAAA,CAAC,EAAEJ,EAAE,CAACK;AAAvB,SAAtB;AACA/C,QAAAA,KAAK,CAACgD,eAAN,GAAwB;AAAEC,UAAAA,EAAE,EAAE,CAAN;AAASC,UAAAA,EAAE,EAAE,CAAb;AAAgBC,UAAAA,EAAE,EAAE,CAApB;AAAuBC,UAAAA,EAAE,EAAE;AAA3B,SAAxB;;AACApD,QAAAA,KAAK,CAACqD,mBAAN,CAA0B7E,WAAW,CAAC8E,uBAAZ,CAAoCvC,CAApC,CAA1B;AACH;AACJ,KAPD;;AAQAf,IAAAA,KAAK,CAACuD,YAAN,GAAqB,UAAUxC,CAAV,EAAa;AAC9B,UAAI,CAACf,KAAK,CAACyC,aAAP,IAAwB,CAACzC,KAAK,CAACgD,eAAnC,EAAoD;AAChD;AACH;;AACD,UAAIN,EAAE,GAAG3B,CAAC,CAAC4B,OAAF,CAAU,CAAV,CAAT;AACA3C,MAAAA,KAAK,CAACgD,eAAN,GAAwB;AACpBC,QAAAA,EAAE,EAAEP,EAAE,CAACG,OAAH,GAAa7C,KAAK,CAACyC,aAAN,CAAoBG,CADjB;AAEpBM,QAAAA,EAAE,EAAER,EAAE,CAACK,OAAH,GAAa/C,KAAK,CAACyC,aAAN,CAAoBK,CAFjB;AAGpB;AACAK,QAAAA,EAAE,EAAE,CAJgB;AAKpBC,QAAAA,EAAE,EAAE;AALgB,OAAxB;;AAOApD,MAAAA,KAAK,CAACwD,cAAN,CAAqBhF,WAAW,CAAC8E,uBAAZ,CAAoCvC,CAApC,CAArB,EAA6Df,KAAK,CAACgD,eAAnE;AACH,KAbD;;AAcAhD,IAAAA,KAAK,CAACyD,WAAN,GAAoB,UAAU1C,CAAV,EAAa;AAC7B,UAAI,CAACf,KAAK,CAACyC,aAAP,IAAwB,CAACzC,KAAK,CAACgD,eAAnC,EAAoD;AAChD;AACH;;AACD,UAAIjC,CAAC,CAAC4B,OAAF,CAAUe,MAAV,KAAqB,CAAzB,EAA4B;AACxB1D,QAAAA,KAAK,CAAC2D,sBAAN,CAA6BnF,WAAW,CAAC8E,uBAAZ,CAAoCvC,CAApC,CAA7B,EAAqEf,KAAK,CAACgD,eAA3E;;AACAhD,QAAAA,KAAK,CAACyC,aAAN,GAAsBmB,SAAtB;AACA5D,QAAAA,KAAK,CAACgD,eAAN,GAAwBY,SAAxB;AACH;AACJ,KATD;;AAUA5D,IAAAA,KAAK,CAAC6D,kBAAN,GAA2B,UAAUC,YAAV,EAAwB;AAC/C;AACA,UAAI9D,KAAK,CAACQ,kBAAV,EAA8B;AAC1B,eAAOR,KAAK,CAACK,wBAAb;AACH;;AACDL,MAAAA,KAAK,CAACQ,kBAAN,GAA2B,IAA3B;AACA,UAAIuD,OAAO,GAAG;AACVd,QAAAA,EAAE,EAAEa,YAAY,CAACjB,OAAb,GAAuBiB,YAAY,CAACE,cAD9B;AAEVd,QAAAA,EAAE,EAAEY,YAAY,CAACf,OAAb,GAAuBe,YAAY,CAACG;AAF9B,OAAd;;AAIA,UAAIjE,KAAK,CAACkE,mBAAN,CAA0BH,OAA1B,CAAJ,EAAwC;AACpC,eAAOlF,aAAa,CAACyB,WAAd,CAA0B6D,GAAjC;AACH,OAFD,MAGK,IAAInE,KAAK,CAACoE,2BAAN,CAAkCL,OAAlC,CAAJ,EAAgD;AACjD,eAAOlF,aAAa,CAACyB,WAAd,CAA0B+D,WAAjC;AACH,OAFI,MAGA,IAAIrE,KAAK,CAACsE,6BAAN,CAAoCP,OAApC,CAAJ,EAAkD;AACnD,eAAOlF,aAAa,CAACyB,WAAd,CAA0BiE,aAAjC;AACH;;AACDvE,MAAAA,KAAK,CAACQ,kBAAN,GAA2B,KAA3B;AACA,aAAO3B,aAAa,CAACyB,WAAd,CAA0BC,IAAjC;AACH,KArBD;;AAsBAP,IAAAA,KAAK,CAACwE,QAAN,GAAiB,UAAUzD,CAAV,EAAa;AAC1B,UAAIf,KAAK,CAACgB,KAAN,CAAYyD,aAAhB,EAA+B;AAC3B,YAAIC,UAAU,GAAG1E,KAAK,CAAC2E,yBAAN,EAAjB;;AACA,YAAID,UAAJ,EAAgB;AACZ,cAAIE,gBAAgB,GAAG;AACnB/B,YAAAA,OAAO,EAAE9B,CAAC,CAAC8B,OAAF,GAAY6B,UAAU,CAACG,IADb;AAEnB9B,YAAAA,OAAO,EAAEhC,CAAC,CAACgC,OAAF,GAAY2B,UAAU,CAACI,GAFb;AAGnBC,YAAAA,KAAK,EAAEhE,CAAC,CAACgE,KAHU;AAInBC,YAAAA,KAAK,EAAEjE,CAAC,CAACiE,KAJU;AAKnBC,YAAAA,YAAY,EAAElE,CAAC,CAACmE,MALG;AAMnBC,YAAAA,SAAS,EAAEpE,CAAC,CAACoE,SANM;AAOnBC,YAAAA,OAAO,EAAE;AAPU,WAAvB;;AASApF,UAAAA,KAAK,CAACgB,KAAN,CAAYyD,aAAZ,CAA0BG,gBAA1B;AACH;AACJ;AACJ,KAhBD;;AAiBA5E,IAAAA,KAAK,CAACqF,kBAAN,GAA2B,UAAUvB,YAAV,EAAwB;AAC/C,cAAQ9D,KAAK,CAACK,wBAAd;AACI,aAAKxB,aAAa,CAACyB,WAAd,CAA0B6D,GAA/B;AACI,cAAInE,KAAK,CAACgB,KAAN,CAAYC,KAAhB,EAAuB;AACnBjB,YAAAA,KAAK,CAACgB,KAAN,CAAYC,KAAZ,CAAkB6C,YAAlB;AACH;;AACD;;AACJ,aAAKjF,aAAa,CAACyB,WAAd,CAA0B+D,WAA/B;AACI,cAAIrE,KAAK,CAACgB,KAAN,CAAYG,aAAhB,EAA+B;AAC3BnB,YAAAA,KAAK,CAACgB,KAAN,CAAYG,aAAZ,CAA0B2C,YAA1B;AACH;;AACD;;AACJ,aAAKjF,aAAa,CAACyB,WAAd,CAA0BiE,aAA/B;AACI,cAAIvE,KAAK,CAACgB,KAAN,CAAYE,eAAhB,EAAiC;AAC7BlB,YAAAA,KAAK,CAACgB,KAAN,CAAYE,eAAZ,CAA4B4C,YAA5B;AACH;;AACD;;AACJ,gBAhBJ,CAiBI;;AAjBJ,OAD+C,CAoB/C;;;AACA,UAAI9D,KAAK,CAACK,wBAAN,KAAmCxB,aAAa,CAACyB,WAAd,CAA0BC,IAAjE,EAAuE;AACnEP,QAAAA,KAAK,CAACsF,aAAN;;AACAtF,QAAAA,KAAK,CAAC8B,qBAAN;;AACA9B,QAAAA,KAAK,CAACuF,YAAN;AACH;AACJ,KA1BD;;AA2BA,WAAOvF,KAAP;AACH,GAnK8C,CAoK/C;;;AACAxB,EAAAA,WAAW,CAACT,SAAZ,CAAsByH,qBAAtB,GAA8C,YAAY;AACtD,WAAO3F,kBAAP;AACH,GAFD,CArK+C,CAwK/C;;;AACArB,EAAAA,WAAW,CAACT,SAAZ,CAAsB0H,kBAAtB,GAA2C,UAAU1E,CAAV,EAAa;AACpD,WAAOA,CAAC,CAACoE,SAAT;AACH,GAFD;;AAGA3G,EAAAA,WAAW,CAACT,SAAZ,CAAsB2H,iBAAtB,GAA0C,YAAY;AAClD,SAAKtF,UAAL,GAAkB,IAAlB;AACH,GAFD;;AAGA5B,EAAAA,WAAW,CAACT,SAAZ,CAAsB4H,oBAAtB,GAA6C,YAAY;AACrD5F,IAAAA,MAAM,CAAChC,SAAP,CAAiB4H,oBAAjB,CAAsC1H,IAAtC,CAA2C,IAA3C;;AACA,SAAKmC,UAAL,GAAkB,KAAlB;AACH,GAHD;;AAIA5B,EAAAA,WAAW,CAACT,SAAZ,CAAsB6H,MAAtB,GAA+B,YAAY;AACvC,QAAIC,QAAQ,GAAG9G,mBAAmB,CAAC+G,OAApB,CAA4BC,0BAA5B,CAAuD,KAAK/E,KAAL,CAAWgF,mBAAlE,CAAf;AACA,QAAIC,YAAY,GAAGlH,mBAAmB,CAAC+G,OAApB,CAA4BI,QAA5B,CAAqC,KAAKlF,KAAL,CAAWmF,yBAAhD,CAAnB;AACA,WAAQxH,KAAK,CAACyH,aAAN,CAAoB,KAApB,EAA2B;AAAEC,MAAAA,KAAK,EAAE,KAAKC,UAAL,EAAT;AAA4BC,MAAAA,QAAQ,EAAE,KAAKvF,KAAL,CAAWuF,QAAjD;AAA2DC,MAAAA,GAAG,EAAE,KAAK/F,gBAArE;AAAuFgG,MAAAA,WAAW,EAAE,KAAK3F,YAAzG;AAAuH4F,MAAAA,OAAO,EAAE,KAAKjF,QAArI;AAA+IkF,MAAAA,OAAO,EAAE,KAAKnC,QAA7J;AAAuKoC,MAAAA,YAAY,EAAE,KAAKpE,aAA1L;AAAyMqE,MAAAA,WAAW,EAAE,KAAKtD,YAA3N;AAAyOuD,MAAAA,UAAU,EAAE,KAAKrD,WAA1P;AAAuQsD,MAAAA,OAAO,EAAE,KAAK/F,KAAL,CAAW+F,OAA3R;AAAoSC,MAAAA,MAAM,EAAE,KAAKhG,KAAL,CAAWgG,MAAvT;AAA+TC,MAAAA,UAAU,EAAE,KAAKjG,KAAL,CAAWiG,UAAtV;AAAkWC,MAAAA,IAAI,EAAErB,QAAxW;AAAkX,oBAAc,KAAK7E,KAAL,CAAWmG,kBAA3Y;AAA+Z,qBAAelB,YAA9a;AAA4b9D,MAAAA,aAAa,EAAE,KAAKnB,KAAL,CAAWmB,aAAX,GAA2B,KAAKD,qBAAhC,GAAwD0B,SAAngB;AAA8gBrB,MAAAA,aAAa,EAAE,KAAKvB,KAAL,CAAWuB,aAAX,GAA2B,KAAKD,qBAAhC,GAAwDsB,SAArlB;AAAgmB,sBAAgB,KAAK5C,KAAL,CAAWoG;AAA3nB,KAA3B,EAAgqB,KAAKpG,KAAL,CAAWqG,QAA3qB,CAAR;AACH,GAJD;;AAKA7I,EAAAA,WAAW,CAACT,SAAZ,CAAsBuJ,IAAtB,GAA6B,YAAY;AACrC,QAAIC,EAAE,GAAG,KAAKC,aAAL,EAAT;;AACA,QAAID,EAAJ,EAAQ;AACJA,MAAAA,EAAE,CAACD,IAAH;AACH;AACJ,GALD;;AAMA9I,EAAAA,WAAW,CAACT,SAAZ,CAAsB0J,KAAtB,GAA8B,YAAY;AACtC,QAAIF,EAAE,GAAG,KAAKC,aAAL,EAAT;;AACA,QAAID,EAAJ,EAAQ;AACJA,MAAAA,EAAE,CAACE,KAAH;AACH;AACJ,GALD;;AAMAjJ,EAAAA,WAAW,CAACT,SAAZ,CAAsByJ,aAAtB,GAAsC,YAAY;AAC9C,QAAI,CAAC,KAAKpH,UAAV,EAAsB;AAClB,aAAO,IAAP;AACH;;AACD,QAAI;AACA,aAAOxB,QAAQ,CAAC8I,WAAT,CAAqB,IAArB,CAAP;AACH,KAFD,CAGA,OAAOC,EAAP,EAAW;AACP;AACA,aAAO,IAAP;AACH;AACJ,GAXD;;AAYAnJ,EAAAA,WAAW,CAACT,SAAZ,CAAsB6C,qBAAtB,GAA8C,UAAUF,SAAV,EAAqB;AAC/D,QAAIV,KAAK,GAAG,IAAZ;;AACA,SAAKa,sBAAL;;AACA,SAAK+G,UAAL,GAAkB3I,gBAAgB,CAAC6G,OAAjB,CAAyB1H,MAAzB,CAAgC;AAC9CyJ,MAAAA,EAAE,EAAE,KAAK1H,GADqC;AAE9C2H,MAAAA,MAAM,EAAEpH,SAFsC;AAG9CqH,MAAAA,gBAAgB,EAAE,CAAC,CAAC,KAAKC,OAAL,CAAaC,cAHa;AAI9CC,MAAAA,0BAA0B,EAAE,UAAUC,KAAV,EAAiB;AACzC,YAAI,CAACnI,KAAK,CAACgB,KAAN,CAAYC,KAAb,IAAsB,CAACjB,KAAK,CAACgB,KAAN,CAAYE,eAAnC,IAAsD,CAAClB,KAAK,CAACgB,KAAN,CAAYG,aAAvE,EAAsF;AAClF,iBAAO,KAAP;AACH;;AACD,YAAIiH,YAAY,GAAGpI,KAAK,CAAC2E,yBAAN,EAAnB;;AACA,YAAI,CAACyD,YAAL,EAAmB;AACf,iBAAO,KAAP;AACH;;AACD,YAAItD,GAAG,GAAGsD,YAAY,CAACtD,GAAvB;AAAA,YAA4BD,IAAI,GAAGuD,YAAY,CAACvD,IAAhD;AAAA,YAAsDwD,MAAM,GAAGD,YAAY,CAACC,MAA5E;AAAA,YAAoFC,KAAK,GAAGF,YAAY,CAACE,KAAzG;AACA,YAAIzF,OAAO,GAAGsF,KAAK,CAACtF,OAApB;AAAA,YAA6BE,OAAO,GAAGoF,KAAK,CAACpF,OAA7C;;AACA,YAAIF,OAAO,IAAIgC,IAAX,IAAmBhC,OAAO,IAAIyF,KAA9B,IAAuCvF,OAAO,IAAI+B,GAAlD,IAAyD/B,OAAO,IAAIsF,MAAxE,EAAgF;AAC5E,iBAAO,IAAP;AACH;;AACD,eAAO,KAAP;AACH,OAlB6C;AAmB9CE,MAAAA,MAAM,EAAE,UAAUJ,KAAV,EAAiBrE,YAAjB,EAA+B;AACnC9D,QAAAA,KAAK,CAACK,wBAAN,GAAiCL,KAAK,CAAC6D,kBAAN,CAAyBC,YAAzB,CAAjC;;AACA,YAAI9D,KAAK,CAACK,wBAAN,KAAmCxB,aAAa,CAACyB,WAAd,CAA0BC,IAAjE,EAAuE;AACnEP,UAAAA,KAAK,CAAC0B,qBAAN;AACH;;AACD1B,QAAAA,KAAK,CAACqF,kBAAN,CAAyBvB,YAAzB;AACH,OAzB6C;AA0B9C0E,MAAAA,WAAW,EAAE,UAAUL,KAAV,EAAiBrE,YAAjB,EAA+B;AACxC9D,QAAAA,KAAK,CAAC0B,qBAAN;;AACA1B,QAAAA,KAAK,CAACK,wBAAN,GAAiCL,KAAK,CAAC6D,kBAAN,CAAyBC,YAAzB,CAAjC;;AACA9D,QAAAA,KAAK,CAACqF,kBAAN,CAAyBvB,YAAzB;;AACA9D,QAAAA,KAAK,CAACK,wBAAN,GAAiCxB,aAAa,CAACyB,WAAd,CAA0BC,IAA3D;AACAP,QAAAA,KAAK,CAACQ,kBAAN,GAA2B,KAA3B;AACH;AAhC6C,KAAhC,CAAlB;AAkCH,GArCD;;AAsCAhC,EAAAA,WAAW,CAACT,SAAZ,CAAsB8C,sBAAtB,GAA+C,YAAY;AACvD,QAAI,KAAK+G,UAAT,EAAqB;AACjB,WAAKA,UAAL,CAAgBa,OAAhB;;AACA,aAAO,KAAKb,UAAZ;AACH;AACJ,GALD;;AAMApJ,EAAAA,WAAW,CAACT,SAAZ,CAAsBuI,UAAtB,GAAmC,YAAY;AAC3C,QAAIoC,cAAc,GAAGxJ,QAAQ,CAAC4G,OAAT,CAAiB6C,OAAjB,CAAyB,CAACxJ,OAAO,CAACC,WAAT,EAAsB,KAAK4B,KAAL,CAAWqF,KAAjC,CAAzB,CAArB;AACA,QAAIuC,UAAJ;;AACA,YAAQ,KAAK5H,KAAL,CAAW6H,eAAnB;AACI,WAAK/J,YAAY,CAACgK,KAAb,CAAmBC,kBAAnB,CAAsCC,IAA3C;AACIJ,QAAAA,UAAU,GAAG,MAAb;AACA;;AACJ,WAAK9J,YAAY,CAACgK,KAAb,CAAmBC,kBAAnB,CAAsCE,IAA3C;AACIL,QAAAA,UAAU,GAAG,MAAb;AACA;;AACJ,WAAK9J,YAAY,CAACgK,KAAb,CAAmBC,kBAAnB,CAAsCG,OAA3C;AACIN,QAAAA,UAAU,GAAG,SAAb;AACA;;AACJ,WAAK9J,YAAY,CAACgK,KAAb,CAAmBC,kBAAnB,CAAsCI,QAA3C;AACIP,QAAAA,UAAU,GAAG,WAAb;AACA;;AACJ,WAAK9J,YAAY,CAACgK,KAAb,CAAmBC,kBAAnB,CAAsCK,QAA3C;AACIR,QAAAA,UAAU,GAAG,WAAb;AACA;;AACJ,WAAK9J,YAAY,CAACgK,KAAb,CAAmBC,kBAAnB,CAAsCM,UAA3C;AACIT,QAAAA,UAAU,GAAG,aAAb;AACA;;AACJ,WAAK9J,YAAY,CAACgK,KAAb,CAAmBC,kBAAnB,CAAsCO,UAA3C;AACIV,QAAAA,UAAU,GAAG,aAAb;AACA;;AACJ,WAAK9J,YAAY,CAACgK,KAAb,CAAmBC,kBAAnB,CAAsCQ,UAA3C;AACIX,QAAAA,UAAU,GAAG,aAAb;AACA;;AACJ,WAAK9J,YAAY,CAACgK,KAAb,CAAmBC,kBAAnB,CAAsCS,MAA3C;AACIZ,QAAAA,UAAU,GAAG,SAAb;AACA;;AACJ,WAAK9J,YAAY,CAACgK,KAAb,CAAmBC,kBAAnB,CAAsCU,OAA3C;AACIb,QAAAA,UAAU,GAAG,UAAb;AACA;AA9BR;;AAgCA,QAAIA,UAAJ,EAAgB;AACZF,MAAAA,cAAc,CAACgB,MAAf,GAAwBd,UAAxB;AACH;;AACD,WAAOF,cAAP;AACH,GAvCD,CA5P+C,CAoS/C;AACA;AACA;;;AACAlK,EAAAA,WAAW,CAAC8E,uBAAZ,GAAsC,UAAUvC,CAAV,EAAa;AAC/C,QAAI4I,EAAE,GAAG3K,YAAY,CAAC4K,KAAb,CAAmB7I,CAAnB,CAAT;AACA4I,IAAAA,EAAE,CAACE,cAAH,GAAoB,KAAKC,yBAAL,CAA+B/I,CAAC,CAAC8I,cAAjC,CAApB;AACAF,IAAAA,EAAE,CAACI,aAAH,GAAmB,KAAKD,yBAAL,CAA+B/I,CAAC,CAACgJ,aAAjC,CAAnB;AACAJ,IAAAA,EAAE,CAAChH,OAAH,GAAa,KAAKmH,yBAAL,CAA+B/I,CAAC,CAAC4B,OAAjC,CAAb;AACA,QAAID,EAAE,GAAGiH,EAAE,CAAChH,OAAH,CAAW,CAAX,CAAT;;AACA,QAAID,EAAJ,EAAQ;AACJ;AACAiH,MAAAA,EAAE,CAAC5E,KAAH,GAAWrC,EAAE,CAACqC,KAAd;AACA4E,MAAAA,EAAE,CAAC3E,KAAH,GAAWtC,EAAE,CAACsC,KAAd;AACA2E,MAAAA,EAAE,CAACK,SAAH,GAAetH,EAAE,CAACsH,SAAlB;AACAL,MAAAA,EAAE,CAACM,SAAH,GAAevH,EAAE,CAACuH,SAAlB;AACH;;AACD,WAAON,EAAP;AACH,GAdD;;AAeAnL,EAAAA,WAAW,CAACsL,yBAAZ,GAAwC,UAAUI,CAAV,EAAa;AACjD,QAAIC,EAAE,GAAG,IAAItM,KAAJ,CAAUqM,CAAC,CAACxG,MAAZ,CAAT;;AACA,SAAK,IAAI0G,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,CAAC,CAACxG,MAAtB,EAA8B0G,CAAC,EAA/B,EAAmC;AAC/BD,MAAAA,EAAE,CAACC,CAAD,CAAF,GAAQ,KAAKC,kBAAL,CAAwBH,CAAC,CAACE,CAAD,CAAzB,CAAR;AACH;;AACD,WAAOD,EAAP;AACH,GAND;;AAOA3L,EAAAA,WAAW,CAAC6L,kBAAZ,GAAiC,UAAUH,CAAV,EAAa;AAC1C,WAAO;AACHI,MAAAA,UAAU,EAAEJ,CAAC,CAACI,UADX;AAEHN,MAAAA,SAAS,EAAEE,CAAC,CAACrH,OAFV;AAGHoH,MAAAA,SAAS,EAAEC,CAAC,CAACnH,OAHV;AAIHwH,MAAAA,OAAO,EAAEL,CAAC,CAACK,OAJR;AAKHC,MAAAA,OAAO,EAAEN,CAAC,CAACM,OALR;AAMH3H,MAAAA,OAAO,EAAEqH,CAAC,CAACrH,OANR;AAOHE,MAAAA,OAAO,EAAEmH,CAAC,CAACnH,OAPR;AAQHgC,MAAAA,KAAK,EAAEmF,CAAC,CAACnF,KARN;AASHC,MAAAA,KAAK,EAAEkF,CAAC,CAAClF;AATN,KAAP;AAWH,GAZD;;AAaAxG,EAAAA,WAAW,CAACT,SAAZ,CAAsB0M,kBAAtB,GAA2C,YAAY;AACnD,QAAIC,IAAI,GAAG,KAAK/F,yBAAL,EAAX;;AACA,WAAO+F,IAAI,GAAG;AAAE9H,MAAAA,CAAC,EAAE8H,IAAI,CAAC7F,IAAV;AAAgB/B,MAAAA,CAAC,EAAE4H,IAAI,CAAC5F;AAAxB,KAAH,GAAmC;AAAElC,MAAAA,CAAC,EAAE,CAAL;AAAQE,MAAAA,CAAC,EAAE;AAAX,KAA9C;AACH,GAHD;;AAIAtE,EAAAA,WAAW,CAACT,SAAZ,CAAsB4G,yBAAtB,GAAkD,YAAY;AAC1D,WAAO,KAAKhE,UAAL,GAAkB,KAAKA,UAAL,CAAgBgK,qBAAhB,EAAlB,GAA4D,IAAnE;AACH,GAFD;;AAGAnM,EAAAA,WAAW,CAACoM,YAAZ,GAA2B;AACvB3C,IAAAA,cAAc,EAAExJ,SAAS,CAACoM;AADH,GAA3B;AAGA,SAAOrM,WAAP;AACH,CArVgC,CAqV/BK,aAAa,CAACiH,OArViB,CAAjC;;AAsVAxH,OAAO,CAACE,WAAR,GAAsBA,WAAtB;AACAF,OAAO,CAACwH,OAAR,GAAkBtH,WAAlB","sourcesContent":["\"use strict\";\r\n/**\r\n * GestureView.tsx\r\n *\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT license.\r\n *\r\n * Web-specific implementation of the cross-platform GestureView component.\r\n * It provides support for the scroll wheel, clicks and double clicks.\r\n */\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.GestureView = void 0;\r\nvar PropTypes = require(\"prop-types\");\r\nvar React = require(\"react\");\r\nvar ReactDOM = require(\"react-dom\");\r\nvar GestureView_1 = require(\"../common/GestureView\");\r\nvar Interfaces_1 = require(\"../common/Interfaces\");\r\nvar AccessibilityUtil_1 = require(\"./AccessibilityUtil\");\r\nvar lodashMini_1 = require(\"./utils/lodashMini\");\r\nvar MouseResponder_1 = require(\"./utils/MouseResponder\");\r\nvar Styles_1 = require(\"./Styles\");\r\n// Cast to any to allow merging of web and RX styles\r\nvar _styles = {\r\n    defaultView: {\r\n        position: 'relative',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        flexGrow: 0,\r\n        flexShrink: 0,\r\n        overflow: 'hidden',\r\n        alignItems: 'stretch',\r\n        justifyContent: 'center',\r\n    },\r\n};\r\n// Unique to web\r\nvar _preferredPanRatio = 3;\r\nvar _idCounter = 1;\r\nvar GestureView = /** @class */ (function (_super) {\r\n    __extends(GestureView, _super);\r\n    function GestureView() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this._id = _idCounter++;\r\n        _this._isMounted = false;\r\n        _this._pendingMouseGestureType = GestureView_1.GestureType.None;\r\n        _this._gestureTypeLocked = false;\r\n        _this._setContainerRef = function (container) {\r\n            // safe since div refs resolve into HTMLElement and not react element.\r\n            _this._container = container;\r\n            if (container) {\r\n                _this._createMouseResponder(container);\r\n            }\r\n            else {\r\n                _this._disposeMouseResponder();\r\n            }\r\n        };\r\n        _this._onMouseDown = function (e) {\r\n            if (_this.props.onPan || _this.props.onPanHorizontal || _this.props.onPanVertical) {\r\n                // Disable mousedown default action that initiates a drag/drop operation and breaks panning with a not-allowed cursor.\r\n                // https://w3c.github.io/uievents/#mousedown\r\n                e.preventDefault();\r\n            }\r\n            if (_this.props.onLongPress) {\r\n                var gsState = _this._mouseEventToTapGestureState(e);\r\n                _this._startLongPressTimer(gsState, true);\r\n            }\r\n        };\r\n        _this._onClick = function (e) {\r\n            _this._cancelLongPressTimer();\r\n            var gsState = _this._mouseEventToTapGestureState(e);\r\n            if (!_this.props.onDoubleTap) {\r\n                // If there is no double-tap handler, we can invoke the tap handler immediately.\r\n                _this._sendTapEvent(gsState);\r\n            }\r\n            else if (_this._isDoubleTap(gsState)) {\r\n                // This is a double-tap, so swallow the previous single tap.\r\n                _this._cancelDoubleTapTimer();\r\n                _this._sendDoubleTapEvent(gsState);\r\n            }\r\n            else {\r\n                // This wasn't a double-tap. Report any previous single tap and start the double-tap\r\n                // timer so we can determine whether the current tap is a single or double.\r\n                _this._reportDelayedTap();\r\n                _this._startDoubleTapTimer(gsState);\r\n            }\r\n        };\r\n        _this._sendDoubleClickEvent = function (e) {\r\n            if (_this.props.onDoubleClick) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                var tapEvent = _this._mouseEventToTapGestureState(e);\r\n                _this.props.onDoubleClick(tapEvent);\r\n            }\r\n        };\r\n        _this._sendContextMenuEvent = function (e) {\r\n            if (_this.props.onContextMenu) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                var tapEvent = _this._mouseEventToTapGestureState(e);\r\n                _this.props.onContextMenu(tapEvent);\r\n            }\r\n        };\r\n        _this._onTouchStart = function (e) {\r\n            if (!_this._initialTouch) {\r\n                var ft = e.touches[0];\r\n                _this._initialTouch = { x: ft.clientX, y: ft.clientY };\r\n                _this._ongoingGesture = { dx: 0, dy: 0, vx: 0, vy: 0 };\r\n                _this._onTouchSeriesStart(GestureView._reactTouchEventToBasic(e));\r\n            }\r\n        };\r\n        _this._onTouchMove = function (e) {\r\n            if (!_this._initialTouch || !_this._ongoingGesture) {\r\n                return;\r\n            }\r\n            var ft = e.touches[0];\r\n            _this._ongoingGesture = {\r\n                dx: ft.clientX - _this._initialTouch.x,\r\n                dy: ft.clientY - _this._initialTouch.y,\r\n                // TODO: calculate velocity?\r\n                vx: 0,\r\n                vy: 0,\r\n            };\r\n            _this._onTouchChange(GestureView._reactTouchEventToBasic(e), _this._ongoingGesture);\r\n        };\r\n        _this._onTouchEnd = function (e) {\r\n            if (!_this._initialTouch || !_this._ongoingGesture) {\r\n                return;\r\n            }\r\n            if (e.touches.length === 0) {\r\n                _this._onTouchSeriesFinished(GestureView._reactTouchEventToBasic(e), _this._ongoingGesture);\r\n                _this._initialTouch = undefined;\r\n                _this._ongoingGesture = undefined;\r\n            }\r\n        };\r\n        _this._detectGestureType = function (gestureState) {\r\n            // we need to lock gesture type until it's completed\r\n            if (_this._gestureTypeLocked) {\r\n                return _this._pendingMouseGestureType;\r\n            }\r\n            _this._gestureTypeLocked = true;\r\n            var gsBasic = {\r\n                dx: gestureState.clientX - gestureState.initialClientX,\r\n                dy: gestureState.clientY - gestureState.initialClientY,\r\n            };\r\n            if (_this._shouldRespondToPan(gsBasic)) {\r\n                return GestureView_1.GestureType.Pan;\r\n            }\r\n            else if (_this._shouldRespondToPanVertical(gsBasic)) {\r\n                return GestureView_1.GestureType.PanVertical;\r\n            }\r\n            else if (_this._shouldRespondToPanHorizontal(gsBasic)) {\r\n                return GestureView_1.GestureType.PanHorizontal;\r\n            }\r\n            _this._gestureTypeLocked = false;\r\n            return GestureView_1.GestureType.None;\r\n        };\r\n        _this._onWheel = function (e) {\r\n            if (_this.props.onScrollWheel) {\r\n                var clientRect = _this._getGestureViewClientRect();\r\n                if (clientRect) {\r\n                    var scrollWheelEvent = {\r\n                        clientX: e.clientX - clientRect.left,\r\n                        clientY: e.clientY - clientRect.top,\r\n                        pageX: e.pageX,\r\n                        pageY: e.pageY,\r\n                        scrollAmount: e.deltaY,\r\n                        timeStamp: e.timeStamp,\r\n                        isTouch: false,\r\n                    };\r\n                    _this.props.onScrollWheel(scrollWheelEvent);\r\n                }\r\n            }\r\n        };\r\n        _this._sendMousePanEvent = function (gestureState) {\r\n            switch (_this._pendingMouseGestureType) {\r\n                case GestureView_1.GestureType.Pan:\r\n                    if (_this.props.onPan) {\r\n                        _this.props.onPan(gestureState);\r\n                    }\r\n                    break;\r\n                case GestureView_1.GestureType.PanVertical:\r\n                    if (_this.props.onPanVertical) {\r\n                        _this.props.onPanVertical(gestureState);\r\n                    }\r\n                    break;\r\n                case GestureView_1.GestureType.PanHorizontal:\r\n                    if (_this.props.onPanHorizontal) {\r\n                        _this.props.onPanHorizontal(gestureState);\r\n                    }\r\n                    break;\r\n                default:\r\n                // do nothing;\r\n            }\r\n            // we need to clean taps in case there was a pan event in the meantime\r\n            if (_this._pendingMouseGestureType !== GestureView_1.GestureType.None) {\r\n                _this._clearLastTap();\r\n                _this._cancelDoubleTapTimer();\r\n                _this._skipNextTap();\r\n            }\r\n        };\r\n        return _this;\r\n    }\r\n    // Get preferred pan ratio for platform.\r\n    GestureView.prototype._getPreferredPanRatio = function () {\r\n        return _preferredPanRatio;\r\n    };\r\n    // Returns the timestamp for the touch event in milliseconds.\r\n    GestureView.prototype._getEventTimestamp = function (e) {\r\n        return e.timeStamp;\r\n    };\r\n    GestureView.prototype.componentDidMount = function () {\r\n        this._isMounted = true;\r\n    };\r\n    GestureView.prototype.componentWillUnmount = function () {\r\n        _super.prototype.componentWillUnmount.call(this);\r\n        this._isMounted = false;\r\n    };\r\n    GestureView.prototype.render = function () {\r\n        var ariaRole = AccessibilityUtil_1.default.accessibilityTraitToString(this.props.accessibilityTraits);\r\n        var isAriaHidden = AccessibilityUtil_1.default.isHidden(this.props.importantForAccessibility);\r\n        return (React.createElement(\"div\", { style: this._getStyles(), tabIndex: this.props.tabIndex, ref: this._setContainerRef, onMouseDown: this._onMouseDown, onClick: this._onClick, onWheel: this._onWheel, onTouchStart: this._onTouchStart, onTouchMove: this._onTouchMove, onTouchEnd: this._onTouchEnd, onFocus: this.props.onFocus, onBlur: this.props.onBlur, onKeyPress: this.props.onKeyPress, role: ariaRole, \"aria-label\": this.props.accessibilityLabel, \"aria-hidden\": isAriaHidden, onDoubleClick: this.props.onDoubleClick ? this._sendDoubleClickEvent : undefined, onContextMenu: this.props.onContextMenu ? this._sendContextMenuEvent : undefined, \"data-test-id\": this.props.testId }, this.props.children));\r\n    };\r\n    GestureView.prototype.blur = function () {\r\n        var el = this._getContainer();\r\n        if (el) {\r\n            el.blur();\r\n        }\r\n    };\r\n    GestureView.prototype.focus = function () {\r\n        var el = this._getContainer();\r\n        if (el) {\r\n            el.focus();\r\n        }\r\n    };\r\n    GestureView.prototype._getContainer = function () {\r\n        if (!this._isMounted) {\r\n            return null;\r\n        }\r\n        try {\r\n            return ReactDOM.findDOMNode(this);\r\n        }\r\n        catch (_a) {\r\n            // Handle exception due to potential unmount race condition.\r\n            return null;\r\n        }\r\n    };\r\n    GestureView.prototype._createMouseResponder = function (container) {\r\n        var _this = this;\r\n        this._disposeMouseResponder();\r\n        this._responder = MouseResponder_1.default.create({\r\n            id: this._id,\r\n            target: container,\r\n            disableWhenModal: !!this.context.isInRxMainView,\r\n            shouldBecomeFirstResponder: function (event) {\r\n                if (!_this.props.onPan && !_this.props.onPanHorizontal && !_this.props.onPanVertical) {\r\n                    return false;\r\n                }\r\n                var boundingRect = _this._getGestureViewClientRect();\r\n                if (!boundingRect) {\r\n                    return false;\r\n                }\r\n                var top = boundingRect.top, left = boundingRect.left, bottom = boundingRect.bottom, right = boundingRect.right;\r\n                var clientX = event.clientX, clientY = event.clientY;\r\n                if (clientX >= left && clientX <= right && clientY >= top && clientY <= bottom) {\r\n                    return true;\r\n                }\r\n                return false;\r\n            },\r\n            onMove: function (event, gestureState) {\r\n                _this._pendingMouseGestureType = _this._detectGestureType(gestureState);\r\n                if (_this._pendingMouseGestureType !== GestureView_1.GestureType.None) {\r\n                    _this._cancelLongPressTimer();\r\n                }\r\n                _this._sendMousePanEvent(gestureState);\r\n            },\r\n            onTerminate: function (event, gestureState) {\r\n                _this._cancelLongPressTimer();\r\n                _this._pendingMouseGestureType = _this._detectGestureType(gestureState);\r\n                _this._sendMousePanEvent(gestureState);\r\n                _this._pendingMouseGestureType = GestureView_1.GestureType.None;\r\n                _this._gestureTypeLocked = false;\r\n            },\r\n        });\r\n    };\r\n    GestureView.prototype._disposeMouseResponder = function () {\r\n        if (this._responder) {\r\n            this._responder.dispose();\r\n            delete this._responder;\r\n        }\r\n    };\r\n    GestureView.prototype._getStyles = function () {\r\n        var combinedStyles = Styles_1.default.combine([_styles.defaultView, this.props.style]);\r\n        var cursorName;\r\n        switch (this.props.mouseOverCursor) {\r\n            case Interfaces_1.Types.GestureMouseCursor.Grab:\r\n                cursorName = 'grab';\r\n                break;\r\n            case Interfaces_1.Types.GestureMouseCursor.Move:\r\n                cursorName = 'move';\r\n                break;\r\n            case Interfaces_1.Types.GestureMouseCursor.Pointer:\r\n                cursorName = 'pointer';\r\n                break;\r\n            case Interfaces_1.Types.GestureMouseCursor.NSResize:\r\n                cursorName = 'ns-resize';\r\n                break;\r\n            case Interfaces_1.Types.GestureMouseCursor.EWResize:\r\n                cursorName = 'ew-resize';\r\n                break;\r\n            case Interfaces_1.Types.GestureMouseCursor.NESWResize:\r\n                cursorName = 'nesw-resize';\r\n                break;\r\n            case Interfaces_1.Types.GestureMouseCursor.NWSEResize:\r\n                cursorName = 'nwse-resize';\r\n                break;\r\n            case Interfaces_1.Types.GestureMouseCursor.NotAllowed:\r\n                cursorName = 'not-allowed';\r\n                break;\r\n            case Interfaces_1.Types.GestureMouseCursor.ZoomIn:\r\n                cursorName = 'zoom-in';\r\n                break;\r\n            case Interfaces_1.Types.GestureMouseCursor.ZoomOut:\r\n                cursorName = 'zoom-out';\r\n                break;\r\n        }\r\n        if (cursorName) {\r\n            combinedStyles.cursor = cursorName;\r\n        }\r\n        return combinedStyles;\r\n    };\r\n    // The RN and React touch event types are basically identical except that React uses \"clientX/Y\"\r\n    // and RN uses \"locationX/Y\", so we need to map one to the other.  Unfortunately, due to inertia,\r\n    // web loses.  So, we need these 3 ugly functions...\r\n    GestureView._reactTouchEventToBasic = function (e) {\r\n        var ne = lodashMini_1.clone(e);\r\n        ne.changedTouches = this._mapReactTouchListToBasic(e.changedTouches);\r\n        ne.targetTouches = this._mapReactTouchListToBasic(e.targetTouches);\r\n        ne.touches = this._mapReactTouchListToBasic(e.touches);\r\n        var ft = ne.touches[0];\r\n        if (ft) {\r\n            // RN also apparently shims the first touch's location info onto the root touch event\r\n            ne.pageX = ft.pageX;\r\n            ne.pageY = ft.pageY;\r\n            ne.locationX = ft.locationX;\r\n            ne.locationY = ft.locationY;\r\n        }\r\n        return ne;\r\n    };\r\n    GestureView._mapReactTouchListToBasic = function (l) {\r\n        var nl = new Array(l.length);\r\n        for (var i = 0; i < l.length; i++) {\r\n            nl[i] = this._mapReactTouchToRx(l[i]);\r\n        }\r\n        return nl;\r\n    };\r\n    GestureView._mapReactTouchToRx = function (l) {\r\n        return {\r\n            identifier: l.identifier,\r\n            locationX: l.clientX,\r\n            locationY: l.clientY,\r\n            screenX: l.screenX,\r\n            screenY: l.screenY,\r\n            clientX: l.clientX,\r\n            clientY: l.clientY,\r\n            pageX: l.pageX,\r\n            pageY: l.pageY,\r\n        };\r\n    };\r\n    GestureView.prototype._getClientXYOffset = function () {\r\n        var rect = this._getGestureViewClientRect();\r\n        return rect ? { x: rect.left, y: rect.top } : { x: 0, y: 0 };\r\n    };\r\n    GestureView.prototype._getGestureViewClientRect = function () {\r\n        return this._container ? this._container.getBoundingClientRect() : null;\r\n    };\r\n    GestureView.contextTypes = {\r\n        isInRxMainView: PropTypes.bool,\r\n    };\r\n    return GestureView;\r\n}(GestureView_1.default));\r\nexports.GestureView = GestureView;\r\nexports.default = GestureView;\r\n"]},"metadata":{},"sourceType":"script"}