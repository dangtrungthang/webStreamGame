{"ast":null,"code":"\"use strict\";\n/**\r\n * Text.tsx\r\n *\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT license.\r\n *\r\n * Web-specific implementation of the cross-platform Text abstraction.\r\n */\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Text = void 0;\n\nvar PropTypes = require(\"prop-types\");\n\nvar React = require(\"react\");\n\nvar AutoFocusHelper_1 = require(\"../common/utils/AutoFocusHelper\");\n\nvar Interfaces_1 = require(\"../common/Interfaces\");\n\nvar AccessibilityUtil_1 = require(\"./AccessibilityUtil\");\n\nvar Styles_1 = require(\"./Styles\"); // Adding a CSS rule to display non-selectable texts. Those texts\n// will be displayed as pseudo elements to prevent them from being copied\n// to clipboard. It's not possible to style pseudo elements with inline\n// styles, so, we're dynamically creating a <style> tag with the rule.\n\n\nif (typeof document !== 'undefined') {\n  var textAsPseudoElement = '[data-text-as-pseudo-element]::before { content: attr(data-text-as-pseudo-element); }';\n  var style = document.createElement('style');\n  style.type = 'text/css';\n  style.appendChild(document.createTextNode(textAsPseudoElement));\n  document.head.appendChild(style);\n} // Cast to any to allow merging of web and RX styles\n\n\nvar _styles = {\n  defaultStyle: {\n    position: 'relative',\n    display: 'inline',\n    flexGrow: 0,\n    flexShrink: 0,\n    overflow: 'hidden',\n    whiteSpace: 'pre-wrap',\n    overflowWrap: 'break-word'\n  },\n  ellipsis: {\n    position: 'relative',\n    display: 'inline',\n    flexGrow: 0,\n    flexShrink: 0,\n    overflow: 'hidden',\n    whiteSpace: 'pre',\n    textOverflow: 'ellipsis'\n  }\n};\n\nvar Text =\n/** @class */\nfunction (_super) {\n  __extends(Text, _super);\n\n  function Text() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this._mountedText = null;\n\n    _this._onMount = function (ref) {\n      _this._mountedText = ref;\n    };\n\n    return _this;\n  }\n\n  Text.prototype.getChildContext = function () {\n    // Let descendant Types components know that their nearest Types ancestor is an Types.Text.\n    // Because they're in an Types.Text, they should style themselves specially for appearing\n    // inline with text.\n    return {\n      isRxParentAText: true\n    };\n  };\n\n  Text.prototype.render = function () {\n    // Handle special case\n    if (typeof this.props.children === 'string' && this.props.children === '\\n') {\n      return React.createElement(\"br\", null);\n    }\n\n    var isAriaHidden = AccessibilityUtil_1.default.isHidden(this.props.importantForAccessibility);\n\n    if (this.props.selectable || typeof this.props.children !== 'string') {\n      return React.createElement(\"div\", {\n        ref: this._onMount,\n        style: this._getStyles(),\n        \"aria-hidden\": isAriaHidden,\n        onClick: this.props.onPress,\n        id: this.props.id,\n        onContextMenu: this.props.onContextMenu,\n        \"data-test-id\": this.props.testId\n      }, this.props.children);\n    } else {\n      // user-select CSS property doesn't prevent the text from being copied to clipboard.\n      // To avoid getting to clipboard, the text from data-text-as-pseudo-element attribute\n      // will be displayed as pseudo element.\n      return React.createElement(\"div\", {\n        ref: this._onMount,\n        style: this._getStyles(),\n        \"aria-hidden\": isAriaHidden,\n        onClick: this.props.onPress,\n        onContextMenu: this.props.onContextMenu,\n        \"data-text-as-pseudo-element\": this.props.children,\n        id: this.props.id,\n        \"data-test-id\": this.props.testId\n      });\n    }\n  };\n\n  Text.prototype.componentDidMount = function () {\n    if (this.props.autoFocus) {\n      this.requestFocus();\n    }\n  };\n\n  Text.prototype._getStyles = function () {\n    // There's no way in HTML to properly handle numberOfLines > 1,\n    // but we can correctly handle the common case where numberOfLines is 1.\n    var combinedStyles = Styles_1.default.combine([this.props.numberOfLines === 1 ? _styles.ellipsis : _styles.defaultStyle, this.props.style]);\n\n    if (this.props.selectable) {\n      combinedStyles.userSelect = 'text';\n      combinedStyles.WebkitUserSelect = 'text';\n      combinedStyles.MozUserSelect = 'text';\n      combinedStyles.msUserSelect = 'text';\n    } // Handle cursor styles\n\n\n    if (!combinedStyles.cursor) {\n      if (this.props.selectable) {\n        combinedStyles.cursor = 'text';\n      } else {\n        combinedStyles.cursor = 'inherit';\n      }\n\n      if (this.props.onPress) {\n        combinedStyles.cursor = 'pointer';\n      }\n    }\n\n    return combinedStyles;\n  };\n\n  Text.prototype.blur = function () {\n    if (this._mountedText) {\n      this._mountedText.blur();\n    }\n  };\n\n  Text.prototype.requestFocus = function () {\n    var _this = this;\n\n    AutoFocusHelper_1.FocusArbitratorProvider.requestFocus(this, function () {\n      return _this.focus();\n    }, function () {\n      return _this._mountedText !== null;\n    });\n  };\n\n  Text.prototype.focus = function () {\n    if (this._mountedText) {\n      this._mountedText.focus();\n    }\n  };\n\n  Text.prototype.getSelectedText = function () {\n    return ''; // Not implemented yet.\n  };\n\n  Text.contextTypes = {\n    focusArbitrator: PropTypes.object\n  };\n  Text.childContextTypes = {\n    isRxParentAText: PropTypes.bool.isRequired\n  };\n  return Text;\n}(Interfaces_1.Text);\n\nexports.Text = Text;\nexports.default = Text;","map":{"version":3,"sources":["/Users/trungthang/webStreamGame/webStreamGame/node_modules/react-ult/dist/web/Text.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__","constructor","create","defineProperty","exports","value","Text","PropTypes","require","React","AutoFocusHelper_1","Interfaces_1","AccessibilityUtil_1","Styles_1","document","textAsPseudoElement","style","createElement","type","appendChild","createTextNode","head","_styles","defaultStyle","position","display","flexGrow","flexShrink","overflow","whiteSpace","overflowWrap","ellipsis","textOverflow","_super","_this","apply","arguments","_mountedText","_onMount","ref","getChildContext","isRxParentAText","render","props","children","isAriaHidden","default","isHidden","importantForAccessibility","selectable","_getStyles","onClick","onPress","id","onContextMenu","testId","componentDidMount","autoFocus","requestFocus","combinedStyles","combine","numberOfLines","userSelect","WebkitUserSelect","MozUserSelect","msUserSelect","cursor","blur","FocusArbitratorProvider","focus","getSelectedText","contextTypes","focusArbitrator","object","childContextTypes","bool","isRequired"],"mappings":"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","sourcesContent":["\"use strict\";\r\n/**\r\n * Text.tsx\r\n *\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT license.\r\n *\r\n * Web-specific implementation of the cross-platform Text abstraction.\r\n */\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Text = void 0;\r\nvar PropTypes = require(\"prop-types\");\r\nvar React = require(\"react\");\r\nvar AutoFocusHelper_1 = require(\"../common/utils/AutoFocusHelper\");\r\nvar Interfaces_1 = require(\"../common/Interfaces\");\r\nvar AccessibilityUtil_1 = require(\"./AccessibilityUtil\");\r\nvar Styles_1 = require(\"./Styles\");\r\n// Adding a CSS rule to display non-selectable texts. Those texts\r\n// will be displayed as pseudo elements to prevent them from being copied\r\n// to clipboard. It's not possible to style pseudo elements with inline\r\n// styles, so, we're dynamically creating a <style> tag with the rule.\r\nif (typeof document !== 'undefined') {\r\n    var textAsPseudoElement = '[data-text-as-pseudo-element]::before { content: attr(data-text-as-pseudo-element); }';\r\n    var style = document.createElement('style');\r\n    style.type = 'text/css';\r\n    style.appendChild(document.createTextNode(textAsPseudoElement));\r\n    document.head.appendChild(style);\r\n}\r\n// Cast to any to allow merging of web and RX styles\r\nvar _styles = {\r\n    defaultStyle: {\r\n        position: 'relative',\r\n        display: 'inline',\r\n        flexGrow: 0,\r\n        flexShrink: 0,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'pre-wrap',\r\n        overflowWrap: 'break-word',\r\n    },\r\n    ellipsis: {\r\n        position: 'relative',\r\n        display: 'inline',\r\n        flexGrow: 0,\r\n        flexShrink: 0,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'pre',\r\n        textOverflow: 'ellipsis',\r\n    },\r\n};\r\nvar Text = /** @class */ (function (_super) {\r\n    __extends(Text, _super);\r\n    function Text() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this._mountedText = null;\r\n        _this._onMount = function (ref) {\r\n            _this._mountedText = ref;\r\n        };\r\n        return _this;\r\n    }\r\n    Text.prototype.getChildContext = function () {\r\n        // Let descendant Types components know that their nearest Types ancestor is an Types.Text.\r\n        // Because they're in an Types.Text, they should style themselves specially for appearing\r\n        // inline with text.\r\n        return { isRxParentAText: true };\r\n    };\r\n    Text.prototype.render = function () {\r\n        // Handle special case\r\n        if (typeof this.props.children === 'string' && this.props.children === '\\n') {\r\n            return React.createElement(\"br\", null);\r\n        }\r\n        var isAriaHidden = AccessibilityUtil_1.default.isHidden(this.props.importantForAccessibility);\r\n        if (this.props.selectable || typeof this.props.children !== 'string') {\r\n            return (React.createElement(\"div\", { ref: this._onMount, style: this._getStyles(), \"aria-hidden\": isAriaHidden, onClick: this.props.onPress, id: this.props.id, onContextMenu: this.props.onContextMenu, \"data-test-id\": this.props.testId }, this.props.children));\r\n        }\r\n        else {\r\n            // user-select CSS property doesn't prevent the text from being copied to clipboard.\r\n            // To avoid getting to clipboard, the text from data-text-as-pseudo-element attribute\r\n            // will be displayed as pseudo element.\r\n            return (React.createElement(\"div\", { ref: this._onMount, style: this._getStyles(), \"aria-hidden\": isAriaHidden, onClick: this.props.onPress, onContextMenu: this.props.onContextMenu, \"data-text-as-pseudo-element\": this.props.children, id: this.props.id, \"data-test-id\": this.props.testId }));\r\n        }\r\n    };\r\n    Text.prototype.componentDidMount = function () {\r\n        if (this.props.autoFocus) {\r\n            this.requestFocus();\r\n        }\r\n    };\r\n    Text.prototype._getStyles = function () {\r\n        // There's no way in HTML to properly handle numberOfLines > 1,\r\n        // but we can correctly handle the common case where numberOfLines is 1.\r\n        var combinedStyles = Styles_1.default.combine([this.props.numberOfLines === 1 ?\r\n                _styles.ellipsis : _styles.defaultStyle, this.props.style]);\r\n        if (this.props.selectable) {\r\n            combinedStyles.userSelect = 'text';\r\n            combinedStyles.WebkitUserSelect = 'text';\r\n            combinedStyles.MozUserSelect = 'text';\r\n            combinedStyles.msUserSelect = 'text';\r\n        }\r\n        // Handle cursor styles\r\n        if (!combinedStyles.cursor) {\r\n            if (this.props.selectable) {\r\n                combinedStyles.cursor = 'text';\r\n            }\r\n            else {\r\n                combinedStyles.cursor = 'inherit';\r\n            }\r\n            if (this.props.onPress) {\r\n                combinedStyles.cursor = 'pointer';\r\n            }\r\n        }\r\n        return combinedStyles;\r\n    };\r\n    Text.prototype.blur = function () {\r\n        if (this._mountedText) {\r\n            this._mountedText.blur();\r\n        }\r\n    };\r\n    Text.prototype.requestFocus = function () {\r\n        var _this = this;\r\n        AutoFocusHelper_1.FocusArbitratorProvider.requestFocus(this, function () { return _this.focus(); }, function () { return _this._mountedText !== null; });\r\n    };\r\n    Text.prototype.focus = function () {\r\n        if (this._mountedText) {\r\n            this._mountedText.focus();\r\n        }\r\n    };\r\n    Text.prototype.getSelectedText = function () {\r\n        return ''; // Not implemented yet.\r\n    };\r\n    Text.contextTypes = {\r\n        focusArbitrator: PropTypes.object,\r\n    };\r\n    Text.childContextTypes = {\r\n        isRxParentAText: PropTypes.bool.isRequired,\r\n    };\r\n    return Text;\r\n}(Interfaces_1.Text));\r\nexports.Text = Text;\r\nexports.default = Text;\r\n"]},"metadata":{},"sourceType":"script"}