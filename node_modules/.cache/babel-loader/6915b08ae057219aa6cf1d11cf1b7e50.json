{"ast":null,"code":"\"use strict\";\n/**\r\n * Image.tsx\r\n *\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT license.\r\n *\r\n * Web-specific implementation of the cross-platform Image abstraction.\r\n */\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Image = void 0;\n\nvar PropTypes = require(\"prop-types\");\n\nvar React = require(\"react\");\n\nvar assert_1 = require(\"../common/assert\");\n\nvar Image_1 = require(\"../common/Image\");\n\nvar PromiseDefer_1 = require(\"../common/utils/PromiseDefer\");\n\nvar _ = require(\"./utils/lodashMini\");\n\nvar restyleForInlineText_1 = require(\"./utils/restyleForInlineText\");\n\nvar Styles_1 = require(\"./Styles\");\n\nvar _styles = {\n  image: {\n    position: 'absolute',\n    display: 'flex',\n    flexDirection: 'column',\n    opacity: 0,\n    maxWidth: '100%',\n    maxHeight: '100%'\n  },\n  defaultContainer: Styles_1.default.createImageStyle({\n    position: 'relative',\n    flex: 0,\n    overflow: 'visible',\n    backgroundColor: 'transparent'\n  })\n};\n\nvar XhrBlobUrlCache =\n/** @class */\nfunction () {\n  function XhrBlobUrlCache() {}\n\n  XhrBlobUrlCache.get = function (source) {\n    if (this._cachedXhrBlobUrls[source]) {\n      this._cachedXhrBlobUrls[source].refCount++;\n      return this._cachedXhrBlobUrls[source].xhrBlobUrl;\n    }\n\n    return undefined;\n  };\n\n  XhrBlobUrlCache.insert = function (source, xhrBlobUrl) {\n    XhrBlobUrlCache._cleanupIfCapacityExceeded();\n\n    if (this._cachedXhrBlobUrls[source]) {\n      XhrBlobUrlCache._cachedXhrBlobUrls[source].refCount++;\n    } else {\n      var xhrBlobUrlCacheEntry = {\n        xhrBlobUrl: xhrBlobUrl,\n        insertionDate: Date.now(),\n        refCount: 1\n      };\n      XhrBlobUrlCache._cachedXhrBlobUrls[source] = xhrBlobUrlCacheEntry;\n    }\n  };\n\n  XhrBlobUrlCache.release = function (source) {\n    // Keep track of which cache entries are being used as we don't want to clean up a resource that someone is\n    // still relying on.\n    if (this._cachedXhrBlobUrls[source]) {\n      XhrBlobUrlCache._cachedXhrBlobUrls[source].refCount--;\n    }\n  };\n\n  XhrBlobUrlCache._cleanupIfCapacityExceeded = function () {\n    // If we've reached maximum capacity, clean up the oldest freeable cache entry if any. An entry is freeable is\n    // it's not currently in use (refCount == 0). Return whether we have room to add more entries to the cache.\n    if (Object.keys(XhrBlobUrlCache._cachedXhrBlobUrls).length + 1 > XhrBlobUrlCache._maximumItems) {\n      var oldestFreeableKey_1;\n      var oldestFreeableEntry_1;\n      Object.keys(XhrBlobUrlCache._cachedXhrBlobUrls).forEach(function (key) {\n        if ((!oldestFreeableEntry_1 || XhrBlobUrlCache._cachedXhrBlobUrls[key].insertionDate < oldestFreeableEntry_1.insertionDate) && XhrBlobUrlCache._cachedXhrBlobUrls[key].refCount === 0) {\n          oldestFreeableKey_1 = key;\n          oldestFreeableEntry_1 = XhrBlobUrlCache._cachedXhrBlobUrls[key];\n        }\n      });\n\n      if (oldestFreeableKey_1) {\n        URL.revokeObjectURL(oldestFreeableEntry_1.xhrBlobUrl);\n        delete XhrBlobUrlCache._cachedXhrBlobUrls[oldestFreeableKey_1];\n      }\n    }\n  }; // Use a global cache to work around the image loading delays introduced by the xhr requests. This is especially\n  // visible when scrolling a virtual list view which contains xhr images.\n\n\n  XhrBlobUrlCache._maximumItems = 128;\n  XhrBlobUrlCache._cachedXhrBlobUrls = {};\n  return XhrBlobUrlCache;\n}();\n\nvar Image =\n/** @class */\nfunction (_super) {\n  __extends(Image, _super);\n\n  function Image(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this._mountedComponent = null;\n    _this._isMounted = false;\n\n    _this._onMount = function (component) {\n      _this._mountedComponent = component;\n    };\n\n    _this._onLoad = function () {\n      if (!_this._isMounted || !_this._mountedComponent) {\n        return;\n      }\n\n      var imageDOM = _this._mountedComponent; // Measure the natural width & height of the image.\n\n      _this._nativeImageWidth = undefined;\n      _this._nativeImageHeight = undefined;\n      _this._nativeImageWidth = imageDOM.naturalWidth;\n      _this._nativeImageHeight = imageDOM.naturalHeight; // We can hide the img now. We assume that if the img. URL resolved without error,\n      // then the background img. URL also did.\n\n      _this.setState({\n        showImgTag: false\n      });\n\n      if (_this.props.onLoad) {\n        _this.props.onLoad({\n          width: _this._nativeImageWidth,\n          height: _this._nativeImageHeight\n        });\n      }\n    };\n\n    _this._imgOnError = function () {\n      _this._onError();\n    };\n\n    _this._onMouseUp = function (e) {\n      if (e.button === 0) {\n        // Types.Image doesn't officially support an onClick prop, but when it's\n        // contained within a button, it may have this prop.\n        var onClick = _this.props.onClick;\n\n        if (onClick) {\n          onClick(e);\n        }\n      }\n    };\n\n    var performXhrRequest = _this._initializeAndSetState(props, true);\n\n    if (performXhrRequest) {\n      _this._startXhrImageFetch(props);\n    }\n\n    return _this;\n  }\n\n  Image.prototype.getChildContext = function () {\n    // Let descendant RX components know that their nearest RX ancestor is not an RX.Text.\n    // Because they're in an RX.Image, they should use their normal styling rather than their\n    // special styling for appearing inline with text.\n    return {\n      isRxParentAText: false\n    };\n  };\n\n  Image.prefetch = function (url) {\n    var defer = new PromiseDefer_1.Defer();\n    var img = new window.Image();\n\n    img.onload = function (event) {\n      defer.resolve(true);\n    };\n\n    img.onerror = function (event) {\n      defer.reject('Failed to prefetch url ' + url);\n    };\n\n    img.onabort = function (event) {\n      defer.reject('Prefetch cancelled for url ' + url);\n    };\n\n    img.src = url;\n    return defer.promise();\n  };\n\n  Image.getMetadata = function (url) {\n    var defer = new PromiseDefer_1.Defer();\n    var img = new window.Image();\n\n    img.onload = function (event) {\n      defer.resolve({\n        width: img.naturalWidth,\n        height: img.naturalHeight\n      });\n    };\n\n    img.onerror = function (event) {\n      defer.reject('Failed to prefetch url ' + url);\n    };\n\n    img.onabort = function (event) {\n      defer.reject('Prefetch cancelled for url ' + url);\n    };\n\n    img.src = url;\n    return defer.promise();\n  };\n\n  Image.prototype.UNSAFE_componentWillReceiveProps = function (nextProps) {\n    var sourceOrHeaderChanged = nextProps.source !== this.props.source || !_.isEqual(nextProps.headers || {}, this.props.headers || {});\n\n    if (!nextProps.onLoad !== !this.props.onLoad || !nextProps.onError !== !this.props.onError || sourceOrHeaderChanged) {\n      var performXhrRequest = this._initializeAndSetState(nextProps, false);\n\n      if (sourceOrHeaderChanged && performXhrRequest) {\n        this._startXhrImageFetch(nextProps);\n      }\n    }\n  };\n\n  Image.prototype.componentDidMount = function () {\n    this._isMounted = true;\n  };\n\n  Image.prototype.componentWillUnmount = function () {\n    this._isMounted = false;\n\n    if (this.state.displayUrl && this.state.xhrRequest) {\n      XhrBlobUrlCache.release(this.props.source);\n    }\n  };\n\n  Image.prototype._initializeAndSetState = function (props, initial) {\n    // Retrieve the xhr blob url from the cache if it exists. This is a performance optimization as we've seen xhr\n    // requests take some time and cause flicker during rendering. Even when we're hitting the browser cache, we've\n    // seen it stall and take some time.\n    var cachedXhrBlobUrl = props.headers ? XhrBlobUrlCache.get(props.source) : null;\n    var displayUrl = cachedXhrBlobUrl ? cachedXhrBlobUrl : props.headers ? '' : props.source; // Only make the xhr request if headers are specified and there was no cache hit.\n\n    var performXhrRequest = !!props.headers && !cachedXhrBlobUrl; // We normally don't show an img tag because we use background images.  However, if the caller has supplied an\n    // onLoad or onError callback, we'll use the img tag until we receive an onLoad or onError.  But if we need to\n    // perform an XHR first to convert to a blob url, then wait on showing the img tag until we get the blob url\n    // since the basic IMG tag will fail to load it without headers.\n\n    var newState = {\n      showImgTag: (!performXhrRequest || !!cachedXhrBlobUrl) && (!!props.onLoad || !!props.onError),\n      xhrRequest: !!props.headers,\n      displayUrl: displayUrl\n    };\n\n    if (initial) {\n      this.state = newState;\n    } else {\n      this.setState(newState);\n    }\n\n    return performXhrRequest;\n  };\n\n  Image.prototype._handleXhrBlob = function (blob) {\n    if (!this._isMounted) {\n      return;\n    }\n\n    var newUrl = URL.createObjectURL(blob); // Save the newly fetched xhr blob url in the cache.\n\n    XhrBlobUrlCache.insert(this.props.source, newUrl);\n    this.setState({\n      displayUrl: newUrl,\n      // If we have an onload handler, we need to now load the img tag to get dimensions for the load.\n      showImgTag: !!this.props.onLoad\n    });\n  };\n\n  Image.prototype._startXhrImageFetch = function (props) {\n    // Test hook to simulate a slower hxr request.\n    // Timers.setTimeout(() => this._actuallyStartXhrImageFetch(props), 2500);\n    this._actuallyStartXhrImageFetch(props);\n  };\n\n  Image.prototype._actuallyStartXhrImageFetch = function (props) {\n    // Fetch Implementation\n    var _this = this; // If an 'origin' header is passed, we assume this is intended to be a crossorigin request.\n    // In order to send the cookies with the request, the withCredentials: true / credentials: 'include' flag needs to be set.\n\n\n    var withCredentials = props.headers && Object.keys(props.headers).some(function (header) {\n      return header.toLowerCase() === 'origin';\n    });\n\n    if (window.fetch) {\n      var headers_1 = new Headers();\n\n      if (props.headers) {\n        Object.keys(props.headers).forEach(function (key) {\n          headers_1.append(key, props.headers[key]);\n        });\n      }\n\n      var xhr = new Request(props.source, {\n        credentials: withCredentials ? 'include' : 'same-origin',\n        method: 'GET',\n        mode: 'cors',\n        headers: headers_1\n      });\n      fetch(xhr).then(function (response) {\n        if (!response.ok) {\n          _this._onError(new Error(response.statusText));\n        }\n\n        return response.blob().then(function (blob) {\n          _this._handleXhrBlob(blob);\n        });\n      }, function (err) {\n        _this._onError(err);\n      });\n    } else {\n      var req_1 = new XMLHttpRequest();\n      req_1.open('GET', props.source, true);\n\n      if (withCredentials) {\n        req_1.withCredentials = true;\n      }\n\n      req_1.responseType = 'blob';\n\n      if (props.headers) {\n        Object.keys(props.headers).forEach(function (key) {\n          req_1.setRequestHeader(key, props.headers[key]);\n        });\n      }\n\n      req_1.onload = function () {\n        if (req_1.status >= 400 || req_1.status < 600) {\n          _this._onError(new Error(req_1.statusText));\n        } else {\n          _this._handleXhrBlob(req_1.response);\n        }\n      };\n\n      req_1.onerror = function () {\n        _this._onError(new Error('Network issue downloading the image.'));\n      };\n\n      req_1.send();\n    }\n  };\n\n  Image.prototype.render = function () {\n    var source = this.props.source;\n    var isSourceValid = !(typeof source !== 'string' && typeof source !== 'undefined'); // Prepare image source (necessary as iOS implementation also allows objects)\n\n    assert_1.default(isSourceValid, \"Types/web/Image only accepts string sources! You passed: \" + source + \" of type \" + typeof source);\n    var optionalImg = null;\n\n    if (this.state.showImgTag) {\n      optionalImg = React.createElement(\"img\", {\n        loading: \"lazy\",\n        style: _styles.image,\n        src: this.state.displayUrl,\n        alt: this.props.accessibilityLabel,\n        onError: this._imgOnError,\n        onLoad: this._onLoad,\n        ref: this._onMount\n      });\n    }\n\n    var reactElement = React.createElement(\"div\", {\n      style: this._getStyles(),\n      title: this.props.title,\n      \"data-test-id\": this.props.testId,\n      onMouseUp: this._onMouseUp\n    }, optionalImg, this.props.children);\n    return this.context.isRxParentAText ? restyleForInlineText_1.default(reactElement) : reactElement;\n  };\n\n  Image.prototype._getStyles = function () {\n    var resizeMode = this.props.resizeMode;\n    var styles = Styles_1.default.combine([_styles.defaultContainer, this.props.style]) || {};\n    var backgroundRepeat = resizeMode === 'repeat' ? 'repeat' : 'no-repeat';\n\n    var backgroundSize = this._buildBackgroundSize(resizeMode); // It is necessary to wrap the url in quotes as in url(\"a.jpg?q=(a and b)\").\n    // If the url is unquoted and contains paranthesis, e.g. a.jpg?q=(a and b), it will become url(a.jpg?q=(a and b))\n    // which will not render on the screen.\n\n\n    var backgroundImage = \"url(\\\"\" + this.state.displayUrl + \"\\\")\"; // Types doesn't support border styles other than \"solid\" for images.\n\n    var borderStyle = styles.borderWidth ? 'solid' : 'none';\n    return __assign(__assign({}, styles), {\n      backgroundPosition: 'center center',\n      backgroundRepeat: backgroundRepeat,\n      backgroundImage: backgroundImage,\n      backgroundSize: backgroundSize,\n      borderStyle: borderStyle,\n      display: 'flex'\n    });\n  };\n\n  Image.prototype._buildBackgroundSize = function (resizeMode) {\n    if (resizeMode === void 0) {\n      resizeMode = Image_1.DEFAULT_RESIZE_MODE;\n    }\n\n    switch (resizeMode) {\n      case 'repeat':\n        return 'auto';\n\n      case 'stretch':\n        return '100% 100%';\n      // contain | cover | auto are valid BackgroundSize values\n\n      case 'contain':\n      case 'cover':\n      case 'auto':\n        return resizeMode;\n      // Prevents unknown resizeMode values\n\n      default:\n        return Image_1.DEFAULT_RESIZE_MODE;\n    }\n  };\n\n  Image.prototype._onError = function (err) {\n    if (!this._isMounted) {\n      return;\n    } // We can hide the img now. We assume that if the img. URL failed to resolve,\n    // then the background img. URL also did.\n\n\n    this.setState({\n      showImgTag: false\n    });\n\n    if (this.props.onError) {\n      this.props.onError(err);\n    }\n  }; // Note: This works only if you have an onLoaded handler and wait for the image to load.\n\n\n  Image.prototype.getNativeWidth = function () {\n    return this._nativeImageWidth;\n  };\n\n  Image.prototype.getNativeHeight = function () {\n    return this._nativeImageHeight;\n  };\n\n  Image.contextTypes = {\n    isRxParentAText: PropTypes.bool\n  };\n  Image.childContextTypes = {\n    isRxParentAText: PropTypes.bool.isRequired\n  };\n  return Image;\n}(React.Component);\n\nexports.Image = Image;\nexports.default = Image;","map":{"version":3,"sources":["/Users/dangthang/Desktop/webStreamGame/node_modules/react-ult/dist/web/Image.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__","constructor","create","__assign","assign","t","s","i","n","arguments","length","apply","defineProperty","exports","value","Image","PropTypes","require","React","assert_1","Image_1","PromiseDefer_1","_","restyleForInlineText_1","Styles_1","_styles","image","position","display","flexDirection","opacity","maxWidth","maxHeight","defaultContainer","default","createImageStyle","flex","overflow","backgroundColor","XhrBlobUrlCache","get","source","_cachedXhrBlobUrls","refCount","xhrBlobUrl","undefined","insert","_cleanupIfCapacityExceeded","xhrBlobUrlCacheEntry","insertionDate","Date","now","release","keys","_maximumItems","oldestFreeableKey_1","oldestFreeableEntry_1","forEach","key","URL","revokeObjectURL","_super","props","_this","_mountedComponent","_isMounted","_onMount","component","_onLoad","imageDOM","_nativeImageWidth","_nativeImageHeight","naturalWidth","naturalHeight","setState","showImgTag","onLoad","width","height","_imgOnError","_onError","_onMouseUp","e","button","onClick","performXhrRequest","_initializeAndSetState","_startXhrImageFetch","getChildContext","isRxParentAText","prefetch","url","defer","Defer","img","window","onload","event","resolve","onerror","reject","onabort","src","promise","getMetadata","UNSAFE_componentWillReceiveProps","nextProps","sourceOrHeaderChanged","isEqual","headers","onError","componentDidMount","componentWillUnmount","state","displayUrl","xhrRequest","initial","cachedXhrBlobUrl","newState","_handleXhrBlob","blob","newUrl","createObjectURL","_actuallyStartXhrImageFetch","withCredentials","some","header","toLowerCase","fetch","headers_1","Headers","append","xhr","Request","credentials","method","mode","then","response","ok","Error","statusText","err","req_1","XMLHttpRequest","open","responseType","setRequestHeader","status","send","render","isSourceValid","optionalImg","createElement","loading","style","alt","accessibilityLabel","ref","reactElement","_getStyles","title","testId","onMouseUp","children","context","resizeMode","styles","combine","backgroundRepeat","backgroundSize","_buildBackgroundSize","backgroundImage","borderStyle","borderWidth","backgroundPosition","DEFAULT_RESIZE_MODE","getNativeWidth","getNativeHeight","contextTypes","bool","childContextTypes","isRequired","Component"],"mappings":"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","sourcesContent":["\"use strict\";\r\n/**\r\n * Image.tsx\r\n *\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT license.\r\n *\r\n * Web-specific implementation of the cross-platform Image abstraction.\r\n */\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Image = void 0;\r\nvar PropTypes = require(\"prop-types\");\r\nvar React = require(\"react\");\r\nvar assert_1 = require(\"../common/assert\");\r\nvar Image_1 = require(\"../common/Image\");\r\nvar PromiseDefer_1 = require(\"../common/utils/PromiseDefer\");\r\nvar _ = require(\"./utils/lodashMini\");\r\nvar restyleForInlineText_1 = require(\"./utils/restyleForInlineText\");\r\nvar Styles_1 = require(\"./Styles\");\r\nvar _styles = {\r\n    image: {\r\n        position: 'absolute',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        opacity: 0,\r\n        maxWidth: '100%',\r\n        maxHeight: '100%',\r\n    },\r\n    defaultContainer: Styles_1.default.createImageStyle({\r\n        position: 'relative',\r\n        flex: 0,\r\n        overflow: 'visible',\r\n        backgroundColor: 'transparent',\r\n    }),\r\n};\r\nvar XhrBlobUrlCache = /** @class */ (function () {\r\n    function XhrBlobUrlCache() {\r\n    }\r\n    XhrBlobUrlCache.get = function (source) {\r\n        if (this._cachedXhrBlobUrls[source]) {\r\n            this._cachedXhrBlobUrls[source].refCount++;\r\n            return this._cachedXhrBlobUrls[source].xhrBlobUrl;\r\n        }\r\n        return undefined;\r\n    };\r\n    XhrBlobUrlCache.insert = function (source, xhrBlobUrl) {\r\n        XhrBlobUrlCache._cleanupIfCapacityExceeded();\r\n        if (this._cachedXhrBlobUrls[source]) {\r\n            XhrBlobUrlCache._cachedXhrBlobUrls[source].refCount++;\r\n        }\r\n        else {\r\n            var xhrBlobUrlCacheEntry = {\r\n                xhrBlobUrl: xhrBlobUrl,\r\n                insertionDate: Date.now(),\r\n                refCount: 1,\r\n            };\r\n            XhrBlobUrlCache._cachedXhrBlobUrls[source] = xhrBlobUrlCacheEntry;\r\n        }\r\n    };\r\n    XhrBlobUrlCache.release = function (source) {\r\n        // Keep track of which cache entries are being used as we don't want to clean up a resource that someone is\r\n        // still relying on.\r\n        if (this._cachedXhrBlobUrls[source]) {\r\n            XhrBlobUrlCache._cachedXhrBlobUrls[source].refCount--;\r\n        }\r\n    };\r\n    XhrBlobUrlCache._cleanupIfCapacityExceeded = function () {\r\n        // If we've reached maximum capacity, clean up the oldest freeable cache entry if any. An entry is freeable is\r\n        // it's not currently in use (refCount == 0). Return whether we have room to add more entries to the cache.\r\n        if (Object.keys(XhrBlobUrlCache._cachedXhrBlobUrls).length + 1 > XhrBlobUrlCache._maximumItems) {\r\n            var oldestFreeableKey_1;\r\n            var oldestFreeableEntry_1;\r\n            Object.keys(XhrBlobUrlCache._cachedXhrBlobUrls).forEach(function (key) {\r\n                if ((!oldestFreeableEntry_1 || XhrBlobUrlCache._cachedXhrBlobUrls[key].insertionDate < oldestFreeableEntry_1.insertionDate) &&\r\n                    XhrBlobUrlCache._cachedXhrBlobUrls[key].refCount === 0) {\r\n                    oldestFreeableKey_1 = key;\r\n                    oldestFreeableEntry_1 = XhrBlobUrlCache._cachedXhrBlobUrls[key];\r\n                }\r\n            });\r\n            if (oldestFreeableKey_1) {\r\n                URL.revokeObjectURL(oldestFreeableEntry_1.xhrBlobUrl);\r\n                delete XhrBlobUrlCache._cachedXhrBlobUrls[oldestFreeableKey_1];\r\n            }\r\n        }\r\n    };\r\n    // Use a global cache to work around the image loading delays introduced by the xhr requests. This is especially\r\n    // visible when scrolling a virtual list view which contains xhr images.\r\n    XhrBlobUrlCache._maximumItems = 128;\r\n    XhrBlobUrlCache._cachedXhrBlobUrls = {};\r\n    return XhrBlobUrlCache;\r\n}());\r\nvar Image = /** @class */ (function (_super) {\r\n    __extends(Image, _super);\r\n    function Image(props) {\r\n        var _this = _super.call(this, props) || this;\r\n        _this._mountedComponent = null;\r\n        _this._isMounted = false;\r\n        _this._onMount = function (component) {\r\n            _this._mountedComponent = component;\r\n        };\r\n        _this._onLoad = function () {\r\n            if (!_this._isMounted || !_this._mountedComponent) {\r\n                return;\r\n            }\r\n            var imageDOM = _this._mountedComponent;\r\n            // Measure the natural width & height of the image.\r\n            _this._nativeImageWidth = undefined;\r\n            _this._nativeImageHeight = undefined;\r\n            _this._nativeImageWidth = imageDOM.naturalWidth;\r\n            _this._nativeImageHeight = imageDOM.naturalHeight;\r\n            // We can hide the img now. We assume that if the img. URL resolved without error,\r\n            // then the background img. URL also did.\r\n            _this.setState({\r\n                showImgTag: false,\r\n            });\r\n            if (_this.props.onLoad) {\r\n                _this.props.onLoad({ width: _this._nativeImageWidth, height: _this._nativeImageHeight });\r\n            }\r\n        };\r\n        _this._imgOnError = function () {\r\n            _this._onError();\r\n        };\r\n        _this._onMouseUp = function (e) {\r\n            if (e.button === 0) {\r\n                // Types.Image doesn't officially support an onClick prop, but when it's\r\n                // contained within a button, it may have this prop.\r\n                var onClick = _this.props.onClick;\r\n                if (onClick) {\r\n                    onClick(e);\r\n                }\r\n            }\r\n        };\r\n        var performXhrRequest = _this._initializeAndSetState(props, true);\r\n        if (performXhrRequest) {\r\n            _this._startXhrImageFetch(props);\r\n        }\r\n        return _this;\r\n    }\r\n    Image.prototype.getChildContext = function () {\r\n        // Let descendant RX components know that their nearest RX ancestor is not an RX.Text.\r\n        // Because they're in an RX.Image, they should use their normal styling rather than their\r\n        // special styling for appearing inline with text.\r\n        return { isRxParentAText: false };\r\n    };\r\n    Image.prefetch = function (url) {\r\n        var defer = new PromiseDefer_1.Defer();\r\n        var img = new window.Image();\r\n        img.onload = (function (event) {\r\n            defer.resolve(true);\r\n        });\r\n        img.onerror = (function (event) {\r\n            defer.reject('Failed to prefetch url ' + url);\r\n        });\r\n        img.onabort = (function (event) {\r\n            defer.reject('Prefetch cancelled for url ' + url);\r\n        });\r\n        img.src = url;\r\n        return defer.promise();\r\n    };\r\n    Image.getMetadata = function (url) {\r\n        var defer = new PromiseDefer_1.Defer();\r\n        var img = new window.Image();\r\n        img.onload = (function (event) {\r\n            defer.resolve({\r\n                width: img.naturalWidth,\r\n                height: img.naturalHeight,\r\n            });\r\n        });\r\n        img.onerror = (function (event) {\r\n            defer.reject('Failed to prefetch url ' + url);\r\n        });\r\n        img.onabort = (function (event) {\r\n            defer.reject('Prefetch cancelled for url ' + url);\r\n        });\r\n        img.src = url;\r\n        return defer.promise();\r\n    };\r\n    Image.prototype.UNSAFE_componentWillReceiveProps = function (nextProps) {\r\n        var sourceOrHeaderChanged = (nextProps.source !== this.props.source ||\r\n            !_.isEqual(nextProps.headers || {}, this.props.headers || {}));\r\n        if (!nextProps.onLoad !== !this.props.onLoad || !nextProps.onError !== !this.props.onError || sourceOrHeaderChanged) {\r\n            var performXhrRequest = this._initializeAndSetState(nextProps, false);\r\n            if (sourceOrHeaderChanged && performXhrRequest) {\r\n                this._startXhrImageFetch(nextProps);\r\n            }\r\n        }\r\n    };\r\n    Image.prototype.componentDidMount = function () {\r\n        this._isMounted = true;\r\n    };\r\n    Image.prototype.componentWillUnmount = function () {\r\n        this._isMounted = false;\r\n        if (this.state.displayUrl && this.state.xhrRequest) {\r\n            XhrBlobUrlCache.release(this.props.source);\r\n        }\r\n    };\r\n    Image.prototype._initializeAndSetState = function (props, initial) {\r\n        // Retrieve the xhr blob url from the cache if it exists. This is a performance optimization as we've seen xhr\r\n        // requests take some time and cause flicker during rendering. Even when we're hitting the browser cache, we've\r\n        // seen it stall and take some time.\r\n        var cachedXhrBlobUrl = props.headers ? XhrBlobUrlCache.get(props.source) : null;\r\n        var displayUrl = cachedXhrBlobUrl ? cachedXhrBlobUrl :\r\n            props.headers ? '' : props.source;\r\n        // Only make the xhr request if headers are specified and there was no cache hit.\r\n        var performXhrRequest = !!props.headers && !cachedXhrBlobUrl;\r\n        // We normally don't show an img tag because we use background images.  However, if the caller has supplied an\r\n        // onLoad or onError callback, we'll use the img tag until we receive an onLoad or onError.  But if we need to\r\n        // perform an XHR first to convert to a blob url, then wait on showing the img tag until we get the blob url\r\n        // since the basic IMG tag will fail to load it without headers.\r\n        var newState = {\r\n            showImgTag: (!performXhrRequest || !!cachedXhrBlobUrl) && (!!props.onLoad || !!props.onError),\r\n            xhrRequest: !!props.headers,\r\n            displayUrl: displayUrl,\r\n        };\r\n        if (initial) {\r\n            this.state = newState;\r\n        }\r\n        else {\r\n            this.setState(newState);\r\n        }\r\n        return performXhrRequest;\r\n    };\r\n    Image.prototype._handleXhrBlob = function (blob) {\r\n        if (!this._isMounted) {\r\n            return;\r\n        }\r\n        var newUrl = URL.createObjectURL(blob);\r\n        // Save the newly fetched xhr blob url in the cache.\r\n        XhrBlobUrlCache.insert(this.props.source, newUrl);\r\n        this.setState({\r\n            displayUrl: newUrl,\r\n            // If we have an onload handler, we need to now load the img tag to get dimensions for the load.\r\n            showImgTag: !!this.props.onLoad,\r\n        });\r\n    };\r\n    Image.prototype._startXhrImageFetch = function (props) {\r\n        // Test hook to simulate a slower hxr request.\r\n        // Timers.setTimeout(() => this._actuallyStartXhrImageFetch(props), 2500);\r\n        this._actuallyStartXhrImageFetch(props);\r\n    };\r\n    Image.prototype._actuallyStartXhrImageFetch = function (props) {\r\n        // Fetch Implementation\r\n        var _this = this;\r\n        // If an 'origin' header is passed, we assume this is intended to be a crossorigin request.\r\n        // In order to send the cookies with the request, the withCredentials: true / credentials: 'include' flag needs to be set.\r\n        var withCredentials = props.headers\r\n            && Object.keys(props.headers).some(function (header) { return header.toLowerCase() === 'origin'; });\r\n        if (window.fetch) {\r\n            var headers_1 = new Headers();\r\n            if (props.headers) {\r\n                Object.keys(props.headers).forEach(function (key) {\r\n                    headers_1.append(key, props.headers[key]);\r\n                });\r\n            }\r\n            var xhr = new Request(props.source, {\r\n                credentials: withCredentials ? 'include' : 'same-origin',\r\n                method: 'GET',\r\n                mode: 'cors',\r\n                headers: headers_1,\r\n            });\r\n            fetch(xhr)\r\n                .then(function (response) {\r\n                if (!response.ok) {\r\n                    _this._onError(new Error(response.statusText));\r\n                }\r\n                return response.blob().then(function (blob) {\r\n                    _this._handleXhrBlob(blob);\r\n                });\r\n            }, function (err) {\r\n                _this._onError(err);\r\n            });\r\n        }\r\n        else {\r\n            var req_1 = new XMLHttpRequest();\r\n            req_1.open('GET', props.source, true);\r\n            if (withCredentials) {\r\n                req_1.withCredentials = true;\r\n            }\r\n            req_1.responseType = 'blob';\r\n            if (props.headers) {\r\n                Object.keys(props.headers).forEach(function (key) {\r\n                    req_1.setRequestHeader(key, props.headers[key]);\r\n                });\r\n            }\r\n            req_1.onload = function () {\r\n                if (req_1.status >= 400 || req_1.status < 600) {\r\n                    _this._onError(new Error(req_1.statusText));\r\n                }\r\n                else {\r\n                    _this._handleXhrBlob(req_1.response);\r\n                }\r\n            };\r\n            req_1.onerror = function () {\r\n                _this._onError(new Error('Network issue downloading the image.'));\r\n            };\r\n            req_1.send();\r\n        }\r\n    };\r\n    Image.prototype.render = function () {\r\n        var source = this.props.source;\r\n        var isSourceValid = !(typeof source !== 'string' && typeof source !== 'undefined');\r\n        // Prepare image source (necessary as iOS implementation also allows objects)\r\n        assert_1.default(isSourceValid, \"Types/web/Image only accepts string sources! You passed: \" + source + \" of type \" + typeof source);\r\n        var optionalImg = null;\r\n        if (this.state.showImgTag) {\r\n            optionalImg = (React.createElement(\"img\", { loading: \"lazy\", style: _styles.image, src: this.state.displayUrl, alt: this.props.accessibilityLabel, onError: this._imgOnError, onLoad: this._onLoad, ref: this._onMount }));\r\n        }\r\n        var reactElement = (React.createElement(\"div\", { style: this._getStyles(), title: this.props.title, \"data-test-id\": this.props.testId, onMouseUp: this._onMouseUp },\r\n            optionalImg,\r\n            this.props.children));\r\n        return this.context.isRxParentAText ?\r\n            restyleForInlineText_1.default(reactElement) :\r\n            reactElement;\r\n    };\r\n    Image.prototype._getStyles = function () {\r\n        var resizeMode = this.props.resizeMode;\r\n        var styles = (Styles_1.default.combine([_styles.defaultContainer, this.props.style]) || {});\r\n        var backgroundRepeat = resizeMode === 'repeat' ? 'repeat' : 'no-repeat';\r\n        var backgroundSize = this._buildBackgroundSize(resizeMode);\r\n        // It is necessary to wrap the url in quotes as in url(\"a.jpg?q=(a and b)\").\r\n        // If the url is unquoted and contains paranthesis, e.g. a.jpg?q=(a and b), it will become url(a.jpg?q=(a and b))\r\n        // which will not render on the screen.\r\n        var backgroundImage = \"url(\\\"\" + this.state.displayUrl + \"\\\")\";\r\n        // Types doesn't support border styles other than \"solid\" for images.\r\n        var borderStyle = styles.borderWidth ? 'solid' : 'none';\r\n        return __assign(__assign({}, styles), { backgroundPosition: 'center center', backgroundRepeat: backgroundRepeat,\r\n            backgroundImage: backgroundImage,\r\n            backgroundSize: backgroundSize,\r\n            borderStyle: borderStyle, display: 'flex' });\r\n    };\r\n    Image.prototype._buildBackgroundSize = function (resizeMode) {\r\n        if (resizeMode === void 0) { resizeMode = Image_1.DEFAULT_RESIZE_MODE; }\r\n        switch (resizeMode) {\r\n            case 'repeat':\r\n                return 'auto';\r\n            case 'stretch':\r\n                return '100% 100%';\r\n            // contain | cover | auto are valid BackgroundSize values\r\n            case 'contain':\r\n            case 'cover':\r\n            case 'auto':\r\n                return resizeMode;\r\n            // Prevents unknown resizeMode values\r\n            default:\r\n                return Image_1.DEFAULT_RESIZE_MODE;\r\n        }\r\n    };\r\n    Image.prototype._onError = function (err) {\r\n        if (!this._isMounted) {\r\n            return;\r\n        }\r\n        // We can hide the img now. We assume that if the img. URL failed to resolve,\r\n        // then the background img. URL also did.\r\n        this.setState({\r\n            showImgTag: false,\r\n        });\r\n        if (this.props.onError) {\r\n            this.props.onError(err);\r\n        }\r\n    };\r\n    // Note: This works only if you have an onLoaded handler and wait for the image to load.\r\n    Image.prototype.getNativeWidth = function () {\r\n        return this._nativeImageWidth;\r\n    };\r\n    Image.prototype.getNativeHeight = function () {\r\n        return this._nativeImageHeight;\r\n    };\r\n    Image.contextTypes = {\r\n        isRxParentAText: PropTypes.bool,\r\n    };\r\n    Image.childContextTypes = {\r\n        isRxParentAText: PropTypes.bool.isRequired,\r\n    };\r\n    return Image;\r\n}(React.Component));\r\nexports.Image = Image;\r\nexports.default = Image;\r\n"]},"metadata":{},"sourceType":"script"}