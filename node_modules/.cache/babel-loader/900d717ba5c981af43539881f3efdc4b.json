{"ast":null,"code":"\"use strict\";\n/**\r\n * RootView.tsx\r\n *\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT license.\r\n *\r\n * The top-most view (rendered into window.body) that's used for proper\r\n * layering or modals, etc. in the web implementation of the ReactXP\r\n * cross-platform library.\r\n */\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RootView = exports.MainViewContainer = exports.PopupDescriptor = void 0;\n\nvar PropTypes = require(\"prop-types\");\n\nvar React = require(\"react\");\n\nvar ReactDOM = require(\"react-dom\");\n\nvar PopupContainerViewBase_1 = require(\"../common/PopupContainerViewBase\");\n\nvar Timers_1 = require(\"../common/utils/Timers\");\n\nvar AccessibilityAnnouncer_1 = require(\"./AccessibilityAnnouncer\");\n\nvar FocusManager_1 = require(\"./utils/FocusManager\");\n\nvar Input_1 = require(\"./Input\");\n\nvar _ = require(\"./utils/lodashMini\");\n\nvar ModalContainer_1 = require(\"./ModalContainer\");\n\nvar PopupContainerView_1 = require(\"./PopupContainerView\");\n\nvar UserInterface_1 = require(\"./UserInterface\");\n\nvar PopupDescriptor =\n/** @class */\nfunction () {\n  function PopupDescriptor(popupId, popupOptions) {\n    this.popupId = popupId;\n    this.popupOptions = popupOptions;\n  }\n\n  return PopupDescriptor;\n}();\n\nexports.PopupDescriptor = PopupDescriptor; // Button code for when right click is pressed in a mouse event\n\nvar _rightClickButtonCode = 2;\nvar KEY_CODE_TAB = 9;\nvar KEY_CODE_ESC = 27; // Setting the expected default box-sizing for everything.\n\nif (typeof document !== 'undefined') {\n  var defaultBoxSizing = '*, *:before, *:after { box-sizing: border-box; }';\n  var style = document.createElement('style');\n  style.type = 'text/css';\n  style.appendChild(document.createTextNode(defaultBoxSizing));\n  document.head.appendChild(style);\n} // This helper class wraps the main view and passes a boolean value\n// \"isInRxMainView\" to all children found within it. This is used to\n// prevent gesture handling within the main view when a modal is displayed.\n\n\nvar MainViewContainer =\n/** @class */\nfunction (_super) {\n  __extends(MainViewContainer, _super);\n\n  function MainViewContainer() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  MainViewContainer.prototype.getChildContext = function () {\n    return {\n      isInRxMainView: true\n    };\n  };\n\n  MainViewContainer.prototype.render = function () {\n    return this.props.children;\n  };\n\n  MainViewContainer.childContextTypes = {\n    isInRxMainView: PropTypes.bool\n  };\n  return MainViewContainer;\n}(React.Component);\n\nexports.MainViewContainer = MainViewContainer;\n\nvar RootView =\n/** @class */\nfunction (_super) {\n  __extends(RootView, _super);\n\n  function RootView(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this._clickHandlerInstalled = false;\n    _this._keyboardHandlerInstalled = false;\n    _this._shouldEnableKeyboardNavigationModeOnFocus = false;\n    _this._applicationIsNotActive = false;\n\n    _this._onMount = function (component) {\n      var domNode = component && ReactDOM.findDOMNode(component);\n      _this._mountedComponent = domNode ? domNode : undefined;\n    };\n\n    _this._tryClosePopup = function (e) {\n      // Dismiss a visible popup if there's a click outside.\n      var popupContainer = _this._mountedComponent;\n\n      if (!popupContainer) {\n        return;\n      }\n\n      var clickInPopup = false;\n      var el = e.target;\n\n      while (el) {\n        if (el === popupContainer) {\n          clickInPopup = true;\n          break;\n        }\n\n        el = el.parentElement || undefined;\n      }\n\n      if (!clickInPopup && e.button !== _rightClickButtonCode) {\n        _.defer(function () {\n          if (_this.props.activePopup) {\n            var anchorReference = _this.props.activePopup.popupOptions.getAnchor();\n\n            var isClickOnAnchor = _this._determineIfClickOnElement(anchorReference, e.srcElement);\n\n            var isClickOnContainer = false;\n\n            if (!isClickOnAnchor && _this.props.activePopup.popupOptions.getElementTriggeringPopup) {\n              var containerRef = _this.props.activePopup.popupOptions.getElementTriggeringPopup();\n\n              isClickOnContainer = _this._determineIfClickOnElement(containerRef, e.srcElement);\n            }\n\n            if (isClickOnAnchor || isClickOnContainer) {\n              // If the press event was on the anchor, we can notify the caller about it.\n              // Showing another animation while dimissing the popup creates a conflict in the UI making it not doing one of the\n              // two animations (i.e.: Opening an actionsheet while dismissing a popup). We introduce this delay to make sure\n              // the popup dimissing animation has finished before we call the event handler.\n              if (_this.props.activePopup.popupOptions.onAnchorPressed) {\n                Timers_1.default.setTimeout(function () {\n                  // We can't pass through the DOM event argument to the anchor event handler as the event we have at this\n                  // point is a DOM Event and the anchor expect a Synthetic event. There doesn't seem to be any way to convert\n                  // between them. Passing null for now.\n                  _this.props.activePopup.popupOptions.onAnchorPressed(undefined);\n                }, 500);\n              } // If the popup is meant to behave like a toggle, we should not dimiss the popup from here since the event came\n              // from the anchor/container of the popup. The popup will be dismissed during the click handling of the\n              // anchor/container.\n\n\n              if (_this.props.activePopup.popupOptions.dismissIfShown) {\n                return;\n              }\n            }\n\n            if (_this.props.activePopup.popupOptions.preventDismissOnPress) {\n              return;\n            }\n          }\n\n          _this._dismissPopup();\n        });\n      }\n    };\n\n    _this._onMouseDownCapture = function (e) {\n      if (e && e.clientX === 0 && e.clientY === 0 && e.screenX === 0 && e.screenY === 0) {\n        // This is most likely an event triggered by NVDA when Enter or\n        // Space is pressed, do not dismiss the keyboard navigation mode.\n        return;\n      }\n\n      _this._shouldEnableKeyboardNavigationModeOnFocus = false;\n\n      _this._updateKeyboardNavigationState(false);\n    };\n\n    _this._onKeyDownCapture = function (e) {\n      if (e.keyCode === KEY_CODE_TAB) {\n        _this._updateKeyboardNavigationState(true);\n      }\n\n      if (e.keyCode === KEY_CODE_ESC) {\n        // If Esc is pressed and the focused element stays the same after some time,\n        // switch the keyboard navigation off to dismiss the outline.\n        var activeElement_1 = document.activeElement;\n\n        if (_this._isNavigatingWithKeyboardUpateTimer) {\n          Timers_1.default.clearTimeout(_this._isNavigatingWithKeyboardUpateTimer);\n        }\n\n        _this._isNavigatingWithKeyboardUpateTimer = Timers_1.default.setTimeout(function () {\n          _this._isNavigatingWithKeyboardUpateTimer = undefined;\n\n          if (document.activeElement === activeElement_1 && activeElement_1 && activeElement_1 !== document.body) {\n            _this._updateKeyboardNavigationState(false);\n          }\n        }, 500);\n      }\n    };\n\n    _this._onFocusIn = function (e) {\n      // When the screen reader is being used, we need to enable the keyboard navigation\n      // mode. It's not possible to detect the screen reader on web. To work it around we\n      // apply the following assumption: if the focus is moved without using the mouse and\n      // not from the application code with focus() method, it is most likely moved by the\n      // screen reader.\n      _this._cancelApplicationIsNotActive();\n\n      var target = e.target;\n\n      if (_this._updateKeyboardNavigationModeOnFocusTimer) {\n        Timers_1.default.clearTimeout(_this._updateKeyboardNavigationModeOnFocusTimer);\n      }\n\n      _this._updateKeyboardNavigationModeOnFocusTimer = Timers_1.default.setTimeout(function () {\n        _this._updateKeyboardNavigationModeOnFocusTimer = undefined;\n        var prev = _this._prevFocusedElement;\n        var curShouldEnable = _this._shouldEnableKeyboardNavigationModeOnFocus;\n        _this._prevFocusedElement = target;\n        _this._shouldEnableKeyboardNavigationModeOnFocus = true;\n\n        if (_this._applicationIsNotActive) {\n          _this._applicationIsNotActive = false;\n          return;\n        }\n\n        if (prev === target || target === FocusManager_1.default.getLastFocusedProgrammatically(true)) {\n          return;\n        }\n\n        if (!UserInterface_1.default.isNavigatingWithKeyboard() && curShouldEnable) {\n          _this._updateKeyboardNavigationState(true);\n        }\n      }, 0);\n    };\n\n    _this._onFocusOut = function (e) {\n      // If the focus is out and nothing is focused after some time, most likely\n      // the application has been deactivated, so the next focusin will be about\n      // activating the application back again and should be ignored.\n      // This is a safety pillow for checking that _prevFocusedElement is changed,\n      // as _prevFocusedElement might be gone while the application is not active.\n      _this._requestApplicationIsNotActive();\n    };\n\n    _this._onKeyDown = function (e) {\n      Input_1.default.dispatchKeyDown(e);\n    };\n\n    _this._onKeyUp = function (e) {\n      if (_this.props.activePopup && e.keyCode === KEY_CODE_ESC) {\n        if (e.stopPropagation) {\n          e.stopPropagation();\n        }\n\n        _this._dismissPopup();\n\n        return;\n      }\n\n      Input_1.default.dispatchKeyUp(e);\n    };\n\n    _this.state = _this._getInitialState(); // Initialize the root FocusManager which is aware of all\n    // focusable elements.\n\n    _this._focusManager = new FocusManager_1.default(undefined);\n    return _this;\n  }\n\n  RootView.prototype.getChildContext = function () {\n    // Provide the context with root FocusManager to all descendants.\n    return {\n      focusManager: this._focusManager\n    };\n  };\n\n  RootView.prototype._getInitialState = function () {\n    return {\n      isMeasuringPopup: true,\n      anchorPosition: 'left',\n      anchorOffset: 0,\n      popupY: 0,\n      popupX: 0,\n      popupWidth: 0,\n      popupHeight: 0,\n      constrainedPopupWidth: 0,\n      constrainedPopupHeight: 0,\n      focusClass: this.props.mouseFocusOutline\n    };\n  };\n\n  RootView.prototype.UNSAFE_componentWillReceiveProps = function (prevProps) {\n    if (this.props.activePopup !== prevProps.activePopup) {\n      this._stopHidePopupTimer(); // If the popup changes, reset our state.\n\n\n      this.setState(this._getInitialState());\n    }\n  };\n\n  RootView.prototype.componentDidUpdate = function (prevProps, prevState) {\n    if (this.props.activePopup) {\n      this._stopHidePopupTimer();\n\n      this._recalcPosition();\n\n      if (!this._respositionPopupTimer) {\n        this._startRepositionPopupTimer();\n      }\n\n      this._startHidePopupTimer();\n\n      if (!this._clickHandlerInstalled) {\n        document.addEventListener('mousedown', this._tryClosePopup);\n        document.addEventListener('touchstart', this._tryClosePopup);\n        this._clickHandlerInstalled = true;\n      }\n    } else {\n      this._stopRepositionPopupTimer();\n\n      if (this._clickHandlerInstalled) {\n        document.removeEventListener('mousedown', this._tryClosePopup);\n        document.removeEventListener('touchstart', this._tryClosePopup);\n        this._clickHandlerInstalled = false;\n      }\n    }\n  };\n\n  RootView.prototype.componentDidMount = function () {\n    if (this.props.activePopup) {\n      this._recalcPosition();\n    }\n\n    if (this.props.activePopup) {\n      this._startRepositionPopupTimer();\n    }\n\n    if (!this._keyboardHandlerInstalled) {\n      window.addEventListener('keydown', this._onKeyDown);\n      window.addEventListener('keyup', this._onKeyUp);\n      window.addEventListener('keydown', this._onKeyDownCapture, true); // Capture!\n\n      window.addEventListener('mousedown', this._onMouseDownCapture, true); // Capture!\n\n      window.addEventListener('focusin', this._onFocusIn);\n      window.addEventListener('focusout', this._onFocusOut);\n      this._keyboardHandlerInstalled = true;\n    }\n  };\n\n  RootView.prototype.componentWillUnmount = function () {\n    this._stopHidePopupTimer();\n\n    this._stopRepositionPopupTimer();\n\n    if (this._keyboardHandlerInstalled) {\n      window.removeEventListener('keydown', this._onKeyDown);\n      window.removeEventListener('keyup', this._onKeyUp);\n      window.removeEventListener('keydown', this._onKeyDownCapture, true);\n      window.removeEventListener('mousedown', this._onMouseDownCapture, true);\n      window.removeEventListener('focusin', this._onFocusIn);\n      window.removeEventListener('focusout', this._onFocusOut);\n      this._keyboardHandlerInstalled = false;\n    }\n  };\n\n  RootView.prototype._renderPopup = function (popup, hidden) {\n    var _this = this;\n\n    var popupContainerStyle = {\n      display: 'flex',\n      position: 'fixed',\n      zIndex: 100001\n    };\n\n    if (!hidden) {\n      popupContainerStyle.top = this.state.popupY;\n      popupContainerStyle.left = this.state.popupX; // Are we artificially constraining the width and/or height?\n\n      if (this.state.constrainedPopupWidth && this.state.constrainedPopupWidth !== this.state.popupWidth) {\n        popupContainerStyle.width = this.state.constrainedPopupWidth;\n      }\n\n      if (this.state.constrainedPopupHeight && this.state.constrainedPopupHeight !== this.state.popupHeight) {\n        popupContainerStyle.height = this.state.constrainedPopupHeight;\n      }\n    }\n\n    var key = (popup.popupOptions.cacheable ? 'CP:' : 'P:') + popup.popupId;\n    var renderedPopup = hidden ? popup.popupOptions.renderPopup('top', 0, 0, 0) : popup.popupOptions.renderPopup(this.state.anchorPosition, this.state.anchorOffset, this.state.constrainedPopupWidth, this.state.constrainedPopupHeight);\n    return React.createElement(PopupContainerView_1.default, {\n      key: key,\n      style: popupContainerStyle,\n      hidden: hidden,\n      ref: hidden ? undefined : this._onMount,\n      onMouseEnter: function (e) {\n        return _this._onMouseEnter(e);\n      },\n      onMouseLeave: function (e) {\n        return _this._onMouseLeave(e);\n      }\n    }, renderedPopup);\n  };\n\n  RootView.prototype.render = function () {\n    var _this = this;\n\n    var rootViewStyle = {\n      width: '100%',\n      height: '100%',\n      display: 'flex',\n      cursor: 'default'\n    };\n    var optionalPopups = [];\n\n    if (this.props.activePopup) {\n      optionalPopups.push(this._renderPopup(this.props.activePopup, false));\n    }\n\n    if (this.props.cachedPopup) {\n      this.props.cachedPopup.forEach(function (popup) {\n        return optionalPopups.push(_this._renderPopup(popup, true));\n      });\n    }\n\n    var optionalModal = null;\n\n    if (this.props.modal) {\n      optionalModal = React.createElement(ModalContainer_1.default, null, this.props.modal);\n    }\n\n    return React.createElement(\"div\", {\n      className: this.state.focusClass,\n      style: rootViewStyle,\n      dir: this.props.writingDirection\n    }, React.createElement(MainViewContainer, null, this.props.mainView), optionalModal, optionalPopups, React.createElement(AccessibilityAnnouncer_1.default, null));\n  };\n\n  RootView.prototype._determineIfClickOnElement = function (elementReference, eventSource) {\n    try {\n      var element = ReactDOM.findDOMNode(elementReference);\n      var isClickOnElement = !!element && !!eventSource && element.contains(eventSource);\n      return isClickOnElement;\n    } catch (_a) {\n      // Exception is due to race condition with unmounting.\n      return false;\n    }\n  };\n\n  RootView.prototype._requestApplicationIsNotActive = function () {\n    var _this = this;\n\n    this._cancelApplicationIsNotActive();\n\n    this._applicationIsNotActiveTimer = Timers_1.default.setTimeout(function () {\n      _this._applicationIsNotActiveTimer = undefined;\n      _this._applicationIsNotActive = true;\n    }, 100);\n  };\n\n  RootView.prototype._cancelApplicationIsNotActive = function () {\n    if (this._applicationIsNotActiveTimer) {\n      Timers_1.default.clearTimeout(this._applicationIsNotActiveTimer);\n      this._applicationIsNotActiveTimer = undefined;\n    }\n  };\n\n  RootView.prototype._updateKeyboardNavigationState = function (isNavigatingWithKeyboard) {\n    if (this._isNavigatingWithKeyboardUpateTimer) {\n      Timers_1.default.clearTimeout(this._isNavigatingWithKeyboardUpateTimer);\n      this._isNavigatingWithKeyboardUpateTimer = undefined;\n    }\n\n    if (UserInterface_1.default.isNavigatingWithKeyboard() !== isNavigatingWithKeyboard) {\n      UserInterface_1.default.keyboardNavigationEvent.fire(isNavigatingWithKeyboard);\n      var focusClass = isNavigatingWithKeyboard ? this.props.keyBoardFocusOutline : this.props.mouseFocusOutline;\n\n      if (this.state.focusClass !== focusClass) {\n        this.setState({\n          focusClass: focusClass\n        });\n      }\n    }\n  };\n\n  RootView.prototype._onMouseEnter = function (e) {\n    this._stopHidePopupTimer();\n  };\n\n  RootView.prototype._onMouseLeave = function (e) {\n    this._startHidePopupTimer();\n  };\n\n  RootView.prototype._startHidePopupTimer = function () {\n    var _this = this;\n\n    if (this.props.autoDismiss) {\n      // Should we immediately hide it, or did the caller request a delay?\n      if (!_.isUndefined(this.props.autoDismissDelay) && this.props.autoDismissDelay > 0) {\n        this._hidePopupTimer = Timers_1.default.setTimeout(function () {\n          _this._hidePopupTimer = undefined;\n\n          _this._dismissPopup();\n        }, this.props.autoDismissDelay);\n      } else {\n        this._dismissPopup();\n      }\n    }\n  };\n\n  RootView.prototype._stopHidePopupTimer = function () {\n    if (this._hidePopupTimer) {\n      Timers_1.default.clearTimeout(this._hidePopupTimer);\n      this._hidePopupTimer = undefined;\n    }\n  };\n\n  RootView.prototype._dismissPopup = function () {\n    if (this.props.onDismissPopup) {\n      this.props.onDismissPopup();\n    }\n  };\n\n  RootView.prototype._startRepositionPopupTimer = function () {\n    var _this = this;\n\n    this._respositionPopupTimer = Timers_1.default.setInterval(function () {\n      _this._recalcPosition();\n    }, 500);\n  };\n\n  RootView.prototype._stopRepositionPopupTimer = function () {\n    if (this._respositionPopupTimer) {\n      Timers_1.default.clearInterval(this._respositionPopupTimer);\n      this._respositionPopupTimer = undefined;\n    }\n  }; // Recalculates the position and constrained size of the popup based on the current position of the anchor and the\n  // window size. If necessary, it also measures the unconstrained size of the popup.\n\n\n  RootView.prototype._recalcPosition = function () {\n    // Make a copy of the old state.\n    var newState = _.extend({}, this.state);\n\n    if (this.state.isMeasuringPopup) {\n      // Get the width/height of the popup.\n      var popup = this._mountedComponent;\n\n      if (!popup) {\n        return;\n      }\n\n      newState.isMeasuringPopup = false;\n      newState.popupHeight = popup.clientHeight;\n      newState.popupWidth = popup.clientWidth;\n    } // Get the anchor element.\n\n\n    var anchorComponent = this.props.activePopup.popupOptions.getAnchor(); // if the anchor is unmounted, dismiss the popup.\n    // Prevents app crash when we try to get dom node from unmounted Component\n\n    if (!anchorComponent) {\n      this._dismissPopup();\n\n      return;\n    }\n\n    var anchor = null;\n\n    try {\n      anchor = ReactDOM.findDOMNode(anchorComponent);\n    } catch (_a) {\n      anchor = null;\n    } // If the anchor has disappeared, dismiss the popup.\n\n\n    if (!anchor) {\n      this._dismissPopup();\n\n      return;\n    } // Calculate the absolute position of the anchor element's top/left.\n\n\n    var anchorRect = anchor.getBoundingClientRect();\n    var popupDims = {\n      width: newState.popupWidth,\n      height: newState.popupHeight\n    }; // Get the width/height of root view window.\n\n    var windowDims = {\n      width: window.innerWidth,\n      height: window.innerHeight\n    }; // Run the common recalc function and see what magic it spits out.\n\n    var result = PopupContainerViewBase_1.recalcPositionFromLayoutData(windowDims, anchorRect, popupDims, this.props.activePopup.popupOptions.positionPriorities, this.props.activePopup.popupOptions.useInnerPositioning);\n\n    if (!result) {\n      this._dismissPopup();\n\n      return;\n    }\n\n    _.extend(newState, result);\n\n    if (!_.isEqual(newState, this.state)) {\n      this.setState(newState);\n    }\n  };\n\n  RootView.childContextTypes = {\n    focusManager: PropTypes.object\n  };\n  return RootView;\n}(React.Component);\n\nexports.RootView = RootView;\nexports.default = RootView;","map":{"version":3,"sources":["/Users/dangthang/Desktop/webStreamGame/node_modules/react-ult/dist/web/RootView.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__","constructor","create","defineProperty","exports","value","RootView","MainViewContainer","PopupDescriptor","PropTypes","require","React","ReactDOM","PopupContainerViewBase_1","Timers_1","AccessibilityAnnouncer_1","FocusManager_1","Input_1","_","ModalContainer_1","PopupContainerView_1","UserInterface_1","popupId","popupOptions","_rightClickButtonCode","KEY_CODE_TAB","KEY_CODE_ESC","document","defaultBoxSizing","style","createElement","type","appendChild","createTextNode","head","_super","apply","arguments","getChildContext","isInRxMainView","render","props","children","childContextTypes","bool","Component","_this","_clickHandlerInstalled","_keyboardHandlerInstalled","_shouldEnableKeyboardNavigationModeOnFocus","_applicationIsNotActive","_onMount","component","domNode","findDOMNode","_mountedComponent","undefined","_tryClosePopup","e","popupContainer","clickInPopup","el","target","parentElement","button","defer","activePopup","anchorReference","getAnchor","isClickOnAnchor","_determineIfClickOnElement","srcElement","isClickOnContainer","getElementTriggeringPopup","containerRef","onAnchorPressed","default","setTimeout","dismissIfShown","preventDismissOnPress","_dismissPopup","_onMouseDownCapture","clientX","clientY","screenX","screenY","_updateKeyboardNavigationState","_onKeyDownCapture","keyCode","activeElement_1","activeElement","_isNavigatingWithKeyboardUpateTimer","clearTimeout","body","_onFocusIn","_cancelApplicationIsNotActive","_updateKeyboardNavigationModeOnFocusTimer","prev","_prevFocusedElement","curShouldEnable","getLastFocusedProgrammatically","isNavigatingWithKeyboard","_onFocusOut","_requestApplicationIsNotActive","_onKeyDown","dispatchKeyDown","_onKeyUp","stopPropagation","dispatchKeyUp","state","_getInitialState","_focusManager","focusManager","isMeasuringPopup","anchorPosition","anchorOffset","popupY","popupX","popupWidth","popupHeight","constrainedPopupWidth","constrainedPopupHeight","focusClass","mouseFocusOutline","UNSAFE_componentWillReceiveProps","prevProps","_stopHidePopupTimer","setState","componentDidUpdate","prevState","_recalcPosition","_respositionPopupTimer","_startRepositionPopupTimer","_startHidePopupTimer","addEventListener","_stopRepositionPopupTimer","removeEventListener","componentDidMount","window","componentWillUnmount","_renderPopup","popup","hidden","popupContainerStyle","display","position","zIndex","top","left","width","height","key","cacheable","renderedPopup","renderPopup","ref","onMouseEnter","_onMouseEnter","onMouseLeave","_onMouseLeave","rootViewStyle","cursor","optionalPopups","push","cachedPopup","forEach","optionalModal","modal","className","dir","writingDirection","mainView","elementReference","eventSource","element","isClickOnElement","contains","_a","_applicationIsNotActiveTimer","keyboardNavigationEvent","fire","keyBoardFocusOutline","autoDismiss","isUndefined","autoDismissDelay","_hidePopupTimer","onDismissPopup","setInterval","clearInterval","newState","extend","clientHeight","clientWidth","anchorComponent","anchor","anchorRect","getBoundingClientRect","popupDims","windowDims","innerWidth","innerHeight","result","recalcPositionFromLayoutData","positionPriorities","useInnerPositioning","isEqual","object"],"mappings":"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","sourcesContent":["\"use strict\";\r\n/**\r\n * RootView.tsx\r\n *\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT license.\r\n *\r\n * The top-most view (rendered into window.body) that's used for proper\r\n * layering or modals, etc. in the web implementation of the ReactXP\r\n * cross-platform library.\r\n */\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.RootView = exports.MainViewContainer = exports.PopupDescriptor = void 0;\r\nvar PropTypes = require(\"prop-types\");\r\nvar React = require(\"react\");\r\nvar ReactDOM = require(\"react-dom\");\r\nvar PopupContainerViewBase_1 = require(\"../common/PopupContainerViewBase\");\r\nvar Timers_1 = require(\"../common/utils/Timers\");\r\nvar AccessibilityAnnouncer_1 = require(\"./AccessibilityAnnouncer\");\r\nvar FocusManager_1 = require(\"./utils/FocusManager\");\r\nvar Input_1 = require(\"./Input\");\r\nvar _ = require(\"./utils/lodashMini\");\r\nvar ModalContainer_1 = require(\"./ModalContainer\");\r\nvar PopupContainerView_1 = require(\"./PopupContainerView\");\r\nvar UserInterface_1 = require(\"./UserInterface\");\r\nvar PopupDescriptor = /** @class */ (function () {\r\n    function PopupDescriptor(popupId, popupOptions) {\r\n        this.popupId = popupId;\r\n        this.popupOptions = popupOptions;\r\n    }\r\n    return PopupDescriptor;\r\n}());\r\nexports.PopupDescriptor = PopupDescriptor;\r\n// Button code for when right click is pressed in a mouse event\r\nvar _rightClickButtonCode = 2;\r\nvar KEY_CODE_TAB = 9;\r\nvar KEY_CODE_ESC = 27;\r\n// Setting the expected default box-sizing for everything.\r\nif (typeof document !== 'undefined') {\r\n    var defaultBoxSizing = '*, *:before, *:after { box-sizing: border-box; }';\r\n    var style = document.createElement('style');\r\n    style.type = 'text/css';\r\n    style.appendChild(document.createTextNode(defaultBoxSizing));\r\n    document.head.appendChild(style);\r\n}\r\n// This helper class wraps the main view and passes a boolean value\r\n// \"isInRxMainView\" to all children found within it. This is used to\r\n// prevent gesture handling within the main view when a modal is displayed.\r\nvar MainViewContainer = /** @class */ (function (_super) {\r\n    __extends(MainViewContainer, _super);\r\n    function MainViewContainer() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    MainViewContainer.prototype.getChildContext = function () {\r\n        return {\r\n            isInRxMainView: true,\r\n        };\r\n    };\r\n    MainViewContainer.prototype.render = function () {\r\n        return (this.props.children);\r\n    };\r\n    MainViewContainer.childContextTypes = {\r\n        isInRxMainView: PropTypes.bool,\r\n    };\r\n    return MainViewContainer;\r\n}(React.Component));\r\nexports.MainViewContainer = MainViewContainer;\r\nvar RootView = /** @class */ (function (_super) {\r\n    __extends(RootView, _super);\r\n    function RootView(props) {\r\n        var _this = _super.call(this, props) || this;\r\n        _this._clickHandlerInstalled = false;\r\n        _this._keyboardHandlerInstalled = false;\r\n        _this._shouldEnableKeyboardNavigationModeOnFocus = false;\r\n        _this._applicationIsNotActive = false;\r\n        _this._onMount = function (component) {\r\n            var domNode = component && ReactDOM.findDOMNode(component);\r\n            _this._mountedComponent = domNode ? domNode : undefined;\r\n        };\r\n        _this._tryClosePopup = function (e) {\r\n            // Dismiss a visible popup if there's a click outside.\r\n            var popupContainer = _this._mountedComponent;\r\n            if (!popupContainer) {\r\n                return;\r\n            }\r\n            var clickInPopup = false;\r\n            var el = e.target;\r\n            while (el) {\r\n                if (el === popupContainer) {\r\n                    clickInPopup = true;\r\n                    break;\r\n                }\r\n                el = el.parentElement || undefined;\r\n            }\r\n            if (!clickInPopup && e.button !== _rightClickButtonCode) {\r\n                _.defer(function () {\r\n                    if (_this.props.activePopup) {\r\n                        var anchorReference = _this.props.activePopup.popupOptions.getAnchor();\r\n                        var isClickOnAnchor = _this._determineIfClickOnElement(anchorReference, e.srcElement);\r\n                        var isClickOnContainer = false;\r\n                        if (!isClickOnAnchor && _this.props.activePopup.popupOptions.getElementTriggeringPopup) {\r\n                            var containerRef = _this.props.activePopup.popupOptions.getElementTriggeringPopup();\r\n                            isClickOnContainer = _this._determineIfClickOnElement(containerRef, e.srcElement);\r\n                        }\r\n                        if (isClickOnAnchor || isClickOnContainer) {\r\n                            // If the press event was on the anchor, we can notify the caller about it.\r\n                            // Showing another animation while dimissing the popup creates a conflict in the UI making it not doing one of the\r\n                            // two animations (i.e.: Opening an actionsheet while dismissing a popup). We introduce this delay to make sure\r\n                            // the popup dimissing animation has finished before we call the event handler.\r\n                            if (_this.props.activePopup.popupOptions.onAnchorPressed) {\r\n                                Timers_1.default.setTimeout(function () {\r\n                                    // We can't pass through the DOM event argument to the anchor event handler as the event we have at this\r\n                                    // point is a DOM Event and the anchor expect a Synthetic event. There doesn't seem to be any way to convert\r\n                                    // between them. Passing null for now.\r\n                                    _this.props.activePopup.popupOptions.onAnchorPressed(undefined);\r\n                                }, 500);\r\n                            }\r\n                            // If the popup is meant to behave like a toggle, we should not dimiss the popup from here since the event came\r\n                            // from the anchor/container of the popup. The popup will be dismissed during the click handling of the\r\n                            // anchor/container.\r\n                            if (_this.props.activePopup.popupOptions.dismissIfShown) {\r\n                                return;\r\n                            }\r\n                        }\r\n                        if (_this.props.activePopup.popupOptions.preventDismissOnPress) {\r\n                            return;\r\n                        }\r\n                    }\r\n                    _this._dismissPopup();\r\n                });\r\n            }\r\n        };\r\n        _this._onMouseDownCapture = function (e) {\r\n            if (e &&\r\n                (e.clientX === 0) && (e.clientY === 0) &&\r\n                (e.screenX === 0) && (e.screenY === 0)) {\r\n                // This is most likely an event triggered by NVDA when Enter or\r\n                // Space is pressed, do not dismiss the keyboard navigation mode.\r\n                return;\r\n            }\r\n            _this._shouldEnableKeyboardNavigationModeOnFocus = false;\r\n            _this._updateKeyboardNavigationState(false);\r\n        };\r\n        _this._onKeyDownCapture = function (e) {\r\n            if (e.keyCode === KEY_CODE_TAB) {\r\n                _this._updateKeyboardNavigationState(true);\r\n            }\r\n            if (e.keyCode === KEY_CODE_ESC) {\r\n                // If Esc is pressed and the focused element stays the same after some time,\r\n                // switch the keyboard navigation off to dismiss the outline.\r\n                var activeElement_1 = document.activeElement;\r\n                if (_this._isNavigatingWithKeyboardUpateTimer) {\r\n                    Timers_1.default.clearTimeout(_this._isNavigatingWithKeyboardUpateTimer);\r\n                }\r\n                _this._isNavigatingWithKeyboardUpateTimer = Timers_1.default.setTimeout(function () {\r\n                    _this._isNavigatingWithKeyboardUpateTimer = undefined;\r\n                    if ((document.activeElement === activeElement_1) && activeElement_1 && (activeElement_1 !== document.body)) {\r\n                        _this._updateKeyboardNavigationState(false);\r\n                    }\r\n                }, 500);\r\n            }\r\n        };\r\n        _this._onFocusIn = function (e) {\r\n            // When the screen reader is being used, we need to enable the keyboard navigation\r\n            // mode. It's not possible to detect the screen reader on web. To work it around we\r\n            // apply the following assumption: if the focus is moved without using the mouse and\r\n            // not from the application code with focus() method, it is most likely moved by the\r\n            // screen reader.\r\n            _this._cancelApplicationIsNotActive();\r\n            var target = e.target;\r\n            if (_this._updateKeyboardNavigationModeOnFocusTimer) {\r\n                Timers_1.default.clearTimeout(_this._updateKeyboardNavigationModeOnFocusTimer);\r\n            }\r\n            _this._updateKeyboardNavigationModeOnFocusTimer = Timers_1.default.setTimeout(function () {\r\n                _this._updateKeyboardNavigationModeOnFocusTimer = undefined;\r\n                var prev = _this._prevFocusedElement;\r\n                var curShouldEnable = _this._shouldEnableKeyboardNavigationModeOnFocus;\r\n                _this._prevFocusedElement = target;\r\n                _this._shouldEnableKeyboardNavigationModeOnFocus = true;\r\n                if (_this._applicationIsNotActive) {\r\n                    _this._applicationIsNotActive = false;\r\n                    return;\r\n                }\r\n                if ((prev === target) || (target === FocusManager_1.default.getLastFocusedProgrammatically(true))) {\r\n                    return;\r\n                }\r\n                if (!UserInterface_1.default.isNavigatingWithKeyboard() && curShouldEnable) {\r\n                    _this._updateKeyboardNavigationState(true);\r\n                }\r\n            }, 0);\r\n        };\r\n        _this._onFocusOut = function (e) {\r\n            // If the focus is out and nothing is focused after some time, most likely\r\n            // the application has been deactivated, so the next focusin will be about\r\n            // activating the application back again and should be ignored.\r\n            // This is a safety pillow for checking that _prevFocusedElement is changed,\r\n            // as _prevFocusedElement might be gone while the application is not active.\r\n            _this._requestApplicationIsNotActive();\r\n        };\r\n        _this._onKeyDown = function (e) {\r\n            Input_1.default.dispatchKeyDown(e);\r\n        };\r\n        _this._onKeyUp = function (e) {\r\n            if (_this.props.activePopup && (e.keyCode === KEY_CODE_ESC)) {\r\n                if (e.stopPropagation) {\r\n                    e.stopPropagation();\r\n                }\r\n                _this._dismissPopup();\r\n                return;\r\n            }\r\n            Input_1.default.dispatchKeyUp(e);\r\n        };\r\n        _this.state = _this._getInitialState();\r\n        // Initialize the root FocusManager which is aware of all\r\n        // focusable elements.\r\n        _this._focusManager = new FocusManager_1.default(undefined);\r\n        return _this;\r\n    }\r\n    RootView.prototype.getChildContext = function () {\r\n        // Provide the context with root FocusManager to all descendants.\r\n        return {\r\n            focusManager: this._focusManager,\r\n        };\r\n    };\r\n    RootView.prototype._getInitialState = function () {\r\n        return {\r\n            isMeasuringPopup: true,\r\n            anchorPosition: 'left',\r\n            anchorOffset: 0,\r\n            popupY: 0,\r\n            popupX: 0,\r\n            popupWidth: 0,\r\n            popupHeight: 0,\r\n            constrainedPopupWidth: 0,\r\n            constrainedPopupHeight: 0,\r\n            focusClass: this.props.mouseFocusOutline,\r\n        };\r\n    };\r\n    RootView.prototype.UNSAFE_componentWillReceiveProps = function (prevProps) {\r\n        if (this.props.activePopup !== prevProps.activePopup) {\r\n            this._stopHidePopupTimer();\r\n            // If the popup changes, reset our state.\r\n            this.setState(this._getInitialState());\r\n        }\r\n    };\r\n    RootView.prototype.componentDidUpdate = function (prevProps, prevState) {\r\n        if (this.props.activePopup) {\r\n            this._stopHidePopupTimer();\r\n            this._recalcPosition();\r\n            if (!this._respositionPopupTimer) {\r\n                this._startRepositionPopupTimer();\r\n            }\r\n            this._startHidePopupTimer();\r\n            if (!this._clickHandlerInstalled) {\r\n                document.addEventListener('mousedown', this._tryClosePopup);\r\n                document.addEventListener('touchstart', this._tryClosePopup);\r\n                this._clickHandlerInstalled = true;\r\n            }\r\n        }\r\n        else {\r\n            this._stopRepositionPopupTimer();\r\n            if (this._clickHandlerInstalled) {\r\n                document.removeEventListener('mousedown', this._tryClosePopup);\r\n                document.removeEventListener('touchstart', this._tryClosePopup);\r\n                this._clickHandlerInstalled = false;\r\n            }\r\n        }\r\n    };\r\n    RootView.prototype.componentDidMount = function () {\r\n        if (this.props.activePopup) {\r\n            this._recalcPosition();\r\n        }\r\n        if (this.props.activePopup) {\r\n            this._startRepositionPopupTimer();\r\n        }\r\n        if (!this._keyboardHandlerInstalled) {\r\n            window.addEventListener('keydown', this._onKeyDown);\r\n            window.addEventListener('keyup', this._onKeyUp);\r\n            window.addEventListener('keydown', this._onKeyDownCapture, true); // Capture!\r\n            window.addEventListener('mousedown', this._onMouseDownCapture, true); // Capture!\r\n            window.addEventListener('focusin', this._onFocusIn);\r\n            window.addEventListener('focusout', this._onFocusOut);\r\n            this._keyboardHandlerInstalled = true;\r\n        }\r\n    };\r\n    RootView.prototype.componentWillUnmount = function () {\r\n        this._stopHidePopupTimer();\r\n        this._stopRepositionPopupTimer();\r\n        if (this._keyboardHandlerInstalled) {\r\n            window.removeEventListener('keydown', this._onKeyDown);\r\n            window.removeEventListener('keyup', this._onKeyUp);\r\n            window.removeEventListener('keydown', this._onKeyDownCapture, true);\r\n            window.removeEventListener('mousedown', this._onMouseDownCapture, true);\r\n            window.removeEventListener('focusin', this._onFocusIn);\r\n            window.removeEventListener('focusout', this._onFocusOut);\r\n            this._keyboardHandlerInstalled = false;\r\n        }\r\n    };\r\n    RootView.prototype._renderPopup = function (popup, hidden) {\r\n        var _this = this;\r\n        var popupContainerStyle = {\r\n            display: 'flex',\r\n            position: 'fixed',\r\n            zIndex: 100001,\r\n        };\r\n        if (!hidden) {\r\n            popupContainerStyle.top = this.state.popupY;\r\n            popupContainerStyle.left = this.state.popupX;\r\n            // Are we artificially constraining the width and/or height?\r\n            if (this.state.constrainedPopupWidth && this.state.constrainedPopupWidth !== this.state.popupWidth) {\r\n                popupContainerStyle.width = this.state.constrainedPopupWidth;\r\n            }\r\n            if (this.state.constrainedPopupHeight && this.state.constrainedPopupHeight !== this.state.popupHeight) {\r\n                popupContainerStyle.height = this.state.constrainedPopupHeight;\r\n            }\r\n        }\r\n        var key = (popup.popupOptions.cacheable ? 'CP:' : 'P:') + popup.popupId;\r\n        var renderedPopup = (hidden ?\r\n            popup.popupOptions.renderPopup('top', 0, 0, 0) :\r\n            popup.popupOptions.renderPopup(this.state.anchorPosition, this.state.anchorOffset, this.state.constrainedPopupWidth, this.state.constrainedPopupHeight));\r\n        return (React.createElement(PopupContainerView_1.default, { key: key, style: popupContainerStyle, hidden: hidden, ref: hidden ? undefined : this._onMount, onMouseEnter: function (e) { return _this._onMouseEnter(e); }, onMouseLeave: function (e) { return _this._onMouseLeave(e); } }, renderedPopup));\r\n    };\r\n    RootView.prototype.render = function () {\r\n        var _this = this;\r\n        var rootViewStyle = {\r\n            width: '100%',\r\n            height: '100%',\r\n            display: 'flex',\r\n            cursor: 'default',\r\n        };\r\n        var optionalPopups = [];\r\n        if (this.props.activePopup) {\r\n            optionalPopups.push(this._renderPopup(this.props.activePopup, false));\r\n        }\r\n        if (this.props.cachedPopup) {\r\n            this.props.cachedPopup.forEach(function (popup) { return optionalPopups.push(_this._renderPopup(popup, true)); });\r\n        }\r\n        var optionalModal = null;\r\n        if (this.props.modal) {\r\n            optionalModal = (React.createElement(ModalContainer_1.default, null, this.props.modal));\r\n        }\r\n        return (React.createElement(\"div\", { className: this.state.focusClass, style: rootViewStyle, dir: this.props.writingDirection },\r\n            React.createElement(MainViewContainer, null, this.props.mainView),\r\n            optionalModal,\r\n            optionalPopups,\r\n            React.createElement(AccessibilityAnnouncer_1.default, null)));\r\n    };\r\n    RootView.prototype._determineIfClickOnElement = function (elementReference, eventSource) {\r\n        try {\r\n            var element = ReactDOM.findDOMNode(elementReference);\r\n            var isClickOnElement = !!element && !!eventSource && element.contains(eventSource);\r\n            return isClickOnElement;\r\n        }\r\n        catch (_a) {\r\n            // Exception is due to race condition with unmounting.\r\n            return false;\r\n        }\r\n    };\r\n    RootView.prototype._requestApplicationIsNotActive = function () {\r\n        var _this = this;\r\n        this._cancelApplicationIsNotActive();\r\n        this._applicationIsNotActiveTimer = Timers_1.default.setTimeout(function () {\r\n            _this._applicationIsNotActiveTimer = undefined;\r\n            _this._applicationIsNotActive = true;\r\n        }, 100);\r\n    };\r\n    RootView.prototype._cancelApplicationIsNotActive = function () {\r\n        if (this._applicationIsNotActiveTimer) {\r\n            Timers_1.default.clearTimeout(this._applicationIsNotActiveTimer);\r\n            this._applicationIsNotActiveTimer = undefined;\r\n        }\r\n    };\r\n    RootView.prototype._updateKeyboardNavigationState = function (isNavigatingWithKeyboard) {\r\n        if (this._isNavigatingWithKeyboardUpateTimer) {\r\n            Timers_1.default.clearTimeout(this._isNavigatingWithKeyboardUpateTimer);\r\n            this._isNavigatingWithKeyboardUpateTimer = undefined;\r\n        }\r\n        if (UserInterface_1.default.isNavigatingWithKeyboard() !== isNavigatingWithKeyboard) {\r\n            UserInterface_1.default.keyboardNavigationEvent.fire(isNavigatingWithKeyboard);\r\n            var focusClass = isNavigatingWithKeyboard ? this.props.keyBoardFocusOutline : this.props.mouseFocusOutline;\r\n            if (this.state.focusClass !== focusClass) {\r\n                this.setState({ focusClass: focusClass });\r\n            }\r\n        }\r\n    };\r\n    RootView.prototype._onMouseEnter = function (e) {\r\n        this._stopHidePopupTimer();\r\n    };\r\n    RootView.prototype._onMouseLeave = function (e) {\r\n        this._startHidePopupTimer();\r\n    };\r\n    RootView.prototype._startHidePopupTimer = function () {\r\n        var _this = this;\r\n        if (this.props.autoDismiss) {\r\n            // Should we immediately hide it, or did the caller request a delay?\r\n            if (!_.isUndefined(this.props.autoDismissDelay) && this.props.autoDismissDelay > 0) {\r\n                this._hidePopupTimer = Timers_1.default.setTimeout(function () {\r\n                    _this._hidePopupTimer = undefined;\r\n                    _this._dismissPopup();\r\n                }, this.props.autoDismissDelay);\r\n            }\r\n            else {\r\n                this._dismissPopup();\r\n            }\r\n        }\r\n    };\r\n    RootView.prototype._stopHidePopupTimer = function () {\r\n        if (this._hidePopupTimer) {\r\n            Timers_1.default.clearTimeout(this._hidePopupTimer);\r\n            this._hidePopupTimer = undefined;\r\n        }\r\n    };\r\n    RootView.prototype._dismissPopup = function () {\r\n        if (this.props.onDismissPopup) {\r\n            this.props.onDismissPopup();\r\n        }\r\n    };\r\n    RootView.prototype._startRepositionPopupTimer = function () {\r\n        var _this = this;\r\n        this._respositionPopupTimer = Timers_1.default.setInterval(function () {\r\n            _this._recalcPosition();\r\n        }, 500);\r\n    };\r\n    RootView.prototype._stopRepositionPopupTimer = function () {\r\n        if (this._respositionPopupTimer) {\r\n            Timers_1.default.clearInterval(this._respositionPopupTimer);\r\n            this._respositionPopupTimer = undefined;\r\n        }\r\n    };\r\n    // Recalculates the position and constrained size of the popup based on the current position of the anchor and the\r\n    // window size. If necessary, it also measures the unconstrained size of the popup.\r\n    RootView.prototype._recalcPosition = function () {\r\n        // Make a copy of the old state.\r\n        var newState = _.extend({}, this.state);\r\n        if (this.state.isMeasuringPopup) {\r\n            // Get the width/height of the popup.\r\n            var popup = this._mountedComponent;\r\n            if (!popup) {\r\n                return;\r\n            }\r\n            newState.isMeasuringPopup = false;\r\n            newState.popupHeight = popup.clientHeight;\r\n            newState.popupWidth = popup.clientWidth;\r\n        }\r\n        // Get the anchor element.\r\n        var anchorComponent = this.props.activePopup.popupOptions.getAnchor();\r\n        // if the anchor is unmounted, dismiss the popup.\r\n        // Prevents app crash when we try to get dom node from unmounted Component\r\n        if (!anchorComponent) {\r\n            this._dismissPopup();\r\n            return;\r\n        }\r\n        var anchor = null;\r\n        try {\r\n            anchor = ReactDOM.findDOMNode(anchorComponent);\r\n        }\r\n        catch (_a) {\r\n            anchor = null;\r\n        }\r\n        // If the anchor has disappeared, dismiss the popup.\r\n        if (!anchor) {\r\n            this._dismissPopup();\r\n            return;\r\n        }\r\n        // Calculate the absolute position of the anchor element's top/left.\r\n        var anchorRect = anchor.getBoundingClientRect();\r\n        var popupDims = { width: newState.popupWidth, height: newState.popupHeight };\r\n        // Get the width/height of root view window.\r\n        var windowDims = { width: window.innerWidth, height: window.innerHeight };\r\n        // Run the common recalc function and see what magic it spits out.\r\n        var result = PopupContainerViewBase_1.recalcPositionFromLayoutData(windowDims, anchorRect, popupDims, this.props.activePopup.popupOptions.positionPriorities, this.props.activePopup.popupOptions.useInnerPositioning);\r\n        if (!result) {\r\n            this._dismissPopup();\r\n            return;\r\n        }\r\n        _.extend(newState, result);\r\n        if (!_.isEqual(newState, this.state)) {\r\n            this.setState(newState);\r\n        }\r\n    };\r\n    RootView.childContextTypes = {\r\n        focusManager: PropTypes.object,\r\n    };\r\n    return RootView;\r\n}(React.Component));\r\nexports.RootView = RootView;\r\nexports.default = RootView;\r\n"]},"metadata":{},"sourceType":"script"}