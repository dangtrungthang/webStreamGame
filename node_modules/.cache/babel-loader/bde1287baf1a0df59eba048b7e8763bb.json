{"ast":null,"code":"\"use strict\";\n/**\r\n * Location.ts\r\n *\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT license.\r\n *\r\n * Methods to fetch the user's location.\r\n */\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Location = void 0;\n\nvar RX = require(\"./Interfaces\");\n\nvar PromiseDefer_1 = require(\"./utils/PromiseDefer\");\n\nvar Location =\n/** @class */\nfunction (_super) {\n  __extends(Location, _super);\n\n  function Location() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Location.prototype.setConfiguration = function (config) {\n    if (this.isAvailable()) {\n      // Work around the fact \"geolocation\" type definition in ES6 lib\n      // doesn't declare the RN-specific setRNConfiguration setter.\n      var configSetter = navigator.geolocation.setRNConfiguration;\n\n      if (configSetter) {\n        configSetter(config);\n      }\n    }\n  }; // Check if a geolocation service is available.\n\n\n  Location.prototype.isAvailable = function () {\n    return !!('geolocation' in navigator);\n  }; // Get the current location of the user. This method returns a promise that either\n  // resolves to the position or rejects with an error code.\n\n\n  Location.prototype.getCurrentPosition = function (options) {\n    if (!this.isAvailable()) {\n      var error = {\n        code: RX.Types.LocationErrorType.PositionUnavailable,\n        message: 'Position unavailable because device does not support it.',\n        PERMISSION_DENIED: 0,\n        POSITION_UNAVAILABLE: 1,\n        TIMEOUT: 0\n      };\n      return Promise.reject(error);\n    }\n\n    var deferred = new PromiseDefer_1.Defer();\n    var reportedError = false;\n    navigator.geolocation.getCurrentPosition(function (position) {\n      deferred.resolve(position);\n    }, function (error) {\n      // We need to protect against a known bug on some platforms where\n      // a timeout error is reported after other types of errors (e.g.\n      // the user hasn't granted access).\n      if (!reportedError) {\n        deferred.reject(error);\n        reportedError = true;\n      }\n    }, options);\n    return deferred.promise();\n  }; // Get the current location of the user on a repeating basis. This method returns\n  // a promise that resolves to a watcher id or rejects with an error code. If resolved,\n  // future locations and errors will be piped through the provided callbacks.\n\n\n  Location.prototype.watchPosition = function (successCallback, errorCallback, options) {\n    if (!this.isAvailable()) {\n      return Promise.reject(RX.Types.LocationErrorType.PositionUnavailable);\n    }\n\n    var watchId = navigator.geolocation.watchPosition(function (position) {\n      successCallback(position);\n    }, function (error) {\n      if (errorCallback) {\n        errorCallback(error.code);\n      }\n    }, options);\n    return Promise.resolve(watchId);\n  }; // Clears a location watcher from watchPosition.\n\n\n  Location.prototype.clearWatch = function (watchID) {\n    navigator.geolocation.clearWatch(watchID);\n  };\n\n  return Location;\n}(RX.Location);\n\nexports.Location = Location;\nexports.default = new Location();","map":{"version":3,"sources":["/Users/dangthang/Desktop/webStreamGame/node_modules/react-ult/dist/common/Location.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__","constructor","create","defineProperty","exports","value","Location","RX","require","PromiseDefer_1","_super","apply","arguments","setConfiguration","config","isAvailable","configSetter","navigator","geolocation","setRNConfiguration","getCurrentPosition","options","error","code","Types","LocationErrorType","PositionUnavailable","message","PERMISSION_DENIED","POSITION_UNAVAILABLE","TIMEOUT","Promise","reject","deferred","Defer","reportedError","position","resolve","promise","watchPosition","successCallback","errorCallback","watchId","clearWatch","watchID","default"],"mappings":"AAAA;AACA;;;;;;;;;AAQA,IAAIA,SAAS,GAAI,QAAQ,KAAKA,SAAd,IAA6B,YAAY;AACrD,MAAIC,aAAa,GAAG,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAChCF,IAAAA,aAAa,GAAGG,MAAM,CAACC,cAAP,IACX;AAAEC,MAAAA,SAAS,EAAE;AAAb,iBAA6BC,KAA7B,IAAsC,UAAUL,CAAV,EAAaC,CAAb,EAAgB;AAAED,MAAAA,CAAC,CAACI,SAAF,GAAcH,CAAd;AAAkB,KAD/D,IAEZ,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AAAE,WAAK,IAAIK,CAAT,IAAcL,CAAd,EAAiB,IAAIC,MAAM,CAACK,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCR,CAArC,EAAwCK,CAAxC,CAAJ,EAAgDN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;AAAc,KAFrG;;AAGA,WAAOP,aAAa,CAACC,CAAD,EAAIC,CAAJ,CAApB;AACH,GALD;;AAMA,SAAO,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AACnBF,IAAAA,aAAa,CAACC,CAAD,EAAIC,CAAJ,CAAb;;AACA,aAASS,EAAT,GAAc;AAAE,WAAKC,WAAL,GAAmBX,CAAnB;AAAuB;;AACvCA,IAAAA,CAAC,CAACO,SAAF,GAAcN,CAAC,KAAK,IAAN,GAAaC,MAAM,CAACU,MAAP,CAAcX,CAAd,CAAb,IAAiCS,EAAE,CAACH,SAAH,GAAeN,CAAC,CAACM,SAAjB,EAA4B,IAAIG,EAAJ,EAA7D,CAAd;AACH,GAJD;AAKH,CAZ2C,EAA5C;;AAaAR,MAAM,CAACW,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,QAAR,GAAmB,KAAK,CAAxB;;AACA,IAAIC,EAAE,GAAGC,OAAO,CAAC,cAAD,CAAhB;;AACA,IAAIC,cAAc,GAAGD,OAAO,CAAC,sBAAD,CAA5B;;AACA,IAAIF,QAAQ;AAAG;AAAe,UAAUI,MAAV,EAAkB;AAC5CtB,EAAAA,SAAS,CAACkB,QAAD,EAAWI,MAAX,CAAT;;AACA,WAASJ,QAAT,GAAoB;AAChB,WAAOI,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACC,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAnB,IAAoD,IAA3D;AACH;;AACDN,EAAAA,QAAQ,CAACT,SAAT,CAAmBgB,gBAAnB,GAAsC,UAAUC,MAAV,EAAkB;AACpD,QAAI,KAAKC,WAAL,EAAJ,EAAwB;AACpB;AACA;AACA,UAAIC,YAAY,GAAGC,SAAS,CAACC,WAAV,CAAsBC,kBAAzC;;AACA,UAAIH,YAAJ,EAAkB;AACdA,QAAAA,YAAY,CAACF,MAAD,CAAZ;AACH;AACJ;AACJ,GATD,CAL4C,CAe5C;;;AACAR,EAAAA,QAAQ,CAACT,SAAT,CAAmBkB,WAAnB,GAAiC,YAAY;AACzC,WAAO,CAAC,EAAE,iBAAiBE,SAAnB,CAAR;AACH,GAFD,CAhB4C,CAmB5C;AACA;;;AACAX,EAAAA,QAAQ,CAACT,SAAT,CAAmBuB,kBAAnB,GAAwC,UAAUC,OAAV,EAAmB;AACvD,QAAI,CAAC,KAAKN,WAAL,EAAL,EAAyB;AACrB,UAAIO,KAAK,GAAG;AACRC,QAAAA,IAAI,EAAEhB,EAAE,CAACiB,KAAH,CAASC,iBAAT,CAA2BC,mBADzB;AAERC,QAAAA,OAAO,EAAE,0DAFD;AAGRC,QAAAA,iBAAiB,EAAE,CAHX;AAIRC,QAAAA,oBAAoB,EAAE,CAJd;AAKRC,QAAAA,OAAO,EAAE;AALD,OAAZ;AAOA,aAAOC,OAAO,CAACC,MAAR,CAAeV,KAAf,CAAP;AACH;;AACD,QAAIW,QAAQ,GAAG,IAAIxB,cAAc,CAACyB,KAAnB,EAAf;AACA,QAAIC,aAAa,GAAG,KAApB;AACAlB,IAAAA,SAAS,CAACC,WAAV,CAAsBE,kBAAtB,CAAyC,UAAUgB,QAAV,EAAoB;AACzDH,MAAAA,QAAQ,CAACI,OAAT,CAAiBD,QAAjB;AACH,KAFD,EAEG,UAAUd,KAAV,EAAiB;AAChB;AACA;AACA;AACA,UAAI,CAACa,aAAL,EAAoB;AAChBF,QAAAA,QAAQ,CAACD,MAAT,CAAgBV,KAAhB;AACAa,QAAAA,aAAa,GAAG,IAAhB;AACH;AACJ,KAVD,EAUGd,OAVH;AAWA,WAAOY,QAAQ,CAACK,OAAT,EAAP;AACH,GAzBD,CArB4C,CA+C5C;AACA;AACA;;;AACAhC,EAAAA,QAAQ,CAACT,SAAT,CAAmB0C,aAAnB,GAAmC,UAAUC,eAAV,EAA2BC,aAA3B,EAA0CpB,OAA1C,EAAmD;AAClF,QAAI,CAAC,KAAKN,WAAL,EAAL,EAAyB;AACrB,aAAOgB,OAAO,CAACC,MAAR,CAAezB,EAAE,CAACiB,KAAH,CAASC,iBAAT,CAA2BC,mBAA1C,CAAP;AACH;;AACD,QAAIgB,OAAO,GAAGzB,SAAS,CAACC,WAAV,CAAsBqB,aAAtB,CAAoC,UAAUH,QAAV,EAAoB;AAClEI,MAAAA,eAAe,CAACJ,QAAD,CAAf;AACH,KAFa,EAEX,UAAUd,KAAV,EAAiB;AAChB,UAAImB,aAAJ,EAAmB;AACfA,QAAAA,aAAa,CAACnB,KAAK,CAACC,IAAP,CAAb;AACH;AACJ,KANa,EAMXF,OANW,CAAd;AAOA,WAAOU,OAAO,CAACM,OAAR,CAAgBK,OAAhB,CAAP;AACH,GAZD,CAlD4C,CA+D5C;;;AACApC,EAAAA,QAAQ,CAACT,SAAT,CAAmB8C,UAAnB,GAAgC,UAAUC,OAAV,EAAmB;AAC/C3B,IAAAA,SAAS,CAACC,WAAV,CAAsByB,UAAtB,CAAiCC,OAAjC;AACH,GAFD;;AAGA,SAAOtC,QAAP;AACH,CApE6B,CAoE5BC,EAAE,CAACD,QApEyB,CAA9B;;AAqEAF,OAAO,CAACE,QAAR,GAAmBA,QAAnB;AACAF,OAAO,CAACyC,OAAR,GAAkB,IAAIvC,QAAJ,EAAlB","sourcesContent":["\"use strict\";\r\n/**\r\n * Location.ts\r\n *\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT license.\r\n *\r\n * Methods to fetch the user's location.\r\n */\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Location = void 0;\r\nvar RX = require(\"./Interfaces\");\r\nvar PromiseDefer_1 = require(\"./utils/PromiseDefer\");\r\nvar Location = /** @class */ (function (_super) {\r\n    __extends(Location, _super);\r\n    function Location() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Location.prototype.setConfiguration = function (config) {\r\n        if (this.isAvailable()) {\r\n            // Work around the fact \"geolocation\" type definition in ES6 lib\r\n            // doesn't declare the RN-specific setRNConfiguration setter.\r\n            var configSetter = navigator.geolocation.setRNConfiguration;\r\n            if (configSetter) {\r\n                configSetter(config);\r\n            }\r\n        }\r\n    };\r\n    // Check if a geolocation service is available.\r\n    Location.prototype.isAvailable = function () {\r\n        return !!('geolocation' in navigator);\r\n    };\r\n    // Get the current location of the user. This method returns a promise that either\r\n    // resolves to the position or rejects with an error code.\r\n    Location.prototype.getCurrentPosition = function (options) {\r\n        if (!this.isAvailable()) {\r\n            var error = {\r\n                code: RX.Types.LocationErrorType.PositionUnavailable,\r\n                message: 'Position unavailable because device does not support it.',\r\n                PERMISSION_DENIED: 0,\r\n                POSITION_UNAVAILABLE: 1,\r\n                TIMEOUT: 0,\r\n            };\r\n            return Promise.reject(error);\r\n        }\r\n        var deferred = new PromiseDefer_1.Defer();\r\n        var reportedError = false;\r\n        navigator.geolocation.getCurrentPosition(function (position) {\r\n            deferred.resolve(position);\r\n        }, function (error) {\r\n            // We need to protect against a known bug on some platforms where\r\n            // a timeout error is reported after other types of errors (e.g.\r\n            // the user hasn't granted access).\r\n            if (!reportedError) {\r\n                deferred.reject(error);\r\n                reportedError = true;\r\n            }\r\n        }, options);\r\n        return deferred.promise();\r\n    };\r\n    // Get the current location of the user on a repeating basis. This method returns\r\n    // a promise that resolves to a watcher id or rejects with an error code. If resolved,\r\n    // future locations and errors will be piped through the provided callbacks.\r\n    Location.prototype.watchPosition = function (successCallback, errorCallback, options) {\r\n        if (!this.isAvailable()) {\r\n            return Promise.reject(RX.Types.LocationErrorType.PositionUnavailable);\r\n        }\r\n        var watchId = navigator.geolocation.watchPosition(function (position) {\r\n            successCallback(position);\r\n        }, function (error) {\r\n            if (errorCallback) {\r\n                errorCallback(error.code);\r\n            }\r\n        }, options);\r\n        return Promise.resolve(watchId);\r\n    };\r\n    // Clears a location watcher from watchPosition.\r\n    Location.prototype.clearWatch = function (watchID) {\r\n        navigator.geolocation.clearWatch(watchID);\r\n    };\r\n    return Location;\r\n}(RX.Location));\r\nexports.Location = Location;\r\nexports.default = new Location();\r\n"]},"metadata":{},"sourceType":"script"}