{"ast":null,"code":"\"use strict\";\n/**\r\n * AutoFocusHelper.ts\r\n *\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT license.\r\n *\r\n * Provides the functions which allow to handle the selection of a proper component\r\n * to focus from the multiple candidates with autoFocus=true.\r\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FocusArbitratorProvider = exports.setSortAndFilterFunc = exports.FocusCandidateType = void 0;\n\nvar Timers_1 = require(\"./Timers\");\n\nvar _sortAndFilter;\n\nvar _autoFocusTimer;\n\nvar _lastFocusArbitratorProviderId = 0;\nvar rootFocusArbitratorProvider; // eslint-disable-line prefer-const\n\nvar FocusCandidateType;\n\n(function (FocusCandidateType) {\n  FocusCandidateType[FocusCandidateType[\"Focus\"] = 1] = \"Focus\";\n  FocusCandidateType[FocusCandidateType[\"FocusFirst\"] = 2] = \"FocusFirst\";\n})(FocusCandidateType = exports.FocusCandidateType || (exports.FocusCandidateType = {}));\n\nfunction setSortAndFilterFunc(sortAndFilter) {\n  _sortAndFilter = sortAndFilter;\n}\n\nexports.setSortAndFilterFunc = setSortAndFilterFunc;\n\nvar FocusArbitratorProvider =\n/** @class */\nfunction () {\n  function FocusArbitratorProvider(view, arbitrator) {\n    this._candidates = [];\n    this._pendingChildren = {};\n    this._id = ++_lastFocusArbitratorProviderId;\n    this._parentArbitratorProvider = view ? view.context && view.context.focusArbitrator || rootFocusArbitratorProvider : undefined;\n    this._arbitratorCallback = arbitrator;\n  }\n\n  FocusArbitratorProvider.prototype._notifyParent = function () {\n    if (this._parentArbitratorProvider) {\n      this._parentArbitratorProvider._pendingChildren['fa-' + this._id.toString()] = this;\n\n      this._parentArbitratorProvider._notifyParent();\n    }\n  };\n\n  FocusArbitratorProvider.prototype._arbitrate = function () {\n    var _this = this;\n\n    var candidates = this._candidates;\n    Object.keys(this._pendingChildren).forEach(function (key) {\n      var candidate = _this._pendingChildren[key]._arbitrate();\n\n      if (candidate) {\n        candidates.push(candidate);\n      }\n    });\n    this._candidates = [];\n    this._pendingChildren = {};\n    return FocusArbitratorProvider._arbitrate(candidates, this._arbitratorCallback);\n  };\n\n  FocusArbitratorProvider.prototype._requestFocus = function (component, focus, isAvailable, type) {\n    var accessibilityId = component.props && component.props.accessibilityId;\n\n    this._candidates.push({\n      component: component,\n      focus: focus,\n      isAvailable: isAvailable,\n      type: type,\n      accessibilityId: accessibilityId\n    });\n\n    this._notifyParent();\n  };\n\n  FocusArbitratorProvider._arbitrate = function (candidates, arbitrator) {\n    // Filtering out everything which is already unmounted.\n    candidates = candidates.filter(function (item) {\n      return item.isAvailable();\n    });\n\n    if (_sortAndFilter) {\n      candidates = _sortAndFilter(candidates);\n    }\n\n    for (var i = 0; i < candidates.length; i++) {\n      if (candidates[i].type === FocusCandidateType.FocusFirst) {\n        return candidates[i];\n      }\n    }\n\n    if (arbitrator) {\n      // There is an application specified focus arbitrator.\n      var toArbitrate_1 = [];\n      candidates.forEach(function (candidate) {\n        var component = candidate.component; // Make sure to pass FocusableComponents only.\n\n        if (component.focus && component.blur && component.requestFocus) {\n          component.__focusCandidateInternal = candidate;\n          toArbitrate_1.push({\n            component: component,\n            accessibilityId: candidate.accessibilityId\n          });\n        }\n      });\n\n      if (toArbitrate_1.length) {\n        var candidate = arbitrator(toArbitrate_1);\n        var ret = void 0;\n\n        if (candidate && candidate.component && candidate.component.__focusCandidateInternal) {\n          ret = candidate.component.__focusCandidateInternal;\n        }\n\n        toArbitrate_1.forEach(function (candidate) {\n          delete candidate.component.__focusCandidateInternal;\n        });\n        return ret;\n      }\n    }\n\n    return candidates[candidates.length - 1];\n  };\n\n  FocusArbitratorProvider.prototype.setCallback = function (arbitrator) {\n    this._arbitratorCallback = arbitrator;\n  };\n\n  FocusArbitratorProvider.requestFocus = function (component, focus, isAvailable, type) {\n    if (_autoFocusTimer) {\n      Timers_1.default.clearTimeout(_autoFocusTimer);\n    }\n\n    var focusArbitratorProvider = component._focusArbitratorProvider instanceof FocusArbitratorProvider && component._focusArbitratorProvider || component.context && component.context.focusArbitrator || rootFocusArbitratorProvider;\n\n    focusArbitratorProvider._requestFocus(component, focus, isAvailable, type || FocusCandidateType.Focus);\n\n    _autoFocusTimer = Timers_1.default.setTimeout(function () {\n      _autoFocusTimer = undefined;\n\n      var candidate = rootFocusArbitratorProvider._arbitrate();\n\n      if (candidate) {\n        candidate.focus();\n      }\n    }, 0);\n  };\n\n  return FocusArbitratorProvider;\n}();\n\nexports.FocusArbitratorProvider = FocusArbitratorProvider;\nrootFocusArbitratorProvider = new FocusArbitratorProvider();","map":{"version":3,"sources":["/Users/dangthang/Desktop/webStreamGame/node_modules/react-ult/dist/common/utils/AutoFocusHelper.js"],"names":["Object","defineProperty","exports","value","FocusArbitratorProvider","setSortAndFilterFunc","FocusCandidateType","Timers_1","require","_sortAndFilter","_autoFocusTimer","_lastFocusArbitratorProviderId","rootFocusArbitratorProvider","sortAndFilter","view","arbitrator","_candidates","_pendingChildren","_id","_parentArbitratorProvider","context","focusArbitrator","undefined","_arbitratorCallback","prototype","_notifyParent","toString","_arbitrate","_this","candidates","keys","forEach","key","candidate","push","_requestFocus","component","focus","isAvailable","type","accessibilityId","props","filter","item","i","length","FocusFirst","toArbitrate_1","blur","requestFocus","__focusCandidateInternal","ret","setCallback","default","clearTimeout","focusArbitratorProvider","_focusArbitratorProvider","Focus","setTimeout"],"mappings":"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","sourcesContent":["\"use strict\";\r\n/**\r\n * AutoFocusHelper.ts\r\n *\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT license.\r\n *\r\n * Provides the functions which allow to handle the selection of a proper component\r\n * to focus from the multiple candidates with autoFocus=true.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.FocusArbitratorProvider = exports.setSortAndFilterFunc = exports.FocusCandidateType = void 0;\r\nvar Timers_1 = require(\"./Timers\");\r\nvar _sortAndFilter;\r\nvar _autoFocusTimer;\r\nvar _lastFocusArbitratorProviderId = 0;\r\nvar rootFocusArbitratorProvider; // eslint-disable-line prefer-const\r\nvar FocusCandidateType;\r\n(function (FocusCandidateType) {\r\n    FocusCandidateType[FocusCandidateType[\"Focus\"] = 1] = \"Focus\";\r\n    FocusCandidateType[FocusCandidateType[\"FocusFirst\"] = 2] = \"FocusFirst\";\r\n})(FocusCandidateType = exports.FocusCandidateType || (exports.FocusCandidateType = {}));\r\nfunction setSortAndFilterFunc(sortAndFilter) {\r\n    _sortAndFilter = sortAndFilter;\r\n}\r\nexports.setSortAndFilterFunc = setSortAndFilterFunc;\r\nvar FocusArbitratorProvider = /** @class */ (function () {\r\n    function FocusArbitratorProvider(view, arbitrator) {\r\n        this._candidates = [];\r\n        this._pendingChildren = {};\r\n        this._id = ++_lastFocusArbitratorProviderId;\r\n        this._parentArbitratorProvider = view\r\n            ? ((view.context && view.context.focusArbitrator) || rootFocusArbitratorProvider)\r\n            : undefined;\r\n        this._arbitratorCallback = arbitrator;\r\n    }\r\n    FocusArbitratorProvider.prototype._notifyParent = function () {\r\n        if (this._parentArbitratorProvider) {\r\n            this._parentArbitratorProvider._pendingChildren['fa-' + this._id.toString()] = this;\r\n            this._parentArbitratorProvider._notifyParent();\r\n        }\r\n    };\r\n    FocusArbitratorProvider.prototype._arbitrate = function () {\r\n        var _this = this;\r\n        var candidates = this._candidates;\r\n        Object.keys(this._pendingChildren).forEach(function (key) {\r\n            var candidate = _this._pendingChildren[key]._arbitrate();\r\n            if (candidate) {\r\n                candidates.push(candidate);\r\n            }\r\n        });\r\n        this._candidates = [];\r\n        this._pendingChildren = {};\r\n        return FocusArbitratorProvider._arbitrate(candidates, this._arbitratorCallback);\r\n    };\r\n    FocusArbitratorProvider.prototype._requestFocus = function (component, focus, isAvailable, type) {\r\n        var accessibilityId = component.props && component.props.accessibilityId;\r\n        this._candidates.push({\r\n            component: component,\r\n            focus: focus,\r\n            isAvailable: isAvailable,\r\n            type: type,\r\n            accessibilityId: accessibilityId,\r\n        });\r\n        this._notifyParent();\r\n    };\r\n    FocusArbitratorProvider._arbitrate = function (candidates, arbitrator) {\r\n        // Filtering out everything which is already unmounted.\r\n        candidates = candidates.filter(function (item) { return item.isAvailable(); });\r\n        if (_sortAndFilter) {\r\n            candidates = _sortAndFilter(candidates);\r\n        }\r\n        for (var i = 0; i < candidates.length; i++) {\r\n            if (candidates[i].type === FocusCandidateType.FocusFirst) {\r\n                return candidates[i];\r\n            }\r\n        }\r\n        if (arbitrator) {\r\n            // There is an application specified focus arbitrator.\r\n            var toArbitrate_1 = [];\r\n            candidates.forEach(function (candidate) {\r\n                var component = candidate.component;\r\n                // Make sure to pass FocusableComponents only.\r\n                if (component.focus && component.blur && component.requestFocus) {\r\n                    component.__focusCandidateInternal = candidate;\r\n                    toArbitrate_1.push({\r\n                        component: component,\r\n                        accessibilityId: candidate.accessibilityId,\r\n                    });\r\n                }\r\n            });\r\n            if (toArbitrate_1.length) {\r\n                var candidate = arbitrator(toArbitrate_1);\r\n                var ret = void 0;\r\n                if (candidate && candidate.component && candidate.component.__focusCandidateInternal) {\r\n                    ret = candidate.component.__focusCandidateInternal;\r\n                }\r\n                toArbitrate_1.forEach(function (candidate) {\r\n                    delete candidate.component.__focusCandidateInternal;\r\n                });\r\n                return ret;\r\n            }\r\n        }\r\n        return candidates[candidates.length - 1];\r\n    };\r\n    FocusArbitratorProvider.prototype.setCallback = function (arbitrator) {\r\n        this._arbitratorCallback = arbitrator;\r\n    };\r\n    FocusArbitratorProvider.requestFocus = function (component, focus, isAvailable, type) {\r\n        if (_autoFocusTimer) {\r\n            Timers_1.default.clearTimeout(_autoFocusTimer);\r\n        }\r\n        var focusArbitratorProvider = ((component._focusArbitratorProvider instanceof FocusArbitratorProvider) &&\r\n            component._focusArbitratorProvider) ||\r\n            (component.context && component.context.focusArbitrator) ||\r\n            rootFocusArbitratorProvider;\r\n        focusArbitratorProvider._requestFocus(component, focus, isAvailable, type || FocusCandidateType.Focus);\r\n        _autoFocusTimer = Timers_1.default.setTimeout(function () {\r\n            _autoFocusTimer = undefined;\r\n            var candidate = rootFocusArbitratorProvider._arbitrate();\r\n            if (candidate) {\r\n                candidate.focus();\r\n            }\r\n        }, 0);\r\n    };\r\n    return FocusArbitratorProvider;\r\n}());\r\nexports.FocusArbitratorProvider = FocusArbitratorProvider;\r\nrootFocusArbitratorProvider = new FocusArbitratorProvider();\r\n"]},"metadata":{},"sourceType":"script"}