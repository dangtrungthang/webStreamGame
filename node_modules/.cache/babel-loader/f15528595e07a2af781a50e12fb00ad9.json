{"ast":null,"code":"import n, { useRef as e, useMemo as t, useState as r, useEffect as i } from \"react\";\n\nfunction u(n, e) {\n  return n.width === e.width && n.height === e.height;\n}\n\nfunction o() {\n  return {\n    width: window.innerWidth,\n    height: window.innerHeight\n  };\n}\n\nfunction l(n) {\n  var e = n.getBoundingClientRect();\n  return {\n    width: e.width,\n    height: e.height\n  };\n}\n\nfunction c() {\n  return {\n    x: window.scrollX,\n    y: window.scrollY\n  };\n}\n\nfunction d(n) {\n  return window.scrollY + n.getBoundingClientRect().top;\n}\n\nfunction f(n) {\n  var t = e(n);\n  return t.current = n, t;\n}\n\nfunction w(n, e) {\n  if (null !== e) return \"\" + (n.rowNumber - (null !== e.firstRenderedRowNumber ? e.firstRenderedRowNumber - 1 : 0));\n}\n\nexport default function (a) {\n  var s = e(null),\n      h = function (n) {\n    var e = function () {\n      var n = r(function () {\n        return o();\n      }),\n          e = n[0],\n          t = n[1],\n          l = f(e);\n      return i(function () {\n        function n() {\n          var n = o();\n          u(l.current, n) || t(n);\n        }\n\n        return window.addEventListener(\"resize\", n), function () {\n          return window.removeEventListener(\"resize\", n);\n        };\n      }, [l]), e;\n    }(),\n        w = function () {\n      var n = r(c()),\n          e = n[0],\n          t = n[1],\n          u = f(e);\n      return i(function () {\n        function n() {\n          var n,\n              e,\n              r = c();\n          ((n = u.current).x !== (e = r).x || n.y !== e.y) && t(r);\n        }\n\n        return window.addEventListener(\"scroll\", n), window.addEventListener(\"resize\", n), function () {\n          window.removeEventListener(\"scroll\", n), window.removeEventListener(\"resize\", n);\n        };\n      }, [u]), e;\n    }(),\n        a = function (n) {\n      var e = r(function () {\n        return n.current ? d(n.current) : null;\n      }),\n          t = e[0],\n          u = e[1];\n      return i(function () {\n        var e = new ResizeObserver(function (n) {\n          u(d(n[0].target));\n        });\n        return n.current && e.observe(n.current), function () {\n          return e.disconnect();\n        };\n      }, [n]), t;\n    }(n),\n        s = function (n) {\n      var e = r(function () {\n        return n.current ? l(n.current) : null;\n      }),\n          t = e[0],\n          o = e[1],\n          c = f(t);\n      return i(function () {\n        var e = new ResizeObserver(function (n) {\n          var e = l(n[0].target);\n          null !== c.current && u(c.current, e) || o(e);\n        });\n        return n.current && e.observe(n.current), function () {\n          return e.disconnect();\n        };\n      }, [n]), t;\n    }(n);\n\n    return t(function () {\n      return {\n        windowSize: e,\n        windowScroll: w,\n        elementWindowOffset: a,\n        elementSize: s\n      };\n    }, [e, w, a, s]);\n  }(s),\n      g = function (n, e) {\n    var r = e.items,\n        i = e.getWindowMargin,\n        u = e.getGridGap,\n        o = e.getColumnCount,\n        l = e.getItemData,\n        c = n.elementSize ? n.elementSize.width : null,\n        d = t(function () {\n      return i ? i(n.windowSize.height) : n.windowSize.height;\n    }, [n.windowSize.height, i]),\n        f = t(function () {\n      return null === c ? null : u ? u(c, n.windowSize.height) : 0;\n    }, [c, n.windowSize.height, u]),\n        w = t(function () {\n      return null === c ? null : null === f ? null : o(c, f);\n    }, [o, c, f]),\n        a = function (n, e, t) {\n      return null === n || null === e || null === t ? null : Math.round((t - (n - 1) * e) / n);\n    }(w, f, c),\n        s = t(function () {\n      if (null === a) return null;\n      var n = a;\n      return r.map(function (e) {\n        return {\n          data: l(e, n),\n          item: e\n        };\n      });\n    }, [r, a, l]);\n\n    return t(function () {\n      return null === d || null === f || null === w || null === s ? null : {\n        windowMargin: d,\n        gridGap: f,\n        columnCount: w,\n        entries: s\n      };\n    }, [d, f, w, s]);\n  }(h, a),\n      m = function (n) {\n    return t(function () {\n      if (null === n) return null;\n      var e = 1,\n          t = 0,\n          r = 0,\n          i = n.entries.map(function (i, u) {\n        var o = i.data.key,\n            l = u % n.columnCount + 1,\n            c = Math.floor(u / n.columnCount) + 1;\n        c !== e && (e = c, t += r + n.gridGap, r = 0);\n        var d = t,\n            f = Math.round(i.data.height);\n        return r = Math.max(r, f), {\n          key: o,\n          columnNumber: l,\n          rowNumber: c,\n          offset: d,\n          height: f,\n          item: i.item\n        };\n      });\n      return {\n        totalHeight: t + r,\n        cells: i\n      };\n    }, [n]);\n  }(g),\n      v = function (n, e, r) {\n    return t(function () {\n      if (null === r || null === e) return null;\n      var t = [],\n          i = null,\n          u = null;\n      if (null !== n.elementWindowOffset) for (var o = n.elementWindowOffset, l = 0, c = r.cells; l < c.length; l += 1) {\n        var d = c[l],\n            f = o + d.offset,\n            w = n.windowScroll.y;\n        f > w + n.windowSize.height + e.windowMargin || f + d.height < w - e.windowMargin || (null === i && (i = d.rowNumber), d.rowNumber === i && (u = u ? Math.min(u, d.offset) : d.offset), t.push(d));\n      }\n      return {\n        cellsToRender: t,\n        firstRenderedRowNumber: i,\n        firstRenderedRowOffset: u\n      };\n    }, [r, e, n.windowScroll.y, n.windowSize.height, n.elementWindowOffset]);\n  }(h, g, m),\n      p = function (n, e) {\n    var t = r(!1),\n        u = t[0],\n        o = t[1];\n    return i(function () {\n      var t = new IntersectionObserver(function (n) {\n        o(n[0].isIntersecting);\n      }, {\n        rootMargin: e\n      });\n      return n.current && t.observe(n.current), function () {\n        return t.disconnect();\n      };\n    }, [n, e]), u;\n  }(s, (null !== g ? g.windowMargin : 0) + \"px\");\n\n  return n.createElement(\"div\", {\n    ref: s,\n    style: {\n      boxSizing: \"border-box\",\n      height: null !== m ? m.totalHeight : void 0,\n      paddingTop: null !== v && null !== v.firstRenderedRowOffset ? v.firstRenderedRowOffset : 0\n    }\n  }, p && n.createElement(\"div\", {\n    style: {\n      display: \"grid\",\n      gridTemplateColumns: null !== g ? \"repeat(\" + g.columnCount + \", \" + (a.fixedColumnWidth ? a.fixedColumnWidth + \"px\" : \"1fr\") + \")\" : void 0,\n      gridGap: g ? g.gridGap : void 0,\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    }\n  }, null !== v && v.cellsToRender.map(function (e) {\n    return n.createElement(\"div\", {\n      key: e.key,\n      style: {\n        height: e.height,\n        gridColumnStart: \"\" + e.columnNumber,\n        gridRowStart: w(e, v)\n      }\n    }, a.renderItem(e.item));\n  })));\n}","map":{"version":3,"sources":["../src/GridList.tsx"],"names":["isSameElementSize","a","b","width","height","getWindowSize","window","innerWidth","innerHeight","getElementSize","element","rect","getBoundingClientRect","x","y","getWindowScroll","scrollX","scrollY","getElementOffset","top","useConstRef","value","ref","useRef","current","useState","windowSizeRef","windowSize","useEffect","onResize","nextWindowSize","setWindowSize","addEventListener","removeEventListener","elementSizeRef","elementSize","observer","ResizeObserver","entries","nextElementSize","target","setElementSize","observe","disconnect","scrollPosition","update","nextScrollPosition","setScrollPosition","setElementOffset","elementOffset","rootMargin","IntersectionObserver","setIntersecting","isIntersecting","intersecting","columnCount","gridGap","elementWidth","Math","round","getGridRowStart","cell","renderData","firstRenderedRowNumber","rowNumber","useWindowSize","windowScroll","useWindowScroll","elementWindowOffset","useElementWindowOffset","useElementSize","useMemo","containerData","props","items","windowMargin","getWindowMargin","getGridGap","getColumnCount","columnWidth","getColumnWidth","safeColumnWidth","map","item","data","getItemData","configData","currentRowNumber","prevRowsTotalHeight","currentRowMaxHeight","cells","entry","index","key","columnNumber","floor","offset","max","layoutData","cellsToRender","firstRenderedRowOffset","let","cellTop","windowTop","min","push","useGridListContainerData","useGridListConfigData","useGridListLayoutData","useGridListRenderData","useIntersecting","fixedColumnWidth","React","style","boxSizing","totalHeight","undefined","paddingTop","display","gridTemplateColumns","justifyContent","alignItems","gridColumnStart","gridRowStart","renderItem"],"mappings":"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","sourcesContent":["import React, {\n\tuseRef,\n\tuseMemo,\n\tuseState,\n\tuseEffect,\n\tRefObject,\n\tMutableRefObject,\n} from \"react\"\n\n/**\n * ============================================================================\n * Generic Types\n * ============================================================================\n */\n\ntype ConstRef<T> = Readonly<MutableRefObject<T>>\n\ninterface ElementSize {\n\twidth: number\n\theight: number\n}\n\ninterface ElementScroll {\n\tx: number\n\ty: number\n}\n\n/**\n * ============================================================================\n * Generic Utils\n * ============================================================================\n */\n\nfunction isSameElementSize(a: ElementSize, b: ElementSize) {\n\treturn a.width === b.width && a.height === b.height\n}\n\nfunction getWindowSize(): ElementSize {\n\treturn {\n\t\twidth: window.innerWidth,\n\t\theight: window.innerHeight,\n\t}\n}\n\nfunction getElementSize(element: Element): ElementSize {\n\tlet rect = element.getBoundingClientRect()\n\treturn {\n\t\twidth: rect.width,\n\t\theight: rect.height,\n\t}\n}\n\nfunction isSameElementScroll(a: ElementScroll, b: ElementScroll) {\n\treturn a.x === b.x && a.y === b.y\n}\n\nfunction getWindowScroll(): ElementScroll {\n\treturn {\n\t\tx: window.scrollX,\n\t\ty: window.scrollY,\n\t}\n}\n\nfunction getElementOffset(element: Element) {\n\treturn window.scrollY + element.getBoundingClientRect().top\n}\n\n/**\n * ============================================================================\n * Utility Hooks\n * ============================================================================\n */\n\nfunction useConstRef<T>(value: T): ConstRef<T> {\n\tlet ref = useRef(value)\n\tref.current = value\n\treturn ref\n}\n\nfunction useWindowSize(): ElementSize {\n\tlet [windowSize, setWindowSize] = useState(() => getWindowSize())\n\tlet windowSizeRef = useConstRef(windowSize)\n\n\tuseEffect(() => {\n\t\tfunction onResize() {\n\t\t\tlet nextWindowSize = getWindowSize()\n\t\t\tif (!isSameElementSize(windowSizeRef.current, nextWindowSize)) {\n\t\t\t\tsetWindowSize(nextWindowSize)\n\t\t\t}\n\t\t}\n\t\twindow.addEventListener(\"resize\", onResize)\n\t\treturn () => window.removeEventListener(\"resize\", onResize)\n\t}, [windowSizeRef])\n\n\treturn windowSize\n}\n\nfunction useElementSize(ref: RefObject<Element>): ElementSize | null {\n\tlet [elementSize, setElementSize] = useState(() => {\n\t\tif (ref.current) {\n\t\t\treturn getElementSize(ref.current)\n\t\t} else {\n\t\t\treturn null\n\t\t}\n\t})\n\n\tlet elementSizeRef = useConstRef(elementSize)\n\n\tuseEffect(() => {\n\t\tlet observer = new ResizeObserver((entries) => {\n\t\t\tlet nextElementSize = getElementSize(entries[0].target)\n\t\t\tif (\n\t\t\t\telementSizeRef.current === null ||\n\t\t\t\t!isSameElementSize(elementSizeRef.current, nextElementSize)\n\t\t\t) {\n\t\t\t\tsetElementSize(nextElementSize)\n\t\t\t}\n\t\t})\n\t\tif (ref.current) observer.observe(ref.current)\n\t\treturn () => observer.disconnect()\n\t}, [ref])\n\n\treturn elementSize\n}\n\nfunction useWindowScroll(): ElementScroll {\n\tlet [scrollPosition, setScrollPosition] = useState(getWindowScroll())\n\tlet ref = useConstRef(scrollPosition)\n\n\tuseEffect(() => {\n\t\tfunction update() {\n\t\t\tlet nextScrollPosition = getWindowScroll()\n\t\t\tif (!isSameElementScroll(ref.current, nextScrollPosition)) {\n\t\t\t\tsetScrollPosition(nextScrollPosition)\n\t\t\t}\n\t\t}\n\n\t\twindow.addEventListener(\"scroll\", update)\n\t\twindow.addEventListener(\"resize\", update)\n\n\t\treturn () => {\n\t\t\twindow.removeEventListener(\"scroll\", update)\n\t\t\twindow.removeEventListener(\"resize\", update)\n\t\t}\n\t}, [ref])\n\n\treturn scrollPosition\n}\n\nfunction useElementWindowOffset(ref: RefObject<HTMLElement>) {\n\tlet [elementOffset, setElementOffset] = useState(() => {\n\t\tif (ref.current) {\n\t\t\treturn getElementOffset(ref.current)\n\t\t} else {\n\t\t\treturn null\n\t\t}\n\t})\n\n\tuseEffect(() => {\n\t\tlet observer = new ResizeObserver((entries) => {\n\t\t\tsetElementOffset(getElementOffset(entries[0].target))\n\t\t})\n\t\tif (ref.current) observer.observe(ref.current)\n\t\treturn () => observer.disconnect()\n\t}, [ref])\n\n\treturn elementOffset\n}\n\nfunction useIntersecting(ref: RefObject<HTMLElement>, rootMargin: string) {\n\tlet [intersecting, setIntersecting] = useState(false)\n\n\tuseEffect(() => {\n\t\tlet observer = new IntersectionObserver(\n\t\t\t(entries) => {\n\t\t\t\tsetIntersecting(entries[0].isIntersecting)\n\t\t\t},\n\t\t\t{ rootMargin },\n\t\t)\n\t\tif (ref.current) observer.observe(ref.current)\n\t\treturn () => observer.disconnect()\n\t}, [ref, rootMargin])\n\n\treturn intersecting\n}\n\n/**\n * ============================================================================\n * GridList Types\n * ============================================================================\n */\n\ninterface GridListItemData {\n\tkey: string\n\theight: number\n}\n\ninterface GridListEntry<P> {\n\titem: P\n\tdata: GridListItemData\n}\n\ninterface GridListConfigData<P> {\n\twindowMargin: number\n\tgridGap: number\n\tcolumnCount: number\n\tentries: GridListEntry<P>[]\n}\n\ninterface GridListContainerData {\n\twindowSize: ElementSize\n\telementSize: ElementSize | null\n\twindowScroll: ElementScroll\n\telementWindowOffset: number | null\n}\n\ninterface GridListCell<P> {\n\tkey: string\n\tcolumnNumber: number\n\trowNumber: number\n\toffset: number\n\theight: number\n\titem: P\n}\n\ninterface GridListLayoutData<P> {\n\ttotalHeight: number\n\tcells: GridListCell<P>[]\n}\n\ninterface GridListRenderData<P> {\n\tcellsToRender: GridListCell<P>[]\n\tfirstRenderedRowNumber: number | null\n\tfirstRenderedRowOffset: number | null\n}\n\n/**\n * ============================================================================\n * GridList Utils\n * ============================================================================\n */\n\nfunction getColumnWidth(\n\tcolumnCount: number | null,\n\tgridGap: number | null,\n\telementWidth: number | null,\n) {\n\tif (columnCount === null || gridGap === null || elementWidth === null) {\n\t\treturn null\n\t}\n\n\tlet totalGapSpace = (columnCount - 1) * gridGap\n\tlet columnWidth = Math.round((elementWidth - totalGapSpace) / columnCount)\n\n\treturn columnWidth\n}\n\nfunction getGridRowStart<P>(\n\tcell: GridListCell<P>,\n\trenderData: GridListRenderData<P> | null,\n) {\n\tif (renderData === null) return undefined\n\n\tlet offset =\n\t\trenderData.firstRenderedRowNumber !== null\n\t\t\t? renderData.firstRenderedRowNumber - 1\n\t\t\t: 0\n\tlet gridRowStart = cell.rowNumber - offset\n\n\treturn `${gridRowStart}`\n}\n\n/**\n * ============================================================================\n * GridList Hooks\n * ============================================================================\n */\n\nfunction useGridListContainerData(\n\tref: RefObject<HTMLElement>,\n): GridListContainerData {\n\tlet windowSize = useWindowSize()\n\tlet windowScroll = useWindowScroll()\n\tlet elementWindowOffset = useElementWindowOffset(ref)\n\tlet elementSize = useElementSize(ref)\n\n\treturn useMemo(() => {\n\t\treturn {\n\t\t\twindowSize,\n\t\t\twindowScroll,\n\t\t\telementWindowOffset,\n\t\t\telementSize,\n\t\t}\n\t}, [windowSize, windowScroll, elementWindowOffset, elementSize])\n}\n\nfunction useGridListConfigData<P>(\n\tcontainerData: GridListContainerData,\n\tprops: GridListProps<P>,\n): GridListConfigData<P> | null {\n\tlet {\n\t\titems,\n\t\tgetWindowMargin,\n\t\tgetGridGap,\n\t\tgetColumnCount,\n\t\tgetItemData,\n\t} = props\n\n\tlet elementWidth = containerData.elementSize\n\t\t? containerData.elementSize.width\n\t\t: null\n\n\tlet windowMargin = useMemo(() => {\n\t\tif (getWindowMargin) {\n\t\t\treturn getWindowMargin(containerData.windowSize.height)\n\t\t} else {\n\t\t\treturn containerData.windowSize.height\n\t\t}\n\t}, [containerData.windowSize.height, getWindowMargin])\n\n\tlet gridGap = useMemo(() => {\n\t\tif (elementWidth === null) return null\n\t\tif (getGridGap) {\n\t\t\treturn getGridGap(elementWidth, containerData.windowSize.height)\n\t\t} else {\n\t\t\treturn 0\n\t\t}\n\t}, [elementWidth, containerData.windowSize.height, getGridGap])\n\n\tlet columnCount = useMemo(() => {\n\t\tif (elementWidth === null) return null\n\t\tif (gridGap === null) return null\n\t\treturn getColumnCount(elementWidth, gridGap)\n\t}, [getColumnCount, elementWidth, gridGap])\n\n\tlet columnWidth = getColumnWidth(columnCount, gridGap, elementWidth)\n\n\tlet entries = useMemo(() => {\n\t\tif (columnWidth === null) return null\n\t\tlet safeColumnWidth = columnWidth\n\t\treturn items.map((item) => {\n\t\t\treturn {\n\t\t\t\tdata: getItemData(item, safeColumnWidth),\n\t\t\t\titem,\n\t\t\t}\n\t\t})\n\t}, [items, columnWidth, getItemData])\n\n\treturn useMemo(() => {\n\t\tif (\n\t\t\twindowMargin === null ||\n\t\t\tgridGap === null ||\n\t\t\tcolumnCount === null ||\n\t\t\tentries === null\n\t\t) {\n\t\t\treturn null\n\t\t}\n\t\treturn {\n\t\t\twindowMargin,\n\t\t\tgridGap,\n\t\t\tcolumnCount,\n\t\t\tentries,\n\t\t}\n\t}, [windowMargin, gridGap, columnCount, entries])\n}\n\nfunction useGridListLayoutData<P>(\n\tconfigData: GridListConfigData<P> | null,\n): GridListLayoutData<P> | null {\n\treturn useMemo(() => {\n\t\tif (configData === null) return null\n\n\t\tlet currentRowNumber = 1\n\t\tlet prevRowsTotalHeight = 0\n\t\tlet currentRowMaxHeight = 0\n\n\t\tlet cells = configData.entries.map((entry, index) => {\n\t\t\tlet key = entry.data.key\n\n\t\t\tlet columnNumber = (index % configData.columnCount) + 1\n\t\t\tlet rowNumber = Math.floor(index / configData.columnCount) + 1\n\n\t\t\tif (rowNumber !== currentRowNumber) {\n\t\t\t\tcurrentRowNumber = rowNumber\n\t\t\t\tprevRowsTotalHeight += currentRowMaxHeight + configData.gridGap\n\t\t\t\tcurrentRowMaxHeight = 0\n\t\t\t}\n\n\t\t\tlet offset = prevRowsTotalHeight\n\t\t\tlet height = Math.round(entry.data.height)\n\n\t\t\tcurrentRowMaxHeight = Math.max(currentRowMaxHeight, height)\n\n\t\t\treturn { key, columnNumber, rowNumber, offset, height, item: entry.item }\n\t\t})\n\n\t\tlet totalHeight = prevRowsTotalHeight + currentRowMaxHeight\n\n\t\treturn { totalHeight, cells }\n\t}, [configData])\n}\n\nfunction useGridListRenderData<P>(\n\tcontainerData: GridListContainerData,\n\tconfigData: GridListConfigData<P> | null,\n\tlayoutData: GridListLayoutData<P> | null,\n): GridListRenderData<P> | null {\n\treturn useMemo(() => {\n\t\tif (layoutData === null || configData === null) return null\n\t\tlet cellsToRender: GridListCell<P>[] = []\n\t\tlet firstRenderedRowNumber: null | number = null\n\t\tlet firstRenderedRowOffset: null | number = null\n\n\t\tif (containerData.elementWindowOffset !== null) {\n\t\t\tlet elementWindowOffset = containerData.elementWindowOffset\n\n\t\t\tfor (let cell of layoutData.cells) {\n\t\t\t\tlet cellTop = elementWindowOffset + cell.offset\n\t\t\t\tlet cellBottom = cellTop + cell.height\n\n\t\t\t\tlet windowTop = containerData.windowScroll.y\n\t\t\t\tlet windowBottom = windowTop + containerData.windowSize.height\n\n\t\t\t\tlet renderTop = windowTop - configData.windowMargin\n\t\t\t\tlet renderBottom = windowBottom + configData.windowMargin\n\n\t\t\t\tif (cellTop > renderBottom) continue\n\t\t\t\tif (cellBottom < renderTop) continue\n\n\t\t\t\tif (firstRenderedRowNumber === null) {\n\t\t\t\t\tfirstRenderedRowNumber = cell.rowNumber\n\t\t\t\t}\n\n\t\t\t\tif (cell.rowNumber === firstRenderedRowNumber) {\n\t\t\t\t\tfirstRenderedRowOffset = firstRenderedRowOffset\n\t\t\t\t\t\t? Math.min(firstRenderedRowOffset, cell.offset)\n\t\t\t\t\t\t: cell.offset\n\t\t\t\t}\n\n\t\t\t\tcellsToRender.push(cell)\n\t\t\t}\n\t\t}\n\n\t\treturn { cellsToRender, firstRenderedRowNumber, firstRenderedRowOffset }\n\t}, [\n\t\tlayoutData,\n\t\tconfigData,\n\t\tcontainerData.windowScroll.y,\n\t\tcontainerData.windowSize.height,\n\t\tcontainerData.elementWindowOffset,\n\t])\n}\n\n/**\n * ============================================================================\n * GridList\n * ============================================================================\n */\n\nexport interface GridListProps<P> {\n\titems: P[]\n\tgetGridGap?: (elementWidth: number, windowHeight: number) => number\n\tgetWindowMargin?: (windowHeight: number) => number\n\tgetColumnCount: (elementWidth: number, gridGap: number) => number\n\tgetItemData: (item: P, columnWidth: number) => GridListItemData\n\trenderItem: (item: P) => React.ReactNode\n\tfixedColumnWidth?: number\n}\n\nexport default function GridList<P>(props: GridListProps<P>) {\n\tlet ref = useRef<HTMLDivElement>(null)\n\n\tlet containerData = useGridListContainerData(ref)\n\tlet configData = useGridListConfigData(containerData, props)\n\tlet layoutData = useGridListLayoutData(configData)\n\tlet renderData = useGridListRenderData(containerData, configData, layoutData)\n\n\tlet intersecting = useIntersecting(\n\t\tref,\n\t\t`${configData !== null ? configData.windowMargin : 0}px`,\n\t)\n\n\tconst colWidth = props.fixedColumnWidth\n\t\t? `${props.fixedColumnWidth}px`\n\t\t: \"1fr\"\n\n\treturn (\n\t\t<div\n\t\t\tref={ref}\n\t\t\tstyle={{\n\t\t\t\tboxSizing: \"border-box\",\n\t\t\t\theight: layoutData !== null ? layoutData.totalHeight : undefined,\n\t\t\t\tpaddingTop:\n\t\t\t\t\trenderData !== null && renderData.firstRenderedRowOffset !== null\n\t\t\t\t\t\t? renderData.firstRenderedRowOffset\n\t\t\t\t\t\t: 0,\n\t\t\t}}\n\t\t>\n\t\t\t{intersecting && (\n\t\t\t\t<div\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tdisplay: \"grid\",\n\t\t\t\t\t\tgridTemplateColumns:\n\t\t\t\t\t\t\tconfigData !== null\n\t\t\t\t\t\t\t\t? `repeat(${configData.columnCount}, ${colWidth})`\n\t\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\t\tgridGap: configData ? configData.gridGap : undefined,\n\t\t\t\t\t\tjustifyContent: \"center\",\n\t\t\t\t\t\talignItems: \"center\",\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{renderData !== null &&\n\t\t\t\t\t\trenderData.cellsToRender.map((cell) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tkey={cell.key}\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\theight: cell.height,\n\t\t\t\t\t\t\t\t\t\tgridColumnStart: `${cell.columnNumber}`,\n\t\t\t\t\t\t\t\t\t\tgridRowStart: getGridRowStart(cell, renderData),\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{props.renderItem(cell.item)}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t)\n}\n"]},"metadata":{},"sourceType":"module"}