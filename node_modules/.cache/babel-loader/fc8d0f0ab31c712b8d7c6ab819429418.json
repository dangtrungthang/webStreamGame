{"ast":null,"code":"\"use strict\";\n/**\r\n * StatusBar.ts\r\n *\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT license.\r\n *\r\n * Web-specific implementation of the cross-platform status bar.\r\n */\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StatusBar = void 0;\n\nvar RX = require(\"../common/Interfaces\");\n\nvar StatusBar =\n/** @class */\nfunction (_super) {\n  __extends(StatusBar, _super);\n\n  function StatusBar() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  StatusBar.prototype.isOverlay = function () {\n    return false;\n  };\n\n  StatusBar.prototype.setBarStyle = function (style, animated) {// Nothing to do on Web\n  };\n\n  StatusBar.prototype.setHidden = function (hidden, showHideTransition) {// Nothing to do on Web\n  };\n\n  StatusBar.prototype.setNetworkActivityIndicatorVisible = function (value) {// Nothing to do on the web\n  };\n\n  StatusBar.prototype.setBackgroundColor = function (color, animated) {// Nothing to do on the web\n  };\n\n  StatusBar.prototype.setTranslucent = function (translucent) {// Nothing to do on the web\n  };\n\n  return StatusBar;\n}(RX.StatusBar);\n\nexports.StatusBar = StatusBar;\nexports.default = new StatusBar();","map":{"version":3,"sources":["/Users/trungthang/webStreamGame/webStreamGame/node_modules/react-ult/dist/web/StatusBar.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__","constructor","create","defineProperty","exports","value","StatusBar","RX","require","_super","apply","arguments","isOverlay","setBarStyle","style","animated","setHidden","hidden","showHideTransition","setNetworkActivityIndicatorVisible","setBackgroundColor","color","setTranslucent","translucent","default"],"mappings":"AAAA;AACA;;;;;;;;;AAQA,IAAIA,SAAS,GAAI,QAAQ,KAAKA,SAAd,IAA6B,YAAY;AACrD,MAAIC,aAAa,GAAG,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAChCF,IAAAA,aAAa,GAAGG,MAAM,CAACC,cAAP,IACX;AAAEC,MAAAA,SAAS,EAAE;AAAb,iBAA6BC,KAA7B,IAAsC,UAAUL,CAAV,EAAaC,CAAb,EAAgB;AAAED,MAAAA,CAAC,CAACI,SAAF,GAAcH,CAAd;AAAkB,KAD/D,IAEZ,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AAAE,WAAK,IAAIK,CAAT,IAAcL,CAAd,EAAiB,IAAIC,MAAM,CAACK,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCR,CAArC,EAAwCK,CAAxC,CAAJ,EAAgDN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;AAAc,KAFrG;;AAGA,WAAOP,aAAa,CAACC,CAAD,EAAIC,CAAJ,CAApB;AACH,GALD;;AAMA,SAAO,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AACnBF,IAAAA,aAAa,CAACC,CAAD,EAAIC,CAAJ,CAAb;;AACA,aAASS,EAAT,GAAc;AAAE,WAAKC,WAAL,GAAmBX,CAAnB;AAAuB;;AACvCA,IAAAA,CAAC,CAACO,SAAF,GAAcN,CAAC,KAAK,IAAN,GAAaC,MAAM,CAACU,MAAP,CAAcX,CAAd,CAAb,IAAiCS,EAAE,CAACH,SAAH,GAAeN,CAAC,CAACM,SAAjB,EAA4B,IAAIG,EAAJ,EAA7D,CAAd;AACH,GAJD;AAKH,CAZ2C,EAA5C;;AAaAR,MAAM,CAACW,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,SAAR,GAAoB,KAAK,CAAzB;;AACA,IAAIC,EAAE,GAAGC,OAAO,CAAC,sBAAD,CAAhB;;AACA,IAAIF,SAAS;AAAG;AAAe,UAAUG,MAAV,EAAkB;AAC7CrB,EAAAA,SAAS,CAACkB,SAAD,EAAYG,MAAZ,CAAT;;AACA,WAASH,SAAT,GAAqB;AACjB,WAAOG,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACC,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAnB,IAAoD,IAA3D;AACH;;AACDL,EAAAA,SAAS,CAACT,SAAV,CAAoBe,SAApB,GAAgC,YAAY;AACxC,WAAO,KAAP;AACH,GAFD;;AAGAN,EAAAA,SAAS,CAACT,SAAV,CAAoBgB,WAApB,GAAkC,UAAUC,KAAV,EAAiBC,QAAjB,EAA2B,CACzD;AACH,GAFD;;AAGAT,EAAAA,SAAS,CAACT,SAAV,CAAoBmB,SAApB,GAAgC,UAAUC,MAAV,EAAkBC,kBAAlB,EAAsC,CAClE;AACH,GAFD;;AAGAZ,EAAAA,SAAS,CAACT,SAAV,CAAoBsB,kCAApB,GAAyD,UAAUd,KAAV,EAAiB,CACtE;AACH,GAFD;;AAGAC,EAAAA,SAAS,CAACT,SAAV,CAAoBuB,kBAApB,GAAyC,UAAUC,KAAV,EAAiBN,QAAjB,EAA2B,CAChE;AACH,GAFD;;AAGAT,EAAAA,SAAS,CAACT,SAAV,CAAoByB,cAApB,GAAqC,UAAUC,WAAV,EAAuB,CACxD;AACH,GAFD;;AAGA,SAAOjB,SAAP;AACH,CAxB8B,CAwB7BC,EAAE,CAACD,SAxB0B,CAA/B;;AAyBAF,OAAO,CAACE,SAAR,GAAoBA,SAApB;AACAF,OAAO,CAACoB,OAAR,GAAkB,IAAIlB,SAAJ,EAAlB","sourcesContent":["\"use strict\";\r\n/**\r\n * StatusBar.ts\r\n *\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT license.\r\n *\r\n * Web-specific implementation of the cross-platform status bar.\r\n */\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.StatusBar = void 0;\r\nvar RX = require(\"../common/Interfaces\");\r\nvar StatusBar = /** @class */ (function (_super) {\r\n    __extends(StatusBar, _super);\r\n    function StatusBar() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    StatusBar.prototype.isOverlay = function () {\r\n        return false;\r\n    };\r\n    StatusBar.prototype.setBarStyle = function (style, animated) {\r\n        // Nothing to do on Web\r\n    };\r\n    StatusBar.prototype.setHidden = function (hidden, showHideTransition) {\r\n        // Nothing to do on Web\r\n    };\r\n    StatusBar.prototype.setNetworkActivityIndicatorVisible = function (value) {\r\n        // Nothing to do on the web\r\n    };\r\n    StatusBar.prototype.setBackgroundColor = function (color, animated) {\r\n        // Nothing to do on the web\r\n    };\r\n    StatusBar.prototype.setTranslucent = function (translucent) {\r\n        // Nothing to do on the web\r\n    };\r\n    return StatusBar;\r\n}(RX.StatusBar));\r\nexports.StatusBar = StatusBar;\r\nexports.default = new StatusBar();\r\n"]},"metadata":{},"sourceType":"script"}