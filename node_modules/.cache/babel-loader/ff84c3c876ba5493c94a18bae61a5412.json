{"ast":null,"code":"\"use strict\";\n/**\r\n * Timers.ts\r\n *\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT license.\r\n *\r\n * Utility functions for creating timers. We wrap the normal\r\n * global timer methods because they are defined in both\r\n * the node and lib type definition files, and the definitions\r\n * don't match. Depending on which one TypeScript picks up,\r\n * we can get compiler errors.\r\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar timerProvider = typeof window !== 'undefined' ? window : global;\n\nvar Timers =\n/** @class */\nfunction () {\n  function Timers() {}\n\n  Timers.clearInterval = function (handle) {\n    timerProvider.clearInterval(handle);\n  };\n\n  Timers.clearTimeout = function (handle) {\n    timerProvider.clearTimeout(handle);\n  };\n\n  Timers.setInterval = function (handler, timeout) {\n    return timerProvider.setInterval(handler, timeout);\n  };\n\n  Timers.setTimeout = function (handler, timeout) {\n    return timerProvider.setTimeout(handler, timeout);\n  };\n\n  return Timers;\n}();\n\nexports.default = Timers;","map":{"version":3,"sources":["/Users/dangthang/Desktop/webStreamGame/node_modules/react-ult/dist/common/utils/Timers.js"],"names":["Object","defineProperty","exports","value","timerProvider","window","global","Timers","clearInterval","handle","clearTimeout","setInterval","handler","timeout","setTimeout","default"],"mappings":"AAAA;AACA;;;;;;;;;;;;;AAYAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACA,IAAIC,aAAa,GAAG,OAAOC,MAAP,KAAkB,WAAlB,GAAgCA,MAAhC,GAAyCC,MAA7D;;AACA,IAAIC,MAAM;AAAG;AAAe,YAAY;AACpC,WAASA,MAAT,GAAkB,CACjB;;AACDA,EAAAA,MAAM,CAACC,aAAP,GAAuB,UAAUC,MAAV,EAAkB;AACrCL,IAAAA,aAAa,CAACI,aAAd,CAA4BC,MAA5B;AACH,GAFD;;AAGAF,EAAAA,MAAM,CAACG,YAAP,GAAsB,UAAUD,MAAV,EAAkB;AACpCL,IAAAA,aAAa,CAACM,YAAd,CAA2BD,MAA3B;AACH,GAFD;;AAGAF,EAAAA,MAAM,CAACI,WAAP,GAAqB,UAAUC,OAAV,EAAmBC,OAAnB,EAA4B;AAC7C,WAAOT,aAAa,CAACO,WAAd,CAA0BC,OAA1B,EAAmCC,OAAnC,CAAP;AACH,GAFD;;AAGAN,EAAAA,MAAM,CAACO,UAAP,GAAoB,UAAUF,OAAV,EAAmBC,OAAnB,EAA4B;AAC5C,WAAOT,aAAa,CAACU,UAAd,CAAyBF,OAAzB,EAAkCC,OAAlC,CAAP;AACH,GAFD;;AAGA,SAAON,MAAP;AACH,CAhB2B,EAA5B;;AAiBAL,OAAO,CAACa,OAAR,GAAkBR,MAAlB","sourcesContent":["\"use strict\";\r\n/**\r\n * Timers.ts\r\n *\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT license.\r\n *\r\n * Utility functions for creating timers. We wrap the normal\r\n * global timer methods because they are defined in both\r\n * the node and lib type definition files, and the definitions\r\n * don't match. Depending on which one TypeScript picks up,\r\n * we can get compiler errors.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar timerProvider = typeof window !== 'undefined' ? window : global;\r\nvar Timers = /** @class */ (function () {\r\n    function Timers() {\r\n    }\r\n    Timers.clearInterval = function (handle) {\r\n        timerProvider.clearInterval(handle);\r\n    };\r\n    Timers.clearTimeout = function (handle) {\r\n        timerProvider.clearTimeout(handle);\r\n    };\r\n    Timers.setInterval = function (handler, timeout) {\r\n        return timerProvider.setInterval(handler, timeout);\r\n    };\r\n    Timers.setTimeout = function (handler, timeout) {\r\n        return timerProvider.setTimeout(handler, timeout);\r\n    };\r\n    return Timers;\r\n}());\r\nexports.default = Timers;\r\n"]},"metadata":{},"sourceType":"script"}